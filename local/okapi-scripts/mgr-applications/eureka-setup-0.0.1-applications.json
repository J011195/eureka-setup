{
    "id": "eureka-setup-0.0.1",
    "version": "0.0.1",
    "name": "eureka-setup",
    "description": "Eureka development environment setup Docker compose scripts",
    "modules": [
        {
            "name": "mod-login-keycloak",
            "version": "1.0.0"
        },
        {
            "name": "mod-users-keycloak",
            "version": "1.0.0"
        },
        {
            "name": "mod-roles-keycloak",
            "version": "1.0.0"
        },
        {
            "name": "mod-tags",
            "version": "2.2.0"
        },
        {
            "name": "mod-notes",
            "version": "5.2.0"
        },
        {
            "name": "mod-login",
            "version": "7.11.0"
        },
        {
            "name": "mod-users",
            "version": "19.3.1"
        },
        {
            "name": "mod-pubsub",
            "version": "2.13.0"
        },
        {
            "name": "mod-settings",
            "version": "1.0.3"
        },
        {
            "name": "mod-users-bl",
            "version": "7.7.0"
        },
        {
            "name": "mod-authtoken",
            "version": "2.15.1"
        },
        {
            "name": "mod-permissions",
            "version": "6.5.0"
        },
        {
            "name": "mod-configuration",
            "version": "5.10.0"
        },
        {
            "name": "mod-inventory-storage",
            "version": "27.1.0"
        },
        {
            "name": "mod-password-validator",
            "version": "3.2.0"
        },
        {
            "name": "mod-circulation-storage",
            "version": "17.2.0"
        }
    ],
    "moduleDescriptors": [
        {
            "id": "mod-login-keycloak-1.0.0",
            "name": "keycloak-login",
            "provides": [
                {
                    "id": "login",
                    "version": "7.3",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/authn/log/events",
                            "permissionsRequired": [
                                "login.event.collection.post"
                            ],
                            "modulePermissions": [
                                "users.collection.get",
                                "configuration.entries.collection.get",
                                "configuration.entries.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/authn/log/events",
                            "permissionsRequired": [
                                "login.event.collection.get"
                            ],
                            "modulePermissions": [
                                "configuration.entries.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/authn/log/events/{id}",
                            "permissionsRequired": [
                                "login.event.delete"
                            ],
                            "modulePermissions": [
                                "configuration.entries.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/authn/token",
                            "permissionsRequired": [],
                            "modulePermissions": []
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/authn/login",
                            "permissionsRequired": [],
                            "modulePermissions": [
                                "users.collection.get",
                                "users.item.put",
                                "users.item.get",
                                "configuration.entries.collection.get",
                                "user-tenants.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/authn/login-with-expiry",
                            "permissionsRequired": [],
                            "modulePermissions": [
                                "users.collection.get",
                                "users.item.put",
                                "users.item.get",
                                "configuration.entries.collection.get",
                                "user-tenants.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/authn/logout",
                            "permissionsRequired": []
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/authn/logout-all",
                            "permissionsRequired": []
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/authn/refresh",
                            "permissionsRequired": []
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/authn/loginAttempts/{id}",
                            "permissionsRequired": [
                                "login.attempts.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/authn/credentials",
                            "permissionsRequired": [
                                "login.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/authn/credentials",
                            "permissionsRequired": [
                                "login.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/authn/update",
                            "permissionsRequired": [],
                            "modulePermissions": [
                                "users.collection.get",
                                "configuration.entries.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/authn/password/repeatable",
                            "permissionsRequired": [
                                "login.password.validate"
                            ],
                            "modulePermissions": [
                                "configuration.entries.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/authn/password-reset-action",
                            "permissionsRequired": [
                                "login.password-reset-action.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/authn/password-reset-action/{actionId}",
                            "permissionsRequired": [
                                "login.password-reset-action.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/authn/reset-password",
                            "permissionsRequired": [
                                "login.password-reset.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/authn/credentials-existence",
                            "permissionsRequired": [
                                "login.credentials-existence.get"
                            ]
                        }
                    ]
                },
                {
                    "id": "_tenant",
                    "version": "2.0",
                    "interfaceType": "system",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/_/tenant"
                        },
                        {
                            "methods": [
                                "GET",
                                "DELETE"
                            ],
                            "pathPattern": "/_/tenant/{id}"
                        }
                    ]
                }
            ],
            "requires": [
                {
                    "id": "users",
                    "version": "16.1"
                }
            ],
            "optional": [
                {
                    "id": "configuration",
                    "version": "2.0"
                },
                {
                    "id": "authtoken",
                    "version": "2.0"
                }
            ],
            "permissionSets": [
                {
                    "permissionName": "login.item.post",
                    "displayName": "login item post",
                    "description": "Add New Login"
                },
                {
                    "permissionName": "login.item.delete",
                    "displayName": "login item delete",
                    "description": "Remove existing login credentials"
                },
                {
                    "permissionName": "login.attempts.item.get",
                    "displayName": "login attempt item get",
                    "description": "Read a login attempt entity for user"
                },
                {
                    "permissionName": "login.password.validate",
                    "displayName": "login password validate",
                    "description": "Validate password for repeatability"
                },
                {
                    "permissionName": "login.password-reset-action.post",
                    "displayName": "login create a new action",
                    "description": "Saves action to storage"
                },
                {
                    "permissionName": "login.password-reset-action.get",
                    "displayName": "login get the action by id",
                    "description": "Retrieves action record by id"
                },
                {
                    "permissionName": "login.password-reset.post",
                    "displayName": "login password reset",
                    "description": "Resets password for user in record and deletes action record"
                },
                {
                    "permissionName": "login.event.collection.post",
                    "displayName": "login save log event",
                    "description": "Saves received event into the storage"
                },
                {
                    "permissionName": "login.event.collection.get",
                    "displayName": "login get a list of events",
                    "description": "Get a list of events from storage"
                },
                {
                    "permissionName": "login.event.delete",
                    "displayName": "login delete event",
                    "description": "Delete log event"
                },
                {
                    "permissionName": "login.credentials-existence.get",
                    "displayName": "Credentials existence get",
                    "description": "Get credentials existence"
                },
                {
                    "permissionName": "login.all",
                    "displayName": "login credentials",
                    "description": "All permissions for login credentials",
                    "subPermissions": [
                        "login.item.post",
                        "login.item.delete",
                        "login.attempts.item.get",
                        "login.password.validate",
                        "login.password-reset-action.get",
                        "login.password-reset-action.post",
                        "login.password-reset.post",
                        "login.password.validate",
                        "login.event.collection.post",
                        "login.event.collection.get",
                        "login.event.delete",
                        "login.credentials-existence.get"
                    ]
                }
            ],
            "launchDescriptor": {
                "dockerImage": "mod-login-keycloak-1.0.0",
                "dockerPull": false,
                "dockerCMD": [
                    "verify.user=true"
                ],
                "dockerArgs": {
                    "HostConfig": {
                        "Memory": 357913941,
                        "PortBindings": {
                            "8081/tcp": [
                                {
                                    "HostPort": "%p"
                                }
                            ]
                        }
                    }
                },
                "env": [
                    {
                        "name": "JAVA_OPTIONS",
                        "value": "-XX:MaxRAMPercentage=66.0"
                    },
                    {
                        "name": "DB_HOST",
                        "value": "postgres"
                    },
                    {
                        "name": "DB_PORT",
                        "value": "5432"
                    },
                    {
                        "name": "DB_USERNAME",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_PASSWORD",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_DATABASE",
                        "value": "okapi_modules"
                    },
                    {
                        "name": "DB_QUERYTIMEOUT",
                        "value": "60000"
                    },
                    {
                        "name": "DB_CHARSET",
                        "value": "UTF-8"
                    },
                    {
                        "name": "DB_MAXPOOLSIZE",
                        "value": "5"
                    },
                    {
                        "name": "KC_CONFIG_STORE_TYPE",
                        "value": "ephemeral"
                    },
                    {
                        "name": "KC_CONFIG_CACHE_CAPACITY",
                        "value": "100"
                    },
                    {
                        "name": "KC_CONFIG_CACHE_TTL_MS",
                        "value": "3600000"
                    },
                    {
                        "name": "KC_CONFIG_FAILURE_CACHE_TTL_MS",
                        "value": "30000"
                    },
                    {
                        "name": "KC_CONFIG_EPHEMERAL_CREDENTIALS",
                        "value": ""
                    },
                    {
                        "name": "KC_CONFIG_AWS_SSM_REGION",
                        "value": ""
                    },
                    {
                        "name": "KC_CONFIG_AWS_SSM_USE_IAM",
                        "value": "true"
                    },
                    {
                        "name": "KC_CONFIG_AWS_SSM_ECS_CREDENTIALS_ENDPOINT",
                        "value": ""
                    },
                    {
                        "name": "KC_CONFIG_AWS_SSM_ECS_CREDENTIALS_PATH",
                        "value": ""
                    },
                    {
                        "name": "KC_CONFIG_VAULT_TOKEN",
                        "value": ""
                    },
                    {
                        "name": "KC_CONFIG_VAULT_ADDRESS",
                        "value": ""
                    },
                    {
                        "name": "KC_CONFIG_VAULT_ENABLE_SSL",
                        "value": "false"
                    },
                    {
                        "name": "KC_CONFIG_VAULT_KEYSTORE_PASSWORD",
                        "value": ""
                    },
                    {
                        "name": "KC_CONFIG_VAULT_PEM_FILE_PATH",
                        "value": ""
                    },
                    {
                        "name": "KC_CONFIG_VAULT_KEYSTORE_FILE_PATH",
                        "value": ""
                    },
                    {
                        "name": "KC_CONFIG_VAULT_TRUSTSTORE_FILE_PATH",
                        "value": ""
                    }
                ]
            }
        },
        {
            "id": "mod-users-keycloak-1.0.0",
            "name": "Users business logic (with Keycloak)",
            "requires": [
                {
                    "id": "users",
                    "version": "16.1"
                },
                {
                    "id": "permissions",
                    "version": "5.6"
                },
                {
                    "id": "login",
                    "version": "7.3"
                },
                {
                    "id": "configuration",
                    "version": "2.0"
                },
                {
                    "id": "password-validator",
                    "version": "1.0"
                },
                {
                    "id": "permissions-users",
                    "version": "1.0"
                },
                {
                    "id": "capabilities",
                    "version": "1.0"
                },
                {
                    "id": "policies",
                    "version": "1.1"
                },
                {
                    "id": "roles-user",
                    "version": "1.0"
                },
                {
                    "id": "user-capability-sets",
                    "version": "1.0"
                },
                {
                    "id": "user-capabilities",
                    "version": "1.0"
                }
            ],
            "provides": [
                {
                    "id": "users-keycloak",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/users-keycloak/users/{id}",
                            "permissionsRequired": [
                                "users-keycloak.item.get"
                            ],
                            "permissionsDesired": [
                                "users-keycloak.read.basic",
                                "users-keycloak.read.restricted"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/users-keycloak/users",
                            "permissionsRequired": [
                                "users-keycloak.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/users-keycloak/users",
                            "permissionsRequired": [
                                "users-keycloak.collection.get"
                            ],
                            "permissionsDesired": [
                                "users-keycloak.read.basic",
                                "users-keycloak.read.restricted"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/users-keycloak/users/{id}",
                            "permissionsRequired": [
                                "users-keycloak.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/users-keycloak/users/{id}",
                            "permissionsRequired": [
                                "users-keycloak.item.delete"
                            ],
                            "modulePermissions": [
                                "policies.item.delete",
                                "policies.item.put",
                                "policies.collection.get",
                                "roles.users.item.get",
                                "roles.users.item.delete",
                                "user-capabilities.collection.delete",
                                "user.capabilities.collection.get",
                                "user.capability-sets.collection.get",
                                "user-capability-sets.collection.delete"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/users-keycloak/_self",
                            "permissionsRequired": []
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/users-keycloak/migrations",
                            "permissionsRequired": [
                                "users-keycloak.migrations.post"
                            ],
                            "modulePermissions": [
                                "users.collection.get",
                                "perms.users"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/users-keycloak/migrations",
                            "permissionsRequired": [
                                "users-keycloak.migrations.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/users-keycloak/migrations/{id}",
                            "permissionsRequired": [
                                "users-keycloak.migrations.get"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/users-keycloak/migrations/{id}",
                            "permissionsRequired": [
                                "users-keycloak.migrations.delete"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/users-keycloak/forgotten/password",
                            "permissionsRequired": [],
                            "permissionsDesired": [],
                            "modulePermissions": [
                                "users.edit",
                                "users.item.put",
                                "perms.users.item.put",
                                "configuration.entries.collection.get",
                                "users.collection.get",
                                "users.item.get",
                                "login.password-reset-action.post",
                                "notify.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/users-keycloak/forgotten/username",
                            "permissionsRequired": [],
                            "permissionsDesired": [],
                            "modulePermissions": [
                                "users.edit",
                                "users.item.put",
                                "perms.users.item.put",
                                "configuration.entries.collection.get",
                                "users.collection.get",
                                "notify.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/users-keycloak/password-reset/link",
                            "permissionsRequired": [
                                "users-keycloak.password-reset-link.generate"
                            ],
                            "permissionsDesired": [],
                            "modulePermissions": [
                                "users.item.get",
                                "configuration.entries.collection.get",
                                "login.password-reset-action.post",
                                "notify.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/users-keycloak/password-reset/reset",
                            "permissionsRequired": [
                                "users-keycloak.password-reset-link.reset"
                            ],
                            "permissionsDesired": [],
                            "modulePermissions": [
                                "login.password-reset-action.get",
                                "users.item.get",
                                "login.password-reset.post",
                                "validation.validate.post",
                                "notify.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/users-keycloak/password-reset/validate",
                            "permissionsRequired": [
                                "users-keycloak.password-reset-link.validate"
                            ],
                            "permissionsDesired": [],
                            "modulePermissions": [
                                "users.item.get",
                                "login.password-reset-action.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/users-keycloak/users/{id}/permissions",
                            "permissionsRequired": [
                                "users-keycloak.users.permissions.collection.get"
                            ],
                            "modulePermissions": [
                                "permissions.users.item.get"
                            ]
                        }
                    ]
                },
                {
                    "id": "_tenant",
                    "version": "2.0",
                    "interfaceType": "system",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/_/tenant"
                        },
                        {
                            "methods": [
                                "GET",
                                "DELETE"
                            ],
                            "pathPattern": "/_/tenant/{id}"
                        }
                    ]
                }
            ],
            "optional": [
                {
                    "id": "notify",
                    "version": "2.0"
                },
                {
                    "id": "service-points",
                    "version": "3.3"
                },
                {
                    "id": "service-points-users",
                    "version": "1.0"
                },
                {
                    "id": "user-tenants",
                    "version": "1.0"
                }
            ],
            "permissionSets": [
                {
                    "permissionName": "users-keycloak.migrations.post",
                    "displayName": "Users (keycloak) - create new migration",
                    "description": "Create a new Users Migration"
                },
                {
                    "permissionName": "users-keycloak.migrations.get",
                    "displayName": "Users (keycloak) - retrieve users migration",
                    "description": "Get Users Migration"
                },
                {
                    "permissionName": "users-keycloak.migrations.delete",
                    "displayName": "Users (keycloak) - delete users migration",
                    "description": "Delete Users Migration"
                },
                {
                    "permissionName": "users-keycloak.item.get",
                    "displayName": "Users (keycloak) - get user keycloak",
                    "description": "Get user by ID"
                },
                {
                    "permissionName": "users-keycloak.item.post",
                    "displayName": "Users (keycloak) - create a new user keycloak",
                    "description": "Create user"
                },
                {
                    "permissionName": "users-keycloak.collection.get",
                    "displayName": "Users (keycloak) - get users collection keycloak",
                    "description": "Get users collection"
                },
                {
                    "permissionName": "users-keycloak.item.put",
                    "displayName": "Users (keycloak) - update user keycloak",
                    "description": "Update user"
                },
                {
                    "permissionName": "users-keycloak.item.delete",
                    "displayName": "Users (keycloak) - delete user keycloak",
                    "description": "Delete user"
                },
                {
                    "permissionName": "users-keycloak.password-reset-link.generate",
                    "displayName": "Users (keycloak) - generate password reset link ",
                    "description": "Generate password reset link for user"
                },
                {
                    "permissionName": "users-keycloak.password-reset-link.reset",
                    "displayName": "Users (keycloak) - reset password",
                    "description": "Reset password by generated link"
                },
                {
                    "permissionName": "users-keycloak.password-reset-link.validate",
                    "displayName": "Users (keycloak) - validate password",
                    "description": "Validate password"
                },
                {
                    "permissionName": "users-keycloak.read.basic",
                    "displayName": "Users (keycloak) - read basic",
                    "description": "Read basic"
                },
                {
                    "permissionName": "users-keycloak.read.restricted",
                    "displayName": "Users (keycloak) - read restricted",
                    "description": "Read restricted"
                },
                {
                    "permissionName": "users-keycloak.users.permissions.collection.get",
                    "displayName": "Users (keycloak) - find permissions for user",
                    "description": "User permissions read"
                },
                {
                    "permissionName": "users-keycloak.all",
                    "displayName": "Users (keycloak) - all users permissions",
                    "description": "All permissions for user operations",
                    "subPermissions": [
                        "users-keycloak.migrations.post",
                        "users-keycloak.migrations.get",
                        "users-keycloak.migrations.delete",
                        "users-keycloak.item.get",
                        "users-keycloak.item.post",
                        "users-keycloak.collection.get",
                        "users-keycloak.item.put",
                        "users-keycloak.item.delete",
                        "users-keycloak.password-reset-link.generate",
                        "users-keycloak.password-reset-link.reset",
                        "users-keycloak.password-reset-link.validate",
                        "users-keycloak.read.restricted",
                        "users-keycloak.read.basic",
                        "users-keycloak.users.permissions.collection.get"
                    ]
                }
            ],
            "launchDescriptor": {
                "dockerImage": "folioci/mod-users-keycloak:1.0.0",
                "dockerPull": true,
                "env": [
                    {
                        "name": "JAVA_OPTIONS",
                        "value": "-XX:MaxRAMPercentage=66.0"
                    }
                ],
                "dockerArgs": {
                    "HostConfig": {
                        "Memory": 536870912,
                        "PortBindings": {
                            "8081/tcp": [
                                {
                                    "HostPort": "%p"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "id": "mod-roles-keycloak-1.0.0",
            "name": "roles-keycloak",
            "requires": [
                {
                    "id": "permissions",
                    "version": "5.6"
                }
            ],
            "provides": [
                {
                    "id": "roles",
                    "version": "1.1",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/roles/{id}",
                            "permissionsRequired": [
                                "roles.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/roles/{id}",
                            "permissionsRequired": [
                                "roles.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/roles/{id}",
                            "permissionsRequired": [
                                "roles.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/roles",
                            "permissionsRequired": [
                                "roles.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/roles",
                            "permissionsRequired": [
                                "roles.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/roles/batch",
                            "permissionsRequired": [
                                "roles.collection.post"
                            ]
                        }
                    ]
                },
                {
                    "id": "policies",
                    "version": "1.1",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/policies/{id}",
                            "permissionsRequired": [
                                "policies.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/policies/{id}",
                            "permissionsRequired": [
                                "policies.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/policies/{id}",
                            "permissionsRequired": [
                                "policies.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/policies",
                            "permissionsRequired": [
                                "policies.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/policies/batch",
                            "permissionsRequired": [
                                "policies.collection.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/policies",
                            "permissionsRequired": [
                                "policies.collection.get"
                            ]
                        }
                    ]
                },
                {
                    "id": "roles-user",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/roles/users/{id}",
                            "permissionsRequired": [
                                "roles.users.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/roles/users/{id}",
                            "permissionsRequired": [
                                "roles.users.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/roles/users/{id}",
                            "permissionsRequired": [
                                "roles.users.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/roles/users",
                            "permissionsRequired": [
                                "roles.users.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/roles/users",
                            "permissionsRequired": [
                                "roles.users.collection.get"
                            ]
                        }
                    ]
                },
                {
                    "id": "migrate",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/roles-keycloak/migrate",
                            "permissionsRequired": [
                                "roles-keycloak.migration.post"
                            ]
                        }
                    ]
                },
                {
                    "id": "capabilities",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/capabilities/{id}",
                            "permissionsRequired": [
                                "capabilities.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/capabilities",
                            "permissionsRequired": [
                                "capabilities.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/capability-sets/{id}/capabilities",
                            "permissionsRequired": [
                                "capability-sets.capabilities.collection.get"
                            ]
                        }
                    ]
                },
                {
                    "id": "capability-sets",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/capability-sets/{id}",
                            "permissionsRequired": [
                                "capability-sets.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/capability-sets",
                            "permissionsRequired": [
                                "capability-sets.collection.get"
                            ]
                        }
                    ]
                },
                {
                    "id": "role-capabilities",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/roles/capabilities",
                            "permissionsRequired": [
                                "role-capabilities.collection.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/roles/capabilities",
                            "permissionsRequired": [
                                "role-capabilities.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/roles/{id}/capabilities",
                            "permissionsRequired": [
                                "role-capabilities.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/roles/{id}/capabilities",
                            "permissionsRequired": [
                                "role-capabilities.collection.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/roles/{id}/capabilities",
                            "permissionsRequired": [
                                "role-capabilities.collection.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "role-capability-sets",
                    "version": "1.1",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/roles/capability-sets",
                            "permissionsRequired": [
                                "role-capability-sets.collection.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/roles/capability-sets",
                            "permissionsRequired": [
                                "role-capability-sets.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/roles/{id}/capability-sets",
                            "permissionsRequired": [
                                "role.capability-sets.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/roles/{id}/capability-sets",
                            "permissionsRequired": [
                                "role-capability-sets.collection.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/roles/{id}/capability-sets",
                            "permissionsRequired": [
                                "role-capability-sets.collection.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "user-capabilities",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/users/capabilities",
                            "permissionsRequired": [
                                "user-capabilities.collection.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/users/capabilities",
                            "permissionsRequired": [
                                "user-capabilities.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/users/{id}/capabilities",
                            "permissionsRequired": [
                                "user.capabilities.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/users/{id}/capabilities",
                            "permissionsRequired": [
                                "user-capabilities.collection.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/users/{id}/capabilities",
                            "permissionsRequired": [
                                "user-capabilities.collection.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "user-capability-sets",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/users/capability-sets",
                            "permissionsRequired": [
                                "user-capability-sets.collection.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/users/capability-sets",
                            "permissionsRequired": [
                                "user-capability-sets.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/users/{id}/capability-sets",
                            "permissionsRequired": [
                                "user.capability-sets.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/users/{id}/capability-sets",
                            "permissionsRequired": [
                                "user-capability-sets.collection.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/users/{id}/capability-sets",
                            "permissionsRequired": [
                                "user-capability-sets.collection.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "permissions-users",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/permissions/users/{id}",
                            "permissionsRequired": [
                                "permissions.users.item.get"
                            ]
                        }
                    ]
                },
                {
                    "id": "loadable-roles",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/loadable-roles",
                            "permissionsRequired": [
                                "loadable-roles.collection.get"
                            ]
                        }
                    ]
                },
                {
                    "id": "_tenant",
                    "version": "2.0",
                    "interfaceType": "system",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/_/tenant"
                        },
                        {
                            "methods": [
                                "GET",
                                "DELETE"
                            ],
                            "pathPattern": "/_/tenant/{id}"
                        }
                    ]
                }
            ],
            "permissionSets": [
                {
                    "permissionName": "roles.item.get",
                    "displayName": "role item get",
                    "description": "Get role"
                },
                {
                    "permissionName": "roles.item.put",
                    "displayName": "roles item put",
                    "description": "Update role"
                },
                {
                    "permissionName": "roles.item.delete",
                    "displayName": "roles item delete",
                    "description": "Delete role"
                },
                {
                    "permissionName": "roles.item.post",
                    "displayName": "Creates a role item",
                    "description": "Create a role"
                },
                {
                    "permissionName": "roles.collection.post",
                    "displayName": "roles collection post",
                    "description": "Create one or more roles"
                },
                {
                    "permissionName": "roles.collection.get",
                    "displayName": "roles collection get",
                    "description": "Searching roles"
                },
                {
                    "permissionName": "roles.all",
                    "displayName": "Roles module - all permissions and all domains",
                    "description": "Entire set of permissions needed to use the roles module on any domain",
                    "subPermissions": [
                        "roles.item.get",
                        "roles.item.put",
                        "roles.item.delete",
                        "roles.item.post",
                        "roles.collection.post",
                        "roles.collection.get"
                    ],
                    "visible": false
                },
                {
                    "permissionName": "policies.item.get",
                    "displayName": "policies item get",
                    "description": "Get policy"
                },
                {
                    "permissionName": "policies.item.put",
                    "displayName": "policies item put",
                    "description": "Update policy"
                },
                {
                    "permissionName": "policies.item.delete",
                    "displayName": "policies item delete",
                    "description": "Delete policy"
                },
                {
                    "permissionName": "policies.item.post",
                    "displayName": "Creates a policy item",
                    "description": "Create a policy"
                },
                {
                    "permissionName": "policies.collection.post",
                    "displayName": "policies collection post",
                    "description": "Create one or more policies"
                },
                {
                    "permissionName": "policies.collection.get",
                    "displayName": "policies collection get",
                    "description": "Searching policies"
                },
                {
                    "permissionName": "policies.all",
                    "displayName": "Policies module - all permissions and all domains",
                    "description": "Entire set of permissions needed to use the policies module on any domain",
                    "subPermissions": [
                        "policies.item.get",
                        "policies.item.put",
                        "policies.item.delete",
                        "policies.item.post",
                        "policies.collection.post",
                        "policies.collection.get"
                    ],
                    "visible": false
                },
                {
                    "permissionName": "roles.users.item.get",
                    "displayName": "roles user item get",
                    "description": "Get roles user"
                },
                {
                    "permissionName": "roles.users.item.put",
                    "displayName": "roles user item put",
                    "description": "Update roles user"
                },
                {
                    "permissionName": "roles.users.item.delete",
                    "displayName": "roles user item delete",
                    "description": "Delete roles user"
                },
                {
                    "permissionName": "roles.users.item.post",
                    "displayName": "roles user item post",
                    "description": "Assign roles to user"
                },
                {
                    "permissionName": "roles.users.collection.get",
                    "displayName": "roles user collection get",
                    "description": "Searching roles user"
                },
                {
                    "permissionName": "roles-keycloak.migration.post",
                    "displayName": "Migrations - start a user permission migration",
                    "description": "Start user policies migration"
                },
                {
                    "permissionName": "roles.users.all",
                    "displayName": "roles.users module - all permissions and all domains",
                    "description": "Entire set of permissions needed to use the roles user module on any domain",
                    "subPermissions": [
                        "roles.users.item.get",
                        "roles.users.item.put",
                        "roles.users.item.delete",
                        "roles.users.item.post",
                        "roles.users.collection.get"
                    ],
                    "visible": false
                },
                {
                    "permissionName": "capabilities.item.get",
                    "displayName": "Capabilities - get record by ID",
                    "description": "Get capability"
                },
                {
                    "permissionName": "capabilities.collection.get",
                    "displayName": "Capabilities - find records by CQL query",
                    "description": "Searching capabilities"
                },
                {
                    "permissionName": "capability-sets.capabilities.collection.get",
                    "displayName": "Capabilities - find records by capability set ID",
                    "description": "Searching capabilities"
                },
                {
                    "permissionName": "capability-sets.item.get",
                    "displayName": "Capability Set - get record by ID",
                    "description": "Get capability"
                },
                {
                    "permissionName": "capability-sets.collection.get",
                    "displayName": "Capability Set - find records by CQL query",
                    "description": "Searching capabilities"
                },
                {
                    "permissionName": "capabilities.all",
                    "displayName": "Capabilities - all permissions",
                    "description": "All permissions for capability management",
                    "subPermissions": [
                        "capabilities.item.get",
                        "capabilities.collection.get",
                        "capability-sets.capabilities.collection.get",
                        "capability-sets.collection.get",
                        "capability-sets.collection.post"
                    ]
                },
                {
                    "permissionName": "role-capabilities.collection.post",
                    "displayName": "Role-Capabilities - Create an association between role and capabilities",
                    "description": "Create a record associating one or more capabilities with role"
                },
                {
                    "permissionName": "role-capabilities.collection.get",
                    "displayName": "Role-Capabilities - Get capabilities assigned to role",
                    "description": "Retrieve capabilities assigned to role"
                },
                {
                    "permissionName": "role-capabilities.collection.put",
                    "displayName": "Role-Capabilities - Update a set of assigned capabilities for role",
                    "description": "Update assigned capabilities for role"
                },
                {
                    "permissionName": "role-capabilities.collection.delete",
                    "displayName": "Role-Capabilities - Delete all for role",
                    "description": "Delete all assigned capabilities for role"
                },
                {
                    "permissionName": "role.capabilities.collection.get",
                    "displayName": "Role-Capabilities - Find records by the query",
                    "description": "Retrieve role-capability items by CQL query"
                },
                {
                    "permissionName": "role-capabilities.all",
                    "displayName": "Role-Capabilities - all permissions",
                    "description": "All permissions for role-capability management",
                    "subPermissions": [
                        "role-capabilities.item.get",
                        "role-capabilities.item.put",
                        "role-capabilities.item.delete",
                        "role-capabilities.item.post",
                        "role-capabilities.collection.get"
                    ]
                },
                {
                    "permissionName": "role-capability-sets.collection.post",
                    "displayName": "Role-Capability-Sets - Create record",
                    "description": "Create a record associating one or more capabilities with role"
                },
                {
                    "permissionName": "role-capability-sets.collection.get",
                    "displayName": "Role-Capability-Sets - Find records by the query",
                    "description": "Retrieve role-capability items by CQL query"
                },
                {
                    "permissionName": "role-capability-sets.collection.put",
                    "displayName": "Role-Capability-Sets - Update a set of records for role",
                    "description": "Update assigned capability-sets for role"
                },
                {
                    "permissionName": "role-capability-sets.collection.delete",
                    "displayName": "Role-Capability-Sets - Delete all for role",
                    "description": "Delete all assigned capability-sets for role"
                },
                {
                    "permissionName": "role.capability-sets.collection.get",
                    "displayName": "Role-Capability-Sets - Get capability-sets assigned to role",
                    "description": "Retrieve capability-sets assigned to role"
                },
                {
                    "permissionName": "role-capability-sets.all",
                    "displayName": "Role-Capability Sets - all permissions",
                    "description": "All permissions for role-capability set management",
                    "subPermissions": [
                        "role-capability-sets.collection.put",
                        "role-capability-sets.collection.get",
                        "role-capability-sets.collection.post",
                        "role-capability-sets.collection.delete",
                        "role.capability-sets.collection.get"
                    ]
                },
                {
                    "permissionName": "user-capabilities.collection.post",
                    "displayName": "User-Capabilities - Create an association between user and capabilities",
                    "description": "Create a record associating one or more capabilities with user"
                },
                {
                    "permissionName": "user-capabilities.collection.get",
                    "displayName": "Role-Capabilities - Get capabilities assigned to user",
                    "description": "Retrieve capabilities assigned to user"
                },
                {
                    "permissionName": "user-capabilities.collection.put",
                    "displayName": "Role-Capabilities - Update a set of assigned capabilities for user",
                    "description": "Update assigned capabilities for user"
                },
                {
                    "permissionName": "user-capabilities.collection.delete",
                    "displayName": "User-Capabilities - delete all for user",
                    "description": "Delete all assigned capabilities for user"
                },
                {
                    "permissionName": "user.capabilities.collection.get",
                    "displayName": "User-Capabilities - Find records by query",
                    "description": "Retrieve user-capability items by CQL query"
                },
                {
                    "permissionName": "user-capabilities.all",
                    "displayName": "User-Capabilities - all permissions",
                    "description": "All permissions for user-capability management",
                    "subPermissions": [
                        "user-capabilities.collection.put",
                        "user-capabilities.collection.post",
                        "user-capabilities.collection.delete",
                        "user-capabilities.collection.get",
                        "user.capabilities.collection.get"
                    ]
                },
                {
                    "permissionName": "user-capability-sets.collection.post",
                    "displayName": "User-Capability-Sets - Create record",
                    "description": "Create a record associating one or more capabilities with user"
                },
                {
                    "permissionName": "user-capability-sets.collection.get",
                    "displayName": "User-Capability-Sets - Find records by the query",
                    "description": "Retrieve role-capability items by CQL query"
                },
                {
                    "permissionName": "user-capability-sets.collection.put",
                    "displayName": "User-Capability-Sets - Update a set of records for user",
                    "description": "Update assigned capability-sets for user"
                },
                {
                    "permissionName": "user-capability-sets.collection.delete",
                    "displayName": "User-Capability-Sets - Delete all for user",
                    "description": "Delete all assigned capability-sets for user"
                },
                {
                    "permissionName": "user.capability-sets.collection.get",
                    "displayName": "User-Capability-Sets - Get capability-sets assigned to user",
                    "description": "Retrieve capability-sets assigned to user"
                },
                {
                    "permissionName": "user-capability-sets.all",
                    "displayName": "User-Capability Sets - all permissions",
                    "description": "All permissions for user-capability set management",
                    "subPermissions": [
                        "user-capability-sets.collection.put",
                        "user-capability-sets.collection.get",
                        "user-capability-sets.collection.post",
                        "user-capability-sets.collection.delete",
                        "user.capability-sets.collection.get"
                    ]
                },
                {
                    "permissionName": "permissions.users.item.get",
                    "displayName": "Permissions - get user permissions",
                    "description": "Get user permissions based on assigned roles and capabilities"
                },
                {
                    "permissionName": "loadable-roles.collection.get",
                    "displayName": "Loadable roles collection get",
                    "description": "Searching loadable roles"
                }
            ],
            "launchDescriptor": {
                "dockerImage": "folioci/mod-roles-keycloak:1.0.0",
                "dockerPull": true,
                "env": [
                    {
                        "name": "JAVA_OPTIONS",
                        "value": "-XX:MaxRAMPercentage=85.0"
                    },
                    {
                        "name": "DB_HOST",
                        "value": "postgres"
                    },
                    {
                        "name": "DB_PORT",
                        "value": "5432"
                    },
                    {
                        "name": "DB_USERNAME",
                        "value": "postgres"
                    },
                    {
                        "name": "DB_PASSWORD",
                        "value": "postgres"
                    },
                    {
                        "name": "DB_DATABASE",
                        "value": "okapi_modules"
                    },
                    {
                        "name": "KC_URL",
                        "value": "keycloak:8080"
                    },
                    {
                        "name": "KC_CLIENT_SECRET",
                        "value": "mod-roles-keycloak"
                    },
                    {
                        "name": "KC_CLIENT_ID",
                        "value": "secret"
                    },
                    {
                        "name": "KC_POLICIES_CLIENT_NAME",
                        "value": "mod-login-keycloak"
                    },
                    {
                        "name": "KC_TOKEN_TTL",
                        "value": "59"
                    },
                    {
                        "name": "KC_CLIENT_ID_TTL",
                        "value": "3600"
                    }
                ],
                "dockerArgs": {
                    "HostConfig": {
                        "Memory": 357913941,
                        "PortBindings": {
                            "8081/tcp": [
                                {
                                    "HostPort": "%p"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "id": "mod-permissions-6.5.0",
            "name": "permissions",
            "provides": [
                {
                    "id": "permissions",
                    "version": "5.6",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/perms/users*",
                            "permissionsDesired": [
                                "perms.users.assign.okapi",
                                "perms.users.assign.immutable",
                                "perms.users.assign.mutable"
                            ],
                            "permissionsRequired": [
                                "perms.users.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/perms/users*",
                            "permissionsRequired": [
                                "perms.users.get"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/perms/users/{id}",
                            "permissionsDesired": [
                                "perms.users.assign.okapi",
                                "perms.users.assign.immutable",
                                "perms.users.assign.mutable"
                            ],
                            "permissionsRequired": [
                                "perms.users.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/perms/users/{id}",
                            "permissionsDesired": [
                                "perms.users.assign.okapi",
                                "perms.users.assign.immutable",
                                "perms.users.assign.mutable"
                            ],
                            "permissionsRequired": [
                                "perms.users.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/perms/users/{id}/permissions/{perm}",
                            "permissionsDesired": [
                                "perms.users.assign.okapi",
                                "perms.users.assign.immutable",
                                "perms.users.assign.mutable"
                            ],
                            "permissionsRequired": [
                                "perms.users.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/perms/permissions",
                            "permissionsRequired": [
                                "perms.permissions.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/perms/permissions/{id}",
                            "permissionsRequired": [
                                "perms.permissions.get"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/perms/permissions/{id}",
                            "permissionsDesired": [
                                "perms.users.assign.okapi",
                                "perms.users.assign.immutable",
                                "perms.users.assign.mutable"
                            ],
                            "permissionsRequired": [
                                "perms.permissions.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/perms/permissions",
                            "permissionsRequired": [
                                "perms.permissions.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/perms/permissions/{id}",
                            "permissionsRequired": [
                                "perms.permissions.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/perms/purge-deprecated",
                            "permissionsRequired": [
                                "perms.permissions.purge-deprecated.post"
                            ]
                        }
                    ]
                },
                {
                    "id": "_tenant",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/_/tenant"
                        },
                        {
                            "methods": [
                                "GET",
                                "DELETE"
                            ],
                            "pathPattern": "/_/tenant/{id}"
                        }
                    ],
                    "interfaceType": "system"
                },
                {
                    "id": "_tenantPermissions",
                    "version": "2.1",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/_/tenantpermissions"
                        }
                    ],
                    "interfaceType": "system"
                }
            ],
            "requires": [],
            "permissionSets": [
                {
                    "description": "Read or list permissions user(s)",
                    "displayName": "permission users read",
                    "permissionName": "perms.users.get"
                },
                {
                    "description": "Add a new permissions user",
                    "displayName": "permission users item create",
                    "permissionName": "perms.users.item.post"
                },
                {
                    "description": "Modify a permissions user",
                    "displayName": "permission users item modify",
                    "permissionName": "perms.users.item.put"
                },
                {
                    "description": "Remove a permissions user or remove permissions from a user",
                    "displayName": "permission users item delete",
                    "permissionName": "perms.users.item.delete"
                },
                {
                    "description": "Read or list permissions",
                    "displayName": "permission read",
                    "permissionName": "perms.permissions.get"
                },
                {
                    "description": "Add a new permission",
                    "displayName": "permission item create",
                    "permissionName": "perms.permissions.item.post"
                },
                {
                    "description": "Modify a permission",
                    "displayName": "permission item modify",
                    "permissionName": "perms.permissions.item.put"
                },
                {
                    "description": "Remove a permission",
                    "displayName": "permission item delete",
                    "permissionName": "perms.permissions.item.delete"
                },
                {
                    "description": "Purge deprecated permissions",
                    "displayName": "purge deprecated permission",
                    "permissionName": "perms.permissions.purge-deprecated.post"
                },
                {
                    "description": "Allow any okapi permission to be added for user",
                    "displayName": "perms users assign okapi",
                    "permissionName": "perms.users.assign.okapi"
                },
                {
                    "description": "Allow any immutable permission to be added for user",
                    "displayName": "perms users assign immutable",
                    "permissionName": "perms.users.assign.immutable"
                },
                {
                    "description": "Allow any mutable permission to be added for user",
                    "displayName": "perms users assign mutable",
                    "permissionName": "perms.users.assign.mutable"
                },
                {
                    "description": "All permissions for permission objects",
                    "displayName": "permissions",
                    "permissionName": "perms.permissions",
                    "subPermissions": [
                        "perms.permissions.get",
                        "perms.permissions.item.post",
                        "perms.permissions.item.put",
                        "perms.permissions.item.delete",
                        "perms.permissions.purge-deprecated.post"
                    ]
                },
                {
                    "description": "All permissions for permission user objects",
                    "displayName": "permission users",
                    "permissionName": "perms.users",
                    "subPermissions": [
                        "perms.users.get",
                        "perms.users.item.post",
                        "perms.users.item.put",
                        "perms.users.item.delete"
                    ]
                },
                {
                    "description": "All permissions for the permissions module",
                    "displayName": "perms all",
                    "permissionName": "perms.all",
                    "subPermissions": [
                        "perms.users",
                        "perms.permissions",
                        "perms.users.assign.immutable",
                        "perms.users.assign.mutable"
                    ]
                }
            ],
            "launchDescriptor": {
                "env": [
                    {
                        "name": "JAVA_OPTIONS",
                        "value": "-XX:MaxRAMPercentage=66.0"
                    },
                    {
                        "name": "DB_HOST",
                        "value": "postgres"
                    },
                    {
                        "name": "DB_PORT",
                        "value": "5432"
                    },
                    {
                        "name": "DB_USERNAME",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_PASSWORD",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_DATABASE",
                        "value": "okapi_modules"
                    },
                    {
                        "name": "DB_QUERYTIMEOUT",
                        "value": "60000"
                    },
                    {
                        "name": "DB_CHARSET",
                        "value": "UTF-8"
                    },
                    {
                        "name": "DB_MAXPOOLSIZE",
                        "value": "5"
                    }
                ],
                "dockerArgs": {
                    "HostConfig": {
                        "Memory": 715827883,
                        "PortBindings": {
                            "8081/tcp": [
                                {
                                    "HostPort": "%p"
                                }
                            ]
                        }
                    }
                },
                "dockerPull": true,
                "dockerImage": "folioorg/mod-permissions:6.5.0"
            }
        },
        {
            "id": "mod-users-19.3.1",
            "name": "users",
            "provides": [
                {
                    "id": "users",
                    "version": "16.1",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/users",
                            "permissionsDesired": [
                                "users.read.basic",
                                "users.read.restricted"
                            ],
                            "permissionsRequired": [
                                "users.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/users/{id}",
                            "permissionsDesired": [
                                "users.read.basic",
                                "users.read.restricted"
                            ],
                            "permissionsRequired": [
                                "users.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/users",
                            "permissionsRequired": [
                                "users.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/users/profile-picture/{id}",
                            "permissionsRequired": [
                                "users.profile-picture.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/users/profile-picture/{id}",
                            "permissionsRequired": [
                                "users.profile-picture.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/users/profile-picture/{id}",
                            "permissionsRequired": [
                                "users.profile-picture.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/users/profile-picture",
                            "permissionsRequired": [
                                "users.profile-picture.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/users/configurations/entry/{configId}",
                            "permissionsRequired": [
                                "users.configurations.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/users/configurations/entry",
                            "permissionsRequired": [
                                "users.configurations.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/users/{id}",
                            "permissionsRequired": [
                                "users.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/users/{id}",
                            "permissionsRequired": [
                                "users.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/users",
                            "permissionsRequired": [
                                "users.collection.delete"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/groups",
                            "permissionsRequired": [
                                "usergroups.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/groups/{id}*",
                            "permissionsRequired": [
                                "usergroups.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/groups*",
                            "permissionsRequired": [
                                "usergroups.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/groups/{id}*",
                            "permissionsRequired": [
                                "usergroups.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/groups/{id}*",
                            "permissionsRequired": [
                                "usergroups.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/addresstypes",
                            "permissionsRequired": [
                                "addresstypes.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/addresstypes/{id}",
                            "permissionsRequired": [
                                "addresstypes.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/addresstypes",
                            "permissionsRequired": [
                                "addresstypes.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/addresstypes/{id}",
                            "permissionsRequired": [
                                "addresstypes.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/addresstypes/{id}",
                            "permissionsRequired": [
                                "addresstypes.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/proxiesfor",
                            "permissionsRequired": [
                                "proxiesfor.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/proxiesfor/{id}",
                            "permissionsRequired": [
                                "proxiesfor.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/proxiesfor",
                            "permissionsRequired": [
                                "proxiesfor.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/proxiesfor/{id}",
                            "permissionsRequired": [
                                "proxiesfor.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/proxiesfor/{id}",
                            "permissionsRequired": [
                                "proxiesfor.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/departments",
                            "permissionsRequired": [
                                "departments.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/departments/{id}",
                            "permissionsRequired": [
                                "departments.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/departments",
                            "permissionsRequired": [
                                "departments.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/departments/{id}",
                            "permissionsRequired": [
                                "departments.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/departments/{id}",
                            "permissionsRequired": [
                                "departments.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "custom-fields",
                    "version": "3.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/custom-fields",
                            "permissionsRequired": [
                                "user-settings.custom-fields.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/custom-fields",
                            "permissionsRequired": [
                                "user-settings.custom-fields.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/custom-fields/{id}",
                            "permissionsRequired": [
                                "user-settings.custom-fields.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/custom-fields/{id}",
                            "permissionsRequired": [
                                "user-settings.custom-fields.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/custom-fields",
                            "permissionsRequired": [
                                "user-settings.custom-fields.collection.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/custom-fields/{id}",
                            "permissionsRequired": [
                                "user-settings.custom-fields.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/custom-fields/{id}/stats",
                            "permissionsRequired": [
                                "user-settings.custom-fields.item.stats.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/custom-fields/{id}/options/{optId}/stats",
                            "permissionsRequired": [
                                "user-settings.custom-fields.item.option.stats.get"
                            ]
                        }
                    ],
                    "interfaceType": "multiple"
                },
                {
                    "id": "patron-pin",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/patron-pin",
                            "permissionsRequired": [
                                "patron-pin.set"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/patron-pin",
                            "permissionsRequired": [
                                "patron-pin.delete"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/patron-pin/verify",
                            "permissionsRequired": [
                                "patron-pin.validate"
                            ]
                        }
                    ]
                },
                {
                    "id": "user-tenants",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/user-tenants",
                            "permissionsRequired": [
                                "user-tenants.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/user-tenants",
                            "permissionsRequired": [
                                "user-tenants.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/user-tenants",
                            "permissionsRequired": [
                                "user-tenants.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "_tenant",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/_/tenant"
                        },
                        {
                            "methods": [
                                "GET",
                                "DELETE"
                            ],
                            "pathPattern": "/_/tenant/{id}"
                        }
                    ],
                    "interfaceType": "system"
                },
                {
                    "id": "_timer",
                    "version": "1.0",
                    "handlers": [
                        {
                            "unit": "minute",
                            "delay": "1",
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/users/expire/timer"
                        },
                        {
                            "unit": "minute",
                            "delay": "30",
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/users/outbox/process"
                        },
                        {
                            "unit": "hour",
                            "delay": "24",
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/users/profile-picture/cleanup"
                        }
                    ],
                    "interfaceType": "system"
                }
            ],
            "permissionSets": [
                {
                    "description": "Get a collection of user records",
                    "displayName": "users collection get",
                    "permissionName": "users.collection.get"
                },
                {
                    "description": "Post users profile picture",
                    "displayName": "post user profile picture",
                    "permissionName": "users.profile-picture.item.post"
                },
                {
                    "description": "Delete user profile picture",
                    "displayName": "delete user profile picture",
                    "permissionName": "users.profile-picture.item.delete"
                },
                {
                    "description": "Get user configuration",
                    "displayName": "get user configuration",
                    "permissionName": "users.configurations.item.get"
                },
                {
                    "description": "Update user configuration",
                    "displayName": "update user configuration",
                    "permissionName": "users.configurations.item.put"
                },
                {
                    "description": "Get users profile picture",
                    "displayName": "get user profile picture",
                    "permissionName": "users.profile-picture.item.get"
                },
                {
                    "description": "Update users profile picture",
                    "displayName": "update user profile picture",
                    "permissionName": "users.profile-picture.item.put"
                },
                {
                    "description": "Delete a collection of user records",
                    "displayName": "users collection delete",
                    "permissionName": "users.collection.delete"
                },
                {
                    "description": "Put Custom Fields collection",
                    "displayName": "Custom Fields - put collection",
                    "permissionName": "user-settings.custom-fields.collection.put",
                    "subPermissions": [
                        "users.item.get"
                    ]
                },
                {
                    "description": "Read an individual record in the User module",
                    "displayName": "users item get",
                    "permissionName": "users.item.get"
                },
                {
                    "description": "Read non-restricted User data information",
                    "displayName": "users read-basic",
                    "permissionName": "users.read.basic"
                },
                {
                    "description": "Read restricted User data information",
                    "displayName": "users read-restricted",
                    "permissionName": "users.read.restricted"
                },
                {
                    "description": "Create new records in the User module",
                    "displayName": "users item post",
                    "permissionName": "users.item.post"
                },
                {
                    "description": "Edit existing records in the User module",
                    "displayName": "users item put",
                    "permissionName": "users.item.put"
                },
                {
                    "description": "Delete records from the User module",
                    "displayName": "users item delete",
                    "permissionName": "users.item.delete"
                },
                {
                    "description": "Get a list of usergroup records",
                    "displayName": "usergroups collection get",
                    "permissionName": "usergroups.collection.get"
                },
                {
                    "description": "Get a single usergroup item",
                    "displayName": "usergroups item get",
                    "permissionName": "usergroups.item.get"
                },
                {
                    "description": "Create new Groups for users",
                    "displayName": "usergroups item post",
                    "permissionName": "usergroups.item.post"
                },
                {
                    "description": "Edit existing Groups for users",
                    "displayName": "usergroups item put",
                    "permissionName": "usergroups.item.put"
                },
                {
                    "description": "Delete Groups for users",
                    "displayName": "usergroups item delete",
                    "permissionName": "usergroups.item.delete"
                },
                {
                    "description": "Get a list of addresstype records",
                    "displayName": "addresstypes collection get",
                    "permissionName": "addresstypes.collection.get"
                },
                {
                    "description": "Get a single addresstype record",
                    "displayName": "addresstypes item get",
                    "permissionName": "addresstypes.item.get"
                },
                {
                    "description": "Create a new addresstype record",
                    "displayName": "addresstypes item post",
                    "permissionName": "addresstypes.item.post"
                },
                {
                    "description": "Edit an addresstype record",
                    "displayName": "addresstypes item put",
                    "permissionName": "addresstypes.item.put"
                },
                {
                    "description": "Delete an addresstype record",
                    "displayName": "addresstypes item delete",
                    "permissionName": "addresstypes.item.delete"
                },
                {
                    "description": "Get a list of proxyfor records",
                    "displayName": "proxiesfor collection get",
                    "permissionName": "proxiesfor.collection.get"
                },
                {
                    "description": "Get a single proxyfor record",
                    "displayName": "proxiesfor item get",
                    "permissionName": "proxiesfor.item.get"
                },
                {
                    "description": "Create a new proxyfor record",
                    "displayName": "proxiesfor item post",
                    "permissionName": "proxiesfor.item.post"
                },
                {
                    "description": "Edit a proxyfor record",
                    "displayName": "proxiesfor item put",
                    "permissionName": "proxiesfor.item.put"
                },
                {
                    "description": "Delete a proxyfor record",
                    "displayName": "proxiesfor.item.delete",
                    "permissionName": "proxiesfor.item.delete"
                },
                {
                    "description": "Get a list of departments records",
                    "displayName": "departments collection get",
                    "permissionName": "departments.collection.get"
                },
                {
                    "description": "Get a single department record",
                    "displayName": "departments item get",
                    "permissionName": "departments.item.get"
                },
                {
                    "description": "Create a new department record",
                    "displayName": "departments item post",
                    "permissionName": "departments.item.post"
                },
                {
                    "description": "Edit a department record",
                    "displayName": "departments item put",
                    "permissionName": "departments.item.put"
                },
                {
                    "description": "Delete a department record",
                    "displayName": "departments.item.delete",
                    "permissionName": "departments.item.delete"
                },
                {
                    "description": "Permission to set patron pin",
                    "displayName": "Permission to set patron pin",
                    "permissionName": "patron-pin.set"
                },
                {
                    "description": "Permission to delete patron pin",
                    "displayName": "Permission to delete patron pin",
                    "permissionName": "patron-pin.delete"
                },
                {
                    "description": "Permission to validate patron pin",
                    "displayName": "Permission to validate patron pin",
                    "permissionName": "patron-pin.validate"
                },
                {
                    "description": "Get a list of user-tenants records",
                    "displayName": "Permission to retrieve primary affiliation for the user",
                    "permissionName": "user-tenants.collection.get"
                },
                {
                    "description": "Create a new user-tenant record",
                    "displayName": "user-tenants item post",
                    "permissionName": "user-tenants.item.post"
                },
                {
                    "description": "Delete user-tenant record",
                    "displayName": "user-tenants item delete",
                    "permissionName": "user-tenants.item.delete"
                },
                {
                    "description": "All permissions for the mod-users module",
                    "displayName": "users all",
                    "permissionName": "users.all",
                    "subPermissions": [
                        "users.profile-picture.item.delete",
                        "users.configurations.item.get",
                        "users.configurations.item.put",
                        "users.collection.get",
                        "users.collection.delete",
                        "users.item.get",
                        "users.read.basic",
                        "users.read.restricted",
                        "users.item.post",
                        "users.item.put",
                        "users.item.delete",
                        "usergroups.collection.get",
                        "usergroups.item.get",
                        "usergroups.item.post",
                        "usergroups.item.put",
                        "usergroups.item.delete",
                        "addresstypes.collection.get",
                        "addresstypes.item.get",
                        "addresstypes.item.post",
                        "addresstypes.item.put",
                        "addresstypes.item.delete",
                        "proxiesfor.collection.get",
                        "proxiesfor.item.get",
                        "proxiesfor.item.post",
                        "proxiesfor.item.put",
                        "proxiesfor.item.delete",
                        "departments.collection.get",
                        "departments.item.get",
                        "departments.item.post",
                        "departments.item.put",
                        "departments.item.delete",
                        "patron-pin.set",
                        "patron-pin.delete",
                        "patron-pin.validate",
                        "user-tenants.collection.get",
                        "user-tenants.item.post",
                        "user-tenants.item.delete",
                        "users.profile-picture.item.get",
                        "users.profile-picture.item.put",
                        "users.profile-picture.item.post"
                    ]
                },
                {
                    "description": "Get User Custom Fields collection",
                    "displayName": "User Custom Fields - get collection",
                    "permissionName": "user-settings.custom-fields.collection.get"
                },
                {
                    "description": "Create User Custom Field",
                    "displayName": "User Custom Fields - create field",
                    "permissionName": "user-settings.custom-fields.item.post",
                    "subPermissions": [
                        "users.item.get"
                    ]
                },
                {
                    "description": "Get User Custom Field",
                    "displayName": "User Custom Fields - get field",
                    "permissionName": "user-settings.custom-fields.item.get"
                },
                {
                    "description": "Modify User Custom Field",
                    "displayName": "User Custom Fields - modify field",
                    "permissionName": "user-settings.custom-fields.item.put",
                    "subPermissions": [
                        "users.item.get"
                    ]
                },
                {
                    "description": "Delete User Custom Field",
                    "displayName": "User Custom Fields - delete field",
                    "permissionName": "user-settings.custom-fields.item.delete",
                    "subPermissions": [
                        "users.item.get",
                        "user-settings.custom-fields.item.stats.get"
                    ]
                },
                {
                    "description": "Get Custom Field Statistic",
                    "displayName": "User Custom Fields - get item usage statistic",
                    "permissionName": "user-settings.custom-fields.item.stats.get"
                },
                {
                    "description": "Get Custom Field Option Statistic",
                    "displayName": "User Custom Fields - get item option usage statistic",
                    "permissionName": "user-settings.custom-fields.item.option.stats.get"
                },
                {
                    "visible": false,
                    "description": "Entire set of permissions needed to use the user custom fields",
                    "displayName": "User Custom Fields module - all permissions",
                    "permissionName": "user-settings.custom-fields.all",
                    "subPermissions": [
                        "user-settings.custom-fields.collection.get",
                        "user-settings.custom-fields.collection.put",
                        "user-settings.custom-fields.item.post",
                        "user-settings.custom-fields.item.get",
                        "user-settings.custom-fields.item.put",
                        "user-settings.custom-fields.item.delete",
                        "user-settings.custom-fields.item.stats.get",
                        "user-settings.custom-fields.item.option.stats.get"
                    ]
                }
            ],
            "launchDescriptor": {
                "env": [
                    {
                        "name": "JAVA_OPTIONS",
                        "value": "-XX:MaxRAMPercentage=66.0"
                    },
                    {
                        "name": "DB_HOST",
                        "value": "postgres"
                    },
                    {
                        "name": "DB_PORT",
                        "value": "5432"
                    },
                    {
                        "name": "DB_USERNAME",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_PASSWORD",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_DATABASE",
                        "value": "okapi_modules"
                    },
                    {
                        "name": "DB_QUERYTIMEOUT",
                        "value": "60000"
                    },
                    {
                        "name": "DB_CHARSET",
                        "value": "UTF-8"
                    },
                    {
                        "name": "DB_MAXPOOLSIZE",
                        "value": "5"
                    },
                    {
                        "name": "KAFKA_HOST",
                        "value": "10.0.2.15"
                    },
                    {
                        "name": "KAFKA_PORT",
                        "value": "9092"
                    },
                    {
                        "name": "AWS_URL",
                        "value": "http://127.0.0.1:9000/"
                    },
                    {
                        "name": "AWS_REGION",
                        "value": ""
                    },
                    {
                        "name": "AWS_BUCKET",
                        "value": "example-bucket"
                    },
                    {
                        "name": "AWS_ACCESS_KEY_ID",
                        "value": "AKIAIOSFODNN7EXAMPLE"
                    },
                    {
                        "name": "AWS_SECRET_ACCESS_KEY",
                        "value": "wJalrXUtnFEMI/K7MDENG/EXAMPLEKEY"
                    },
                    {
                        "name": "AWS_SDK",
                        "value": "false"
                    }
                ],
                "dockerArgs": {
                    "HostConfig": {
                        "Memory": 536870912,
                        "PortBindings": {
                            "8081/tcp": [
                                {
                                    "HostPort": "%p"
                                }
                            ]
                        }
                    }
                },
                "dockerPull": true,
                "dockerImage": "folioorg/mod-users:19.3.1"
            }
        },
        {
            "id": "mod-login-7.11.0",
            "name": "login",
            "optional": [
                {
                    "id": "configuration",
                    "version": "2.0"
                },
                {
                    "id": "authtoken",
                    "version": "2.0"
                },
                {
                    "id": "authtoken2",
                    "version": "1.0"
                }
            ],
            "provides": [
                {
                    "id": "login",
                    "version": "7.3",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/authn/log/events",
                            "modulePermissions": [
                                "users.collection.get",
                                "configuration.entries.collection.get",
                                "configuration.entries.item.get"
                            ],
                            "permissionsRequired": [
                                "login.event.collection.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/authn/log/events",
                            "modulePermissions": [
                                "configuration.entries.item.get"
                            ],
                            "permissionsRequired": [
                                "login.event.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/authn/log/events/{id}",
                            "modulePermissions": [
                                "configuration.entries.item.get"
                            ],
                            "permissionsRequired": [
                                "login.event.delete"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/authn/login",
                            "modulePermissions": [
                                "auth.signtoken",
                                "auth.signrefreshtoken",
                                "users.collection.get",
                                "users.item.put",
                                "users.item.get",
                                "configuration.entries.collection.get",
                                "user-tenants.collection.get"
                            ],
                            "permissionsRequired": []
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/authn/login-with-expiry",
                            "modulePermissions": [
                                "auth.signtoken",
                                "auth.signrefreshtoken",
                                "users.collection.get",
                                "users.item.put",
                                "users.item.get",
                                "configuration.entries.collection.get",
                                "user-tenants.collection.get"
                            ],
                            "permissionsRequired": []
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/authn/logout",
                            "permissionsRequired": []
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/authn/logout-all",
                            "permissionsRequired": []
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/authn/refresh",
                            "modulePermissions": [
                                "auth.signtoken",
                                "auth.signrefreshtoken"
                            ],
                            "permissionsRequired": []
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/authn/loginAttempts/{id}",
                            "permissionsRequired": [
                                "login.attempts.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/authn/credentials",
                            "permissionsRequired": [
                                "login.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/authn/credentials",
                            "permissionsRequired": [
                                "login.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/authn/update",
                            "modulePermissions": [
                                "users.collection.get",
                                "configuration.entries.collection.get"
                            ],
                            "permissionsRequired": []
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/authn/password/repeatable",
                            "modulePermissions": [
                                "configuration.entries.collection.get"
                            ],
                            "permissionsRequired": [
                                "login.password.validate"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/authn/password-reset-action",
                            "permissionsRequired": [
                                "login.password-reset-action.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/authn/password-reset-action/{actionId}",
                            "permissionsRequired": [
                                "login.password-reset-action.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/authn/reset-password",
                            "permissionsRequired": [
                                "login.password-reset.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/authn/credentials-existence",
                            "permissionsRequired": [
                                "login.credentials-existence.get"
                            ]
                        }
                    ]
                },
                {
                    "id": "_tenant",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/_/tenant"
                        },
                        {
                            "methods": [
                                "GET",
                                "DELETE"
                            ],
                            "pathPattern": "/_/tenant/{id}"
                        }
                    ],
                    "interfaceType": "system"
                }
            ],
            "requires": [
                {
                    "id": "users",
                    "version": "15.4 16.0"
                },
                {
                    "id": "user-tenants",
                    "version": "1.0"
                }
            ],
            "permissionSets": [
                {
                    "description": "Add New Login",
                    "displayName": "login item post",
                    "permissionName": "login.item.post"
                },
                {
                    "description": "Remove existing login credentials",
                    "displayName": "login item delete",
                    "permissionName": "login.item.delete"
                },
                {
                    "description": "Read a login attempt entity for user",
                    "displayName": "login attempt item get",
                    "permissionName": "login.attempts.item.get"
                },
                {
                    "description": "Validate password for repeatability",
                    "displayName": "login password validate",
                    "permissionName": "login.password.validate"
                },
                {
                    "description": "Saves action to storage",
                    "displayName": "login create a new action",
                    "permissionName": "login.password-reset-action.post"
                },
                {
                    "description": "Retrieves action record by id",
                    "displayName": "login get the action by id",
                    "permissionName": "login.password-reset-action.get"
                },
                {
                    "description": "Resets password for user in record and deletes action record",
                    "displayName": "login password reset",
                    "permissionName": "login.password-reset.post"
                },
                {
                    "description": "Saves received event into the storage",
                    "displayName": "login save log event",
                    "permissionName": "login.event.collection.post"
                },
                {
                    "description": "Get a list of events from storage",
                    "displayName": "login get a list of events",
                    "permissionName": "login.event.collection.get"
                },
                {
                    "description": "Delete log event",
                    "displayName": "login delete event",
                    "permissionName": "login.event.delete"
                },
                {
                    "description": "Get credentials existence",
                    "displayName": "Credentials existence get",
                    "permissionName": "login.credentials-existence.get"
                },
                {
                    "description": "All permissions for login credentials",
                    "displayName": "login credentials",
                    "permissionName": "login.all",
                    "subPermissions": [
                        "login.item.post",
                        "login.item.delete",
                        "login.attempts.item.get",
                        "login.password.validate",
                        "login.password-reset-action.get",
                        "login.password-reset-action.post",
                        "login.password-reset.post",
                        "login.password.validate",
                        "login.event.collection.post",
                        "login.event.collection.get",
                        "login.event.delete",
                        "login.credentials-existence.get"
                    ]
                }
            ],
            "launchDescriptor": {
                "env": [
                    {
                        "name": "JAVA_OPTIONS",
                        "value": "-XX:MaxRAMPercentage=66.0"
                    },
                    {
                        "name": "DB_HOST",
                        "value": "postgres"
                    },
                    {
                        "name": "DB_PORT",
                        "value": "5432"
                    },
                    {
                        "name": "DB_USERNAME",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_PASSWORD",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_DATABASE",
                        "value": "okapi_modules"
                    },
                    {
                        "name": "DB_QUERYTIMEOUT",
                        "value": "60000"
                    },
                    {
                        "name": "DB_CHARSET",
                        "value": "UTF-8"
                    },
                    {
                        "name": "DB_MAXPOOLSIZE",
                        "value": "5"
                    }
                ],
                "dockerCMD": [
                    "verify.user=true"
                ],
                "dockerArgs": {
                    "HostConfig": {
                        "Memory": 357913941,
                        "PortBindings": {
                            "8081/tcp": [
                                {
                                    "HostPort": "%p"
                                }
                            ]
                        }
                    }
                },
                "dockerPull": true,
                "dockerImage": "folioorg/mod-login:7.11.0"
            }
        },
        {
            "id": "mod-authtoken-2.15.1",
            "name": "authtoken",
            "filters": [
                {
                    "type": "headers",
                    "phase": "auth",
                    "methods": [
                        "*"
                    ],
                    "pathPattern": "/*"
                }
            ],
            "provides": [
                {
                    "id": "authtoken",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/token",
                            "permissionsRequired": [
                                "auth.signtoken"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/refreshtoken",
                            "permissionsRequired": [
                                "auth.signrefreshtoken"
                            ]
                        }
                    ]
                },
                {
                    "id": "authtoken2",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/token/sign",
                            "permissionsRequired": [
                                "auth.signtoken"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/token/refresh",
                            "permissionsRequired": [
                                "auth.signrefreshtoken"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/token/invalidate",
                            "permissionsRequired": []
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/token/invalidate-all",
                            "permissionsRequired": []
                        }
                    ]
                },
                {
                    "id": "_tenant",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/_/tenant"
                        },
                        {
                            "methods": [
                                "GET",
                                "DELETE"
                            ],
                            "pathPattern": "/_/tenant/{id}"
                        }
                    ],
                    "interfaceType": "system"
                }
            ],
            "requires": [
                {
                    "id": "permissions",
                    "version": "5.3"
                },
                {
                    "id": "users",
                    "version": "15.0 16.0"
                }
            ],
            "permissionSets": [
                {
                    "description": "sign token",
                    "displayName": "auth-token - sign token",
                    "permissionName": "auth.signtoken"
                },
                {
                    "description": "sign refresh token",
                    "displayName": "auth-token - sign refresh token",
                    "permissionName": "auth.signrefreshtoken"
                }
            ],
            "launchDescriptor": {
                "env": [
                    {
                        "name": "JAVA_OPTIONS",
                        "value": "-XX:MaxRAMPercentage=66.0 -Dcache.permissions=true"
                    }
                ],
                "dockerArgs": {
                    "HostConfig": {
                        "Memory": 357913941,
                        "PortBindings": {
                            "8081/tcp": [
                                {
                                    "HostPort": "%p"
                                }
                            ]
                        }
                    }
                },
                "dockerPull": true,
                "dockerImage": "folioorg/mod-authtoken:2.15.1"
            }
        },
        {
            "id": "mod-configuration-5.10.0",
            "name": "Configuration",
            "provides": [
                {
                    "id": "configuration",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/configurations/entries",
                            "permissionsRequired": [
                                "configuration.entries.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/configurations/entries/{id}",
                            "permissionsRequired": [
                                "configuration.entries.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/configurations/entries",
                            "permissionsRequired": [
                                "configuration.entries.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/configurations/entries/{id}",
                            "permissionsRequired": [
                                "configuration.entries.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/configurations/entries/{id}",
                            "permissionsRequired": [
                                "configuration.entries.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/configurations/audit",
                            "permissionsRequired": [
                                "configuration.audit.collection.get"
                            ]
                        }
                    ]
                },
                {
                    "id": "_tenant",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/_/tenant"
                        },
                        {
                            "methods": [
                                "DELETE",
                                "GET"
                            ],
                            "pathPattern": "/_/tenant/{id}"
                        }
                    ],
                    "interfaceType": "system"
                }
            ],
            "permissionSets": [
                {
                    "description": "get configuration entries from storage",
                    "displayName": "configuration - get configuration entries collection",
                    "permissionName": "configuration.entries.collection.get"
                },
                {
                    "description": "get individual configuration entry from storage",
                    "displayName": "configuration - get configuration entry",
                    "permissionName": "configuration.entries.item.get"
                },
                {
                    "description": "create individual configuration entry in storage",
                    "displayName": "configuration - create configuration entry",
                    "permissionName": "configuration.entries.item.post"
                },
                {
                    "description": "modify individual configuration entry in storage",
                    "displayName": "configuration - modify configuration entry",
                    "permissionName": "configuration.entries.item.put"
                },
                {
                    "description": "delete individual configuration entry in storage",
                    "displayName": "configuration - delete configuration entry",
                    "permissionName": "configuration.entries.item.delete"
                },
                {
                    "description": "get configuration audit entries from storage",
                    "displayName": "configuration - get configuration audit entries collection",
                    "permissionName": "configuration.audit.collection.get"
                },
                {
                    "description": "entire set of permissions needed to use the configuration module",
                    "displayName": "configuration module - all permissions",
                    "permissionName": "configuration.all",
                    "subPermissions": [
                        "configuration.entries.collection.get",
                        "configuration.entries.item.get",
                        "configuration.entries.item.post",
                        "configuration.entries.item.put",
                        "configuration.entries.item.delete",
                        "configuration.audit.collection.get"
                    ]
                }
            ],
            "launchDescriptor": {
                "env": [
                    {
                        "name": "JAVA_OPTIONS",
                        "value": "-XX:MaxRAMPercentage=66.0"
                    },
                    {
                        "name": "DB_HOST",
                        "value": "postgres"
                    },
                    {
                        "name": "DB_PORT",
                        "value": "5432"
                    },
                    {
                        "name": "DB_USERNAME",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_PASSWORD",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_DATABASE",
                        "value": "okapi_modules"
                    },
                    {
                        "name": "DB_QUERYTIMEOUT",
                        "value": "60000"
                    },
                    {
                        "name": "DB_CHARSET",
                        "value": "UTF-8"
                    },
                    {
                        "name": "DB_MAXPOOLSIZE",
                        "value": "5"
                    }
                ],
                "dockerArgs": {
                    "HostConfig": {
                        "Memory": 357913941,
                        "PortBindings": {
                            "8081/tcp": [
                                {
                                    "HostPort": "%p"
                                }
                            ]
                        }
                    }
                },
                "dockerPull": true,
                "dockerImage": "folioorg/mod-configuration:5.10.0"
            }
        },
        {
            "id": "mod-password-validator-3.2.0",
            "name": "Password Validator Module",
            "provides": [
                {
                    "id": "password-validator",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/password/validate",
                            "modulePermissions": [
                                "login.password.validate",
                                "users.item.get"
                            ],
                            "permissionsRequired": [
                                "validation.validate.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/tenant/rules",
                            "permissionsRequired": []
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/tenant/rules",
                            "permissionsRequired": [
                                "validation.rules.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/tenant/rules",
                            "permissionsRequired": [
                                "validation.rules.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/tenant/rules/{ruleId}",
                            "permissionsRequired": [
                                "validation.rules.item.get"
                            ]
                        }
                    ]
                },
                {
                    "id": "_tenant",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/_/tenant"
                        },
                        {
                            "methods": [
                                "GET",
                                "DELETE"
                            ],
                            "pathPattern": "/_/tenant/{id}"
                        }
                    ],
                    "interfaceType": "system"
                }
            ],
            "requires": [
                {
                    "id": "users",
                    "version": "16.1"
                }
            ],
            "permissionSets": [
                {
                    "description": "Validate a password",
                    "displayName": "validate password post",
                    "permissionName": "validation.validate.post"
                },
                {
                    "description": "Add a new rule",
                    "displayName": "create validation rule",
                    "permissionName": "validation.rules.item.post"
                },
                {
                    "description": "Modify the rule info",
                    "displayName": "modify validation rule",
                    "permissionName": "validation.rules.item.put"
                },
                {
                    "description": "Get a rule by id",
                    "displayName": "get validation rule",
                    "permissionName": "validation.rules.item.get"
                },
                {
                    "description": "All permissions for password validation",
                    "displayName": "password validator module - all permissions",
                    "permissionName": "validation.all",
                    "subPermissions": [
                        "validation.validate.post",
                        "validation.rules.item.post",
                        "validation.rules.item.put",
                        "validation.rules.item.get"
                    ]
                }
            ],
            "launchDescriptor": {
                "env": [
                    {
                        "name": "JAVA_OPTIONS",
                        "value": "-XX:MaxRAMPercentage=85.0"
                    },
                    {
                        "name": "DB_HOST",
                        "value": "postgres"
                    },
                    {
                        "name": "DB_PORT",
                        "value": "5432"
                    },
                    {
                        "name": "DB_USERNAME",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_PASSWORD",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_DATABASE",
                        "value": "okapi_modules"
                    },
                    {
                        "name": "DB_QUERYTIMEOUT",
                        "value": "60000"
                    },
                    {
                        "name": "DB_CHARSET",
                        "value": "UTF-8"
                    },
                    {
                        "name": "DB_MAXPOOLSIZE",
                        "value": "5"
                    }
                ],
                "dockerArgs": {
                    "HostConfig": {
                        "Memory": 536870912,
                        "PortBindings": {
                            "8081/tcp": [
                                {
                                    "HostPort": "%p"
                                }
                            ]
                        }
                    }
                },
                "dockerPull": true,
                "dockerImage": "folioorg/mod-password-validator:3.2.0"
            }
        },
        {
            "id": "mod-tags-2.2.0",
            "name": "Tags",
            "provides": [
                {
                    "id": "tags",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/tags",
                            "permissionsRequired": [
                                "tags.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/tags",
                            "permissionsRequired": [
                                "tags.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/tags/{id}",
                            "permissionsRequired": [
                                "tags.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/tags/{id}",
                            "permissionsRequired": [
                                "tags.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/tags/{id}",
                            "permissionsRequired": [
                                "tags.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "_tenant",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/_/tenant",
                            "permissionsRequired": []
                        },
                        {
                            "methods": [
                                "GET",
                                "DELETE"
                            ],
                            "pathPattern": "/_/tenant/{id}",
                            "permissionsRequired": []
                        }
                    ],
                    "interfaceType": "system"
                }
            ],
            "requires": [],
            "permissionSets": [
                {
                    "description": "Get tags collection",
                    "displayName": "Tags - get tags collection",
                    "permissionName": "tags.collection.get"
                },
                {
                    "description": "Get individual tag",
                    "displayName": "Tags - get individual tag from storage",
                    "permissionName": "tags.item.get"
                },
                {
                    "description": "Create tag",
                    "displayName": "Tags - create tag",
                    "permissionName": "tags.item.post"
                },
                {
                    "description": "Modify tag",
                    "displayName": "Tags - modify tag",
                    "permissionName": "tags.item.put"
                },
                {
                    "description": "Delete tag",
                    "displayName": "Tags - delete tag",
                    "permissionName": "tags.item.delete"
                },
                {
                    "visible": false,
                    "description": "Entire set of permissions needed to use the tags module",
                    "displayName": "Tags module - all permissions",
                    "permissionName": "tags.all",
                    "subPermissions": [
                        "tags.collection.get",
                        "tags.item.get",
                        "tags.item.post",
                        "tags.item.put",
                        "tags.item.delete"
                    ]
                }
            ],
            "launchDescriptor": {
                "env": [
                    {
                        "name": "JAVA_OPTIONS",
                        "value": "-XX:MaxRAMPercentage=85.0"
                    },
                    {
                        "name": "DB_HOST",
                        "value": "postgres"
                    },
                    {
                        "name": "DB_PORT",
                        "value": "5432"
                    },
                    {
                        "name": "DB_USERNAME",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_PASSWORD",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_DATABASE",
                        "value": "okapi_modules"
                    },
                    {
                        "name": "DB_QUERYTIMEOUT",
                        "value": "60000"
                    },
                    {
                        "name": "DB_CHARSET",
                        "value": "UTF-8"
                    },
                    {
                        "name": "DB_MAXPOOLSIZE",
                        "value": "5"
                    }
                ],
                "dockerArgs": {
                    "HostConfig": {
                        "Memory": 542293850,
                        "PortBindings": {
                            "8081/tcp": [
                                {
                                    "HostPort": "%p"
                                }
                            ]
                        }
                    }
                },
                "dockerPull": true,
                "dockerImage": "folioorg/mod-tags:2.2.0"
            }
        },
        {
            "id": "mod-users-bl-7.7.0",
            "name": "users business logic",
            "optional": [
                {
                    "id": "loan-storage",
                    "version": "7.1"
                },
                {
                    "id": "feesfines",
                    "version": "18.0 19.0"
                },
                {
                    "id": "service-points",
                    "version": "3.3"
                },
                {
                    "id": "service-points-users",
                    "version": "1.0"
                },
                {
                    "id": "notify",
                    "version": "2.2"
                }
            ],
            "provides": [
                {
                    "id": "users-bl",
                    "version": "6.1",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/bl-users",
                            "modulePermissions": [
                                "users.collection.get",
                                "inventory-storage.service-points-users.collection.get",
                                "inventory-storage.service-points-users.item.get",
                                "inventory-storage.service-points.collection.get",
                                "inventory-storage.service-points.item.get"
                            ],
                            "permissionsRequired": [
                                "users-bl.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/bl-users/_self",
                            "modulePermissions": [
                                "users.item.get",
                                "users.collection.get",
                                "perms.users.get",
                                "usergroups.item.get",
                                "inventory-storage.service-points-users.collection.get",
                                "inventory-storage.service-points-users.item.get",
                                "inventory-storage.service-points.collection.get",
                                "inventory-storage.service-points.item.get"
                            ],
                            "permissionsRequired": []
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/bl-users/login",
                            "modulePermissions": [
                                "users.item.get",
                                "users.collection.get",
                                "perms.users.get",
                                "usergroups.item.get",
                                "inventory-storage.service-points-users.collection.get",
                                "inventory-storage.service-points-users.item.get",
                                "inventory-storage.service-points.collection.get",
                                "inventory-storage.service-points.item.get"
                            ],
                            "permissionsRequired": []
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/bl-users/login-with-expiry",
                            "modulePermissions": [
                                "users.item.get",
                                "users.collection.get",
                                "perms.users.get",
                                "usergroups.item.get",
                                "inventory-storage.service-points-users.collection.get",
                                "inventory-storage.service-points-users.item.get",
                                "inventory-storage.service-points.collection.get",
                                "inventory-storage.service-points.item.get"
                            ],
                            "permissionsRequired": []
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/bl-users/by-username/{id}",
                            "modulePermissions": [
                                "users.item.get",
                                "users.collection.get",
                                "perms.users.get",
                                "inventory-storage.service-points-users.collection.get",
                                "inventory-storage.service-points-users.item.get",
                                "inventory-storage.service-points.collection.get",
                                "inventory-storage.service-points.item.get"
                            ],
                            "permissionsRequired": [
                                "users-bl.item.get",
                                "perms.users.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/bl-users/by-id/{id}",
                            "modulePermissions": [
                                "users.item.get",
                                "users.collection.get",
                                "perms.users.get",
                                "inventory-storage.service-points-users.collection.get",
                                "inventory-storage.service-points-users.item.get",
                                "inventory-storage.service-points.collection.get",
                                "inventory-storage.service-points.item.get"
                            ],
                            "permissionsRequired": [
                                "users-bl.item.get",
                                "perms.users.get"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/bl-users/by-id/{id}",
                            "modulePermissions": [
                                "users.item.get",
                                "users.item.delete",
                                "circulation-storage.loans.collection.get",
                                "circulation-storage.requests.collection.get",
                                "accounts.collection.get",
                                "manualblocks.collection.get",
                                "proxiesfor.collection.get"
                            ],
                            "permissionsRequired": [
                                "users-bl.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/bl-users/by-id/{id}/open-transactions",
                            "modulePermissions": [
                                "users.item.get",
                                "circulation-storage.loans.collection.get",
                                "circulation-storage.requests.collection.get",
                                "accounts.collection.get",
                                "manualblocks.collection.get",
                                "proxiesfor.collection.get"
                            ],
                            "permissionsRequired": [
                                "users-bl.transactions.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/bl-users/by-username/{name}/open-transactions",
                            "modulePermissions": [
                                "users.collection.get",
                                "circulation-storage.loans.collection.get",
                                "circulation-storage.requests.collection.get",
                                "accounts.collection.get",
                                "manualblocks.collection.get",
                                "proxiesfor.collection.get"
                            ],
                            "permissionsRequired": [
                                "users-bl.transactions.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/bl-users",
                            "modulePermissions": [
                                "users.item.post",
                                "perms.users.item.post",
                                "login.item.post"
                            ],
                            "permissionsDesired": [
                                "perms.users.item.post"
                            ],
                            "permissionsRequired": [
                                "users-bl.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/bl-users/{id}",
                            "modulePermissions": [
                                "users.item.put",
                                "perms.users.item.put"
                            ],
                            "permissionsDesired": [
                                "perms.users.item.put"
                            ],
                            "permissionsRequired": [
                                "users-bl.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/bl-users/forgotten/password",
                            "modulePermissions": [
                                "users.edit",
                                "users.item.put",
                                "perms.users.item.put",
                                "configuration.entries.collection.get",
                                "users.collection.get",
                                "users.item.get",
                                "login.password-reset-action.post",
                                "auth.signtoken",
                                "notify.item.post",
                                "user-tenants.collection.get"
                            ],
                            "permissionsDesired": [],
                            "permissionsRequired": []
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/bl-users/forgotten/username",
                            "modulePermissions": [
                                "users.edit",
                                "users.item.put",
                                "perms.users.item.put",
                                "configuration.entries.collection.get",
                                "users.collection.get",
                                "users.item.get",
                                "notify.item.post",
                                "user-tenants.collection.get"
                            ],
                            "permissionsDesired": [],
                            "permissionsRequired": []
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/bl-users/settings/myprofile/password",
                            "modulePermissions": [
                                "validation.validate.post",
                                "users.item.get"
                            ],
                            "permissionsDesired": [],
                            "permissionsRequired": []
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/bl-users/password-reset/link",
                            "modulePermissions": [
                                "users.item.get",
                                "configuration.entries.collection.get",
                                "login.password-reset-action.post",
                                "auth.signtoken",
                                "notify.item.post"
                            ],
                            "permissionsDesired": [],
                            "permissionsRequired": [
                                "users-bl.password-reset-link.generate"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/bl-users/password-reset/reset",
                            "modulePermissions": [
                                "login.password-reset-action.get",
                                "users.item.get",
                                "auth.signtoken",
                                "login.password-reset.post",
                                "validation.validate.post",
                                "notify.item.post"
                            ],
                            "permissionsDesired": [],
                            "permissionsRequired": [
                                "users-bl.password-reset-link.reset"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/bl-users/password-reset/validate",
                            "modulePermissions": [
                                "users.item.get",
                                "auth.signtoken",
                                "login.password-reset-action.get"
                            ],
                            "permissionsDesired": [],
                            "permissionsRequired": [
                                "users-bl.password-reset-link.validate"
                            ]
                        }
                    ]
                }
            ],
            "requires": [
                {
                    "id": "users",
                    "version": "16.1"
                },
                {
                    "id": "permissions",
                    "version": "5.6"
                },
                {
                    "id": "login",
                    "version": "7.3"
                },
                {
                    "id": "authtoken",
                    "version": "2.0"
                },
                {
                    "id": "configuration",
                    "version": "2.0"
                },
                {
                    "id": "password-validator",
                    "version": "1.0"
                }
            ],
            "permissionSets": [
                {
                    "description": "Get a list of composite user records",
                    "displayName": "users-bl collection get",
                    "permissionName": "users-bl.collection.get"
                },
                {
                    "description": "Get a single composite user record by id",
                    "displayName": "users-bl item get",
                    "permissionName": "users-bl.item.get"
                },
                {
                    "description": "Create a new composite user record",
                    "displayName": "users-bl item post",
                    "permissionName": "users-bl.item.post"
                },
                {
                    "description": "Modify a composite user record",
                    "displayName": "users-bl item put",
                    "permissionName": "users-bl.item.put"
                },
                {
                    "description": "Generate and send password reset link",
                    "displayName": "users-bl password reset link generate",
                    "permissionName": "users-bl.password-reset-link.generate"
                },
                {
                    "description": "Validate create/reset password link and log user into system to change password",
                    "displayName": "users-bl password-reset-link validate",
                    "permissionName": "users-bl.password-reset-link.validate"
                },
                {
                    "description": "Reset password by link",
                    "displayName": "users-bl password-reset-link reset",
                    "permissionName": "users-bl.password-reset-link.reset"
                },
                {
                    "description": "Delete a user record after checking for open transactions",
                    "displayName": "users-bl item delete",
                    "permissionName": "users-bl.item.delete"
                },
                {
                    "description": "Get summary of open transactions of user record",
                    "displayName": "users-bl transactions get",
                    "permissionName": "users-bl.transactions.get"
                },
                {
                    "visible": false,
                    "description": "All user business-logic permissions",
                    "displayName": "users-bl all",
                    "permissionName": "users-bl.all",
                    "subPermissions": [
                        "users-bl.collection.get",
                        "users-bl.item.get",
                        "users-bl.item.post",
                        "users-bl.item.put",
                        "users-bl.item.delete",
                        "users-bl.password-reset-link.generate",
                        "users-bl.password-reset-link.validate",
                        "users-bl.password-reset-link.reset",
                        "users-bl.transactions.get"
                    ]
                }
            ],
            "launchDescriptor": {
                "env": [
                    {
                        "name": "JAVA_OPTIONS",
                        "value": "-XX:MaxRAMPercentage=66.0"
                    }
                ],
                "dockerArgs": {
                    "HostConfig": {
                        "Memory": 536870912,
                        "PortBindings": {
                            "8081/tcp": [
                                {
                                    "HostPort": "%p"
                                }
                            ]
                        }
                    }
                },
                "dockerPull": true,
                "dockerImage": "folioorg/mod-users-bl:7.7.0"
            }
        },
        {
            "id": "mod-notes-5.2.0",
            "name": "Notes",
            "provides": [
                {
                    "id": "notes",
                    "version": "3.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/notes",
                            "permissionsRequired": [
                                "notes.collection.get",
                                "notes.domain.all"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/notes",
                            "modulePermissions": [
                                "users.item.get"
                            ],
                            "permissionsRequired": [
                                "notes.item.post",
                                "notes.domain.all"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/notes/{id}",
                            "permissionsRequired": [
                                "notes.item.get",
                                "notes.domain.all"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/notes/{id}",
                            "modulePermissions": [
                                "users.item.get"
                            ],
                            "permissionsRequired": [
                                "notes.item.put",
                                "notes.domain.all"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/notes/{id}",
                            "permissionsRequired": [
                                "notes.item.delete",
                                "notes.domain.all"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/note-types",
                            "permissionsRequired": [
                                "note.types.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/note-types/{typeId}",
                            "permissionsRequired": [
                                "note.types.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/note-types",
                            "modulePermissions": [
                                "configuration.entries.collection.get",
                                "users.item.get"
                            ],
                            "permissionsRequired": [
                                "note.types.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/note-types/{id}",
                            "modulePermissions": [
                                "users.item.get"
                            ],
                            "permissionsRequired": [
                                "note.types.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/note-types/{id}",
                            "permissionsRequired": [
                                "note.types.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/note-links/type/{type}/id/{id}",
                            "permissionsRequired": [
                                "note.links.collection.put"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/note-links/domain/{domain}/type/{type}/id/{id}",
                            "permissionsRequired": [
                                "notes.collection.get.by.status"
                            ]
                        }
                    ]
                },
                {
                    "id": "_tenant",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/_/tenant"
                        },
                        {
                            "methods": [
                                "GET",
                                "DELETE"
                            ],
                            "pathPattern": "/_/tenant/{id}"
                        }
                    ],
                    "interfaceType": "system"
                }
            ],
            "requires": [
                {
                    "id": "users",
                    "version": "15.1 16.0"
                },
                {
                    "id": "configuration",
                    "version": "2.0"
                }
            ],
            "permissionSets": [
                {
                    "description": "Get notes collection",
                    "displayName": "Notes - get notes collection",
                    "permissionName": "notes.collection.get"
                },
                {
                    "description": "Get individual note",
                    "displayName": "Notes - get individual note from storage",
                    "permissionName": "notes.item.get"
                },
                {
                    "description": "Create note",
                    "displayName": "Notes - create note",
                    "permissionName": "notes.item.post"
                },
                {
                    "description": "Modify note",
                    "displayName": "Notes - modify note",
                    "permissionName": "notes.item.put"
                },
                {
                    "description": "Delete note",
                    "displayName": "Notes - delete note",
                    "permissionName": "notes.item.delete"
                },
                {
                    "description": "All domains",
                    "displayName": "Notes - allow access to all domains",
                    "permissionName": "notes.domain.all"
                },
                {
                    "description": "Get note types collection",
                    "displayName": "Note types - get note types collection",
                    "permissionName": "note.types.collection.get"
                },
                {
                    "description": "Get individual note type",
                    "displayName": "Note types - get individual note type from storage",
                    "permissionName": "note.types.item.get"
                },
                {
                    "description": "Create note type",
                    "displayName": "Note types - create note type",
                    "permissionName": "note.types.item.post"
                },
                {
                    "description": "Modify note type",
                    "displayName": "Note types - modify note type",
                    "permissionName": "note.types.item.put"
                },
                {
                    "description": "Delete note type",
                    "displayName": "Note types - delete note type",
                    "permissionName": "note.types.item.delete"
                },
                {
                    "description": "Update note links",
                    "displayName": "Note links - update note links",
                    "permissionName": "note.links.collection.put"
                },
                {
                    "description": "Get notes collection by status and domain",
                    "displayName": "Notes - get notes collection sorted by status",
                    "permissionName": "notes.collection.get.by.status"
                },
                {
                    "visible": false,
                    "description": "Entire set of permissions needed to use the notes modules, but no domain permissions",
                    "displayName": "Notes module - all CRUD permissions",
                    "permissionName": "notes.allops",
                    "subPermissions": [
                        "notes.collection.get",
                        "notes.item.get",
                        "notes.item.post",
                        "notes.item.put",
                        "notes.item.delete",
                        "note.links.collection.put",
                        "notes.collection.get.by.status"
                    ]
                },
                {
                    "visible": false,
                    "description": "Entire set of permissions needed to use the note type for note module",
                    "displayName": "Note types - all CRUD permissions",
                    "permissionName": "note.types.allops",
                    "subPermissions": [
                        "note.types.item.get",
                        "note.types.collection.get",
                        "note.types.item.post",
                        "note.types.item.put",
                        "note.types.item.delete"
                    ]
                },
                {
                    "visible": false,
                    "description": "Entire set of permissions needed to use the notes modules on any domain",
                    "displayName": "Notes module - all permissions and all domains",
                    "permissionName": "notes.all",
                    "subPermissions": [
                        "notes.allops",
                        "notes.domain.all",
                        "note.types.allops"
                    ]
                }
            ],
            "launchDescriptor": {
                "env": [
                    {
                        "name": "JAVA_OPTIONS",
                        "value": "-XX:MaxRAMPercentage=66.0"
                    },
                    {
                        "name": "DB_HOST",
                        "value": "postgres"
                    },
                    {
                        "name": "DB_PORT",
                        "value": "5432"
                    },
                    {
                        "name": "DB_USERNAME",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_PASSWORD",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_DATABASE",
                        "value": "okapi_modules"
                    },
                    {
                        "name": "DB_QUERYTIMEOUT",
                        "value": "60000"
                    },
                    {
                        "name": "DB_CHARSET",
                        "value": "UTF-8"
                    },
                    {
                        "name": "DB_MAXPOOLSIZE",
                        "value": "5"
                    }
                ],
                "dockerArgs": {
                    "HostConfig": {
                        "Memory": 542293850,
                        "PortBindings": {
                            "8081/tcp": [
                                {
                                    "HostPort": "%p"
                                }
                            ]
                        }
                    }
                },
                "dockerPull": true,
                "dockerImage": "folioorg/mod-notes:5.2.0"
            }
        },
        {
            "id": "mod-settings-1.0.3",
            "name": "settings",
            "provides": [
                {
                    "id": "_tenant",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/_/tenant"
                        },
                        {
                            "methods": [
                                "GET",
                                "DELETE"
                            ],
                            "pathPattern": "/_/tenant/{id}"
                        }
                    ],
                    "interfaceType": "system"
                },
                {
                    "id": "settings",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/settings/entries",
                            "permissionsDesired": [
                                "mod-settings.global.write.*",
                                "mod-settings.users.write.*",
                                "mod-settings.owner.write.*"
                            ],
                            "permissionsRequired": [
                                "mod-settings.entries.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/settings/entries",
                            "permissionsDesired": [
                                "mod-settings.global.read.*",
                                "mod-settings.users.read.*",
                                "mod-settings.owner.read.*"
                            ],
                            "permissionsRequired": [
                                "mod-settings.entries.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/settings/entries/{id}",
                            "permissionsDesired": [
                                "mod-settings.global.read.*",
                                "mod-settings.users.read.*",
                                "mod-settings.owner.read.*"
                            ],
                            "permissionsRequired": [
                                "mod-settings.entries.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/settings/entries/{id}",
                            "permissionsDesired": [
                                "mod-settings.global.write.*",
                                "mod-settings.users.write.*",
                                "mod-settings.owner.write.*"
                            ],
                            "permissionsRequired": [
                                "mod-settings.entries.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/settings/entries/{id}",
                            "permissionsDesired": [
                                "mod-settings.global.write.*",
                                "mod-settings.users.write.*",
                                "mod-settings.owner.write.*"
                            ],
                            "permissionsRequired": [
                                "mod-settings.entries.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/settings/upload",
                            "permissionsDesired": [
                                "mod-settings.global.write.*",
                                "mod-settings.users.write.*",
                                "mod-settings.owner.write.*"
                            ],
                            "permissionsRequired": [
                                "mod-settings.entries.upload"
                            ]
                        }
                    ]
                }
            ],
            "requires": [],
            "permissionSets": [
                {
                    "description": "Create setting",
                    "displayName": "settings - create setting",
                    "permissionName": "mod-settings.entries.item.post"
                },
                {
                    "description": "Get settings",
                    "displayName": "settings - get settings",
                    "permissionName": "mod-settings.entries.collection.get"
                },
                {
                    "description": "Get setting",
                    "displayName": "settings - get setting",
                    "permissionName": "mod-settings.entries.item.get"
                },
                {
                    "description": "Update setting",
                    "displayName": "settings - update setting",
                    "permissionName": "mod-settings.entries.item.put"
                },
                {
                    "description": "Delete setting",
                    "displayName": "settings - delete setting",
                    "permissionName": "mod-settings.entries.item.delete"
                },
                {
                    "description": "Upload settings",
                    "displayName": "settings - upload",
                    "permissionName": "mod-settings.entries.upload"
                },
                {
                    "description": "All setting permissions",
                    "displayName": "settings - all setting permissions",
                    "permissionName": "mod-settings.entries.all",
                    "subPermissions": [
                        "mod-settings.entries.item.post",
                        "mod-settings.entries.collection.get",
                        "mod-settings.entries.item.get",
                        "mod-settings.entries.item.put",
                        "mod-settings.entries.item.delete",
                        "mod-settings.entries.upload"
                    ]
                }
            ],
            "launchDescriptor": {
                "env": [
                    {
                        "name": "JAVA_OPTIONS",
                        "value": "-XX:MaxRAMPercentage=66.0"
                    },
                    {
                        "name": "DB_HOST",
                        "value": "postgres"
                    },
                    {
                        "name": "DB_PORT",
                        "value": "5432"
                    },
                    {
                        "name": "DB_USERNAME",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_PASSWORD",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_DATABASE",
                        "value": "okapi_modules"
                    },
                    {
                        "name": "DB_MAXPOOLSIZE",
                        "value": "5"
                    }
                ],
                "dockerArgs": {
                    "HostConfig": {
                        "Memory": 2147483648,
                        "PortBindings": {
                            "8081/tcp": [
                                {
                                    "HostPort": "%p"
                                }
                            ]
                        }
                    }
                },
                "dockerPull": true,
                "dockerImage": "folioorg/mod-settings:1.0.3"
            }
        },
        {
            "id": "mod-inventory-storage-27.1.0",
            "name": "Inventory Storage Module",
            "optional": [
                {
                    "id": "consortia",
                    "version": "1.0"
                }
            ],
            "provides": [
                {
                    "id": "item-storage-dereferenced",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/item-storage-dereferenced/items",
                            "permissionsRequired": [
                                "inventory-storage-dereferenced.items.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/item-storage-dereferenced/items/{id}",
                            "permissionsRequired": [
                                "inventory-storage-dereferenced.items.item.get"
                            ]
                        }
                    ]
                },
                {
                    "id": "item-storage",
                    "version": "10.1",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/item-storage/items",
                            "permissionsRequired": [
                                "inventory-storage.items.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/item-storage/items/{id}",
                            "permissionsRequired": [
                                "inventory-storage.items.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/item-storage/items",
                            "permissionsRequired": [
                                "inventory-storage.items.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/item-storage/items/{id}",
                            "permissionsRequired": [
                                "inventory-storage.items.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/item-storage/items/{id}",
                            "permissionsRequired": [
                                "inventory-storage.items.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/item-storage/items",
                            "permissionsRequired": [
                                "inventory-storage.items.collection.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "item-storage-batch-sync",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/item-storage/batch/synchronous",
                            "permissionsRequired": [
                                "inventory-storage.items.batch.post"
                            ]
                        }
                    ]
                },
                {
                    "id": "item-storage-batch-sync-unsafe",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/item-storage/batch/synchronous-unsafe",
                            "permissionsRequired": [
                                "inventory-storage.items.batch-unsafe.post"
                            ]
                        }
                    ]
                },
                {
                    "id": "holdings-storage",
                    "version": "6.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/holdings-storage/holdings",
                            "permissionsRequired": [
                                "inventory-storage.holdings.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/holdings-storage/holdings/{id}",
                            "permissionsRequired": [
                                "inventory-storage.holdings.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/holdings-storage/holdings",
                            "modulePermissions": [
                                "user-tenants.collection.get",
                                "consortia.sharing-instances.item.post"
                            ],
                            "permissionsRequired": [
                                "inventory-storage.holdings.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/holdings-storage/holdings/{id}",
                            "permissionsRequired": [
                                "inventory-storage.holdings.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/holdings-storage/holdings/{id}",
                            "permissionsRequired": [
                                "inventory-storage.holdings.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/holdings-storage/holdings",
                            "permissionsRequired": [
                                "inventory-storage.holdings.collection.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "holdings-storage-batch-sync",
                    "version": "1.1",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/holdings-storage/batch/synchronous",
                            "modulePermissions": [
                                "user-tenants.collection.get",
                                "consortia.sharing-instances.item.post"
                            ],
                            "permissionsRequired": [
                                "inventory-storage.holdings.batch.post"
                            ]
                        }
                    ]
                },
                {
                    "id": "holdings-storage-batch-sync-unsafe",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/holdings-storage/batch/synchronous-unsafe",
                            "modulePermissions": [
                                "user-tenants.collection.get",
                                "consortia.sharing-instances.item.post"
                            ],
                            "permissionsRequired": [
                                "inventory-storage.holdings.batch-unsafe.post"
                            ]
                        }
                    ]
                },
                {
                    "id": "instance-storage",
                    "version": "10.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/instance-storage/instances",
                            "permissionsRequired": [
                                "inventory-storage.instances.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/instance-storage/instances/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instances.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/instance-storage/instances",
                            "permissionsRequired": [
                                "inventory-storage.instances.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/instance-storage/instances/{id}",
                            "modulePermissions": [
                                "user-tenants.collection.get",
                                "consortia.sharing-instances.collection.get"
                            ],
                            "permissionsRequired": [
                                "inventory-storage.instances.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/instance-storage/instances/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instances.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/instance-storage/instances/{id}/source-record",
                            "permissionsRequired": [
                                "inventory-storage.instances.source-record.delete"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/instance-storage/instances/{id}/source-record/marc-json",
                            "permissionsRequired": [
                                "inventory-storage.instances.source-record.marc-json.get"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/instance-storage/instances/{id}/source-record/marc-json",
                            "permissionsRequired": [
                                "inventory-storage.instances.source-record.marc-json.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/instance-storage/instances/{id}/source-record/marc-json",
                            "permissionsRequired": [
                                "inventory-storage.instances.source-record.marc-json.delete"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/instance-storage/instances",
                            "permissionsRequired": [
                                "inventory-storage.instances.collection.delete"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/instance-storage/instance-relationships",
                            "permissionsRequired": [
                                "inventory-storage.instance-relationships.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/instance-storage/instance-relationships",
                            "permissionsRequired": [
                                "inventory-storage.instance-relationships.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/instance-storage/instance-relationships/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instance-relationships.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/instance-storage/instance-relationships/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instance-relationships.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/instance-storage/instance-relationships/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instance-relationships.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "instance-preceding-succeeding-titles",
                    "version": "0.2",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/preceding-succeeding-titles",
                            "permissionsRequired": [
                                "inventory-storage.preceding-succeeding-titles.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/preceding-succeeding-titles/{id}",
                            "permissionsRequired": [
                                "inventory-storage.preceding-succeeding-titles.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/preceding-succeeding-titles",
                            "permissionsRequired": [
                                "inventory-storage.preceding-succeeding-titles.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/preceding-succeeding-titles/{id}",
                            "permissionsRequired": [
                                "inventory-storage.preceding-succeeding-titles.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/preceding-succeeding-titles/{id}",
                            "permissionsRequired": [
                                "inventory-storage.preceding-succeeding-titles.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/preceding-succeeding-titles/instances/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instances.preceding-succeeding-titles.collection.put"
                            ]
                        }
                    ]
                },
                {
                    "id": "instance-storage-batch",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/instance-storage/batch/instances",
                            "permissionsRequired": [
                                "inventory-storage.instances.batch.post"
                            ]
                        }
                    ]
                },
                {
                    "id": "instance-storage-batch-sync",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/instance-storage/batch/synchronous",
                            "permissionsRequired": [
                                "inventory-storage.instances.batch.post"
                            ]
                        }
                    ]
                },
                {
                    "id": "instance-storage-batch-sync-unsafe",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/instance-storage/batch/synchronous-unsafe",
                            "permissionsRequired": [
                                "inventory-storage.instances.batch-unsafe.post"
                            ]
                        }
                    ]
                },
                {
                    "id": "loan-types",
                    "version": "2.3",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/loan-types",
                            "permissionsRequired": [
                                "inventory-storage.loan-types.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/loan-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.loan-types.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/loan-types",
                            "permissionsRequired": [
                                "inventory-storage.loan-types.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/loan-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.loan-types.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/loan-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.loan-types.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "material-types",
                    "version": "2.2",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/material-types",
                            "permissionsRequired": [
                                "inventory-storage.material-types.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/material-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.material-types.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/material-types",
                            "permissionsRequired": [
                                "inventory-storage.material-types.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/material-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.material-types.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/material-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.material-types.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "shelf-locations",
                    "version": "1.1",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/shelf-locations",
                            "permissionsRequired": [
                                "inventory-storage.shelf-locations.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/shelf-locations/{id}",
                            "permissionsRequired": [
                                "inventory-storage.shelf-locations.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/shelf-locations",
                            "permissionsRequired": [
                                "inventory-storage.shelf-locations.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/shelf-locations/{id}",
                            "permissionsRequired": [
                                "inventory-storage.shelf-locations.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/shelf-locations/{id}",
                            "permissionsRequired": [
                                "inventory-storage.shelf-locations.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "location-units",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/location-units/institutions",
                            "permissionsRequired": [
                                "inventory-storage.location-units.institutions.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/location-units/institutions/{id}",
                            "permissionsRequired": [
                                "inventory-storage.location-units.institutions.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/location-units/institutions",
                            "permissionsRequired": [
                                "inventory-storage.location-units.institutions.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/location-units/institutions/{id}",
                            "permissionsRequired": [
                                "inventory-storage.location-units.institutions.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/location-units/institutions/{id}",
                            "permissionsRequired": [
                                "inventory-storage.location-units.institutions.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/location-units/campuses",
                            "permissionsRequired": [
                                "inventory-storage.location-units.campuses.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/location-units/campuses/{id}",
                            "permissionsRequired": [
                                "inventory-storage.location-units.campuses.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/location-units/campuses",
                            "permissionsRequired": [
                                "inventory-storage.location-units.campuses.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/location-units/campuses/{id}",
                            "permissionsRequired": [
                                "inventory-storage.location-units.campuses.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/location-units/campuses/{id}",
                            "permissionsRequired": [
                                "inventory-storage.location-units.campuses.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/location-units/libraries",
                            "permissionsRequired": [
                                "inventory-storage.location-units.libraries.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/location-units/libraries/{id}",
                            "permissionsRequired": [
                                "inventory-storage.location-units.libraries.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/location-units/libraries",
                            "permissionsRequired": [
                                "inventory-storage.location-units.libraries.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/location-units/libraries/{id}",
                            "permissionsRequired": [
                                "inventory-storage.location-units.libraries.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/location-units/libraries/{id}",
                            "permissionsRequired": [
                                "inventory-storage.location-units.libraries.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "locations",
                    "version": "3.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/locations",
                            "permissionsRequired": [
                                "inventory-storage.locations.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/locations/{id}",
                            "permissionsRequired": [
                                "inventory-storage.locations.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/locations",
                            "permissionsRequired": [
                                "inventory-storage.locations.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/locations/{id}",
                            "permissionsRequired": [
                                "inventory-storage.locations.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/locations/{id}",
                            "permissionsRequired": [
                                "inventory-storage.locations.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "instance-relationship-types",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/instance-relationship-types",
                            "permissionsRequired": [
                                "inventory-storage.instance-relationship-types.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/instance-relationship-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instance-relationship-types.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/instance-relationship-types",
                            "permissionsRequired": [
                                "inventory-storage.instance-relationship-types.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/instance-relationship-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instance-relationship-types.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/instance-relationship-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instance-relationship-types.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "identifier-types",
                    "version": "1.2",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/identifier-types",
                            "permissionsRequired": [
                                "inventory-storage.identifier-types.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/identifier-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.identifier-types.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/identifier-types",
                            "permissionsRequired": [
                                "inventory-storage.identifier-types.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/identifier-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.identifier-types.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/identifier-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.identifier-types.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "contributor-types",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/contributor-types",
                            "permissionsRequired": [
                                "inventory-storage.contributor-types.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/contributor-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.contributor-types.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/contributor-types",
                            "permissionsRequired": [
                                "inventory-storage.contributor-types.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/contributor-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.contributor-types.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/contributor-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.contributor-types.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "contributor-name-types",
                    "version": "1.3",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/contributor-name-types",
                            "permissionsRequired": [
                                "inventory-storage.contributor-name-types.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/contributor-name-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.contributor-name-types.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/contributor-name-types",
                            "permissionsRequired": [
                                "inventory-storage.contributor-name-types.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/contributor-name-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.contributor-name-types.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/contributor-name-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.contributor-name-types.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "inventory-record-bulk",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/record-bulk/ids",
                            "permissionsRequired": [
                                "inventory-storage.record-bulk.ids.get"
                            ]
                        }
                    ]
                },
                {
                    "id": "instance-formats",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/instance-formats",
                            "permissionsRequired": [
                                "inventory-storage.instance-formats.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/instance-formats/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instance-formats.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/instance-formats",
                            "permissionsRequired": [
                                "inventory-storage.instance-formats.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/instance-formats/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instance-formats.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/instance-formats/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instance-formats.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "instance-types",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/instance-types",
                            "permissionsRequired": [
                                "inventory-storage.instance-types.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/instance-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instance-types.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/instance-types",
                            "permissionsRequired": [
                                "inventory-storage.instance-types.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/instance-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instance-types.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/instance-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instance-types.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "nature-of-content-terms",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/nature-of-content-terms",
                            "permissionsRequired": [
                                "inventory-storage.nature-of-content-terms.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/nature-of-content-terms/{id}",
                            "permissionsRequired": [
                                "inventory-storage.nature-of-content-terms.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/nature-of-content-terms",
                            "permissionsRequired": [
                                "inventory-storage.nature-of-content-terms.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/nature-of-content-terms/{id}",
                            "permissionsRequired": [
                                "inventory-storage.nature-of-content-terms.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/nature-of-content-terms/{id}",
                            "permissionsRequired": [
                                "inventory-storage.nature-of-content-terms.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "classification-types",
                    "version": "1.2",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/classification-types",
                            "permissionsRequired": [
                                "inventory-storage.classification-types.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/classification-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.classification-types.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/classification-types",
                            "permissionsRequired": [
                                "inventory-storage.classification-types.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/classification-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.classification-types.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/classification-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.classification-types.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "alternative-title-types",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/alternative-title-types",
                            "permissionsRequired": [
                                "inventory-storage.alternative-title-types.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/alternative-title-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.alternative-title-types.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/alternative-title-types",
                            "permissionsRequired": [
                                "inventory-storage.alternative-title-types.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/alternative-title-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.alternative-title-types.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/alternative-title-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.alternative-title-types.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "modes-of-issuance",
                    "version": "1.1",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/modes-of-issuance",
                            "permissionsRequired": [
                                "inventory-storage.modes-of-issuance.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/modes-of-issuance/{id}",
                            "permissionsRequired": [
                                "inventory-storage.modes-of-issuance.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/modes-of-issuance",
                            "permissionsRequired": [
                                "inventory-storage.modes-of-issuance.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/modes-of-issuance/{id}",
                            "permissionsRequired": [
                                "inventory-storage.modes-of-issuance.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/modes-of-issuance/{id}",
                            "permissionsRequired": [
                                "inventory-storage.modes-of-issuance.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "instance-statuses",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/instance-statuses",
                            "permissionsRequired": [
                                "inventory-storage.instance-statuses.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/instance-statuses/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instance-statuses.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/instance-statuses",
                            "permissionsRequired": [
                                "inventory-storage.instance-statuses.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/instance-statuses/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instance-statuses.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/instance-statuses/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instance-statuses.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "electronic-access-relationships",
                    "version": "1.1",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/electronic-access-relationships",
                            "permissionsRequired": [
                                "inventory-storage.electronic-access-relationships.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/electronic-access-relationships/{id}",
                            "permissionsRequired": [
                                "inventory-storage.electronic-access-relationships.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/electronic-access-relationships",
                            "permissionsRequired": [
                                "inventory-storage.electronic-access-relationships.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/electronic-access-relationships/{id}",
                            "permissionsRequired": [
                                "inventory-storage.electronic-access-relationships.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/electronic-access-relationships/{id}",
                            "permissionsRequired": [
                                "inventory-storage.electronic-access-relationships.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "statistical-code-types",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/statistical-code-types",
                            "permissionsRequired": [
                                "inventory-storage.statistical-code-types.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/statistical-code-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.statistical-code-types.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/statistical-code-types",
                            "permissionsRequired": [
                                "inventory-storage.statistical-code-types.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/statistical-code-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.statistical-code-types.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/statistical-code-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.statistical-code-types.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "statistical-codes",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/statistical-codes",
                            "permissionsRequired": [
                                "inventory-storage.statistical-codes.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/statistical-codes/{id}",
                            "permissionsRequired": [
                                "inventory-storage.statistical-codes.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/statistical-codes",
                            "permissionsRequired": [
                                "inventory-storage.statistical-codes.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/statistical-codes/{id}",
                            "permissionsRequired": [
                                "inventory-storage.statistical-codes.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/statistical-codes/{id}",
                            "permissionsRequired": [
                                "inventory-storage.statistical-codes.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "ill-policies",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/ill-policies",
                            "permissionsRequired": [
                                "inventory-storage.ill-policies.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/ill-policies/{id}",
                            "permissionsRequired": [
                                "inventory-storage.ill-policies.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/ill-policies",
                            "permissionsRequired": [
                                "inventory-storage.ill-policies.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/ill-policies/{id}",
                            "permissionsRequired": [
                                "inventory-storage.ill-policies.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/ill-policies/{id}",
                            "permissionsRequired": [
                                "inventory-storage.ill-policies.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "holdings-types",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/holdings-types",
                            "permissionsRequired": [
                                "inventory-storage.holdings-types.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/holdings-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.holdings-types.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/holdings-types",
                            "permissionsRequired": [
                                "inventory-storage.holdings-types.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/holdings-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.holdings-types.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/holdings-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.holdings-types.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "call-number-types",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/call-number-types",
                            "permissionsRequired": [
                                "inventory-storage.call-number-types.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/call-number-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.call-number-types.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/call-number-types",
                            "permissionsRequired": [
                                "inventory-storage.call-number-types.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/call-number-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.call-number-types.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/call-number-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.call-number-types.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "instance-note-types",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/instance-note-types",
                            "permissionsRequired": [
                                "inventory-storage.instance-note-types.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/instance-note-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instance-note-types.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/instance-note-types",
                            "permissionsRequired": [
                                "inventory-storage.instance-note-types.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/instance-note-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instance-note-types.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/instance-note-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instance-note-types.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "holdings-note-types",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/holdings-note-types",
                            "permissionsRequired": [
                                "inventory-storage.holdings-note-types.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/holdings-note-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.holdings-note-types.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/holdings-note-types",
                            "permissionsRequired": [
                                "inventory-storage.holdings-note-types.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/holdings-note-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.holdings-note-types.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/holdings-note-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.holdings-note-types.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "item-note-types",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/item-note-types",
                            "permissionsRequired": [
                                "inventory-storage.item-note-types.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/item-note-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.item-note-types.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/item-note-types",
                            "permissionsRequired": [
                                "inventory-storage.item-note-types.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/item-note-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.item-note-types.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/item-note-types/{id}",
                            "permissionsRequired": [
                                "inventory-storage.item-note-types.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "item-damaged-statuses",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/item-damaged-statuses",
                            "permissionsRequired": [
                                "inventory-storage.item-damaged-statuses.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/item-damaged-statuses/{id}",
                            "permissionsRequired": [
                                "inventory-storage.item-damaged-statuses.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/item-damaged-statuses",
                            "permissionsRequired": [
                                "inventory-storage.item-damaged-statuses.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/item-damaged-statuses/{id}",
                            "permissionsRequired": [
                                "inventory-storage.item-damaged-statuses.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/item-damaged-statuses/{id}",
                            "permissionsRequired": [
                                "inventory-storage.item-damaged-statuses.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "service-points",
                    "version": "3.3",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/service-points",
                            "permissionsRequired": [
                                "inventory-storage.service-points.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/service-points/{id}",
                            "permissionsRequired": [
                                "inventory-storage.service-points.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/service-points",
                            "permissionsRequired": [
                                "inventory-storage.service-points.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/service-points/{id}",
                            "permissionsRequired": [
                                "inventory-storage.service-points.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/service-points/{id}",
                            "permissionsRequired": [
                                "inventory-storage.service-points.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "service-points-users",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/service-points-users",
                            "permissionsRequired": [
                                "inventory-storage.service-points-users.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/service-points-users/{id}",
                            "permissionsRequired": [
                                "inventory-storage.service-points-users.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/service-points-users",
                            "permissionsRequired": [
                                "inventory-storage.service-points-users.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/service-points-users/{id}",
                            "permissionsRequired": [
                                "inventory-storage.service-points-users.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/service-points-users/{id}",
                            "permissionsRequired": [
                                "inventory-storage.service-points-users.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "hrid-settings-storage",
                    "version": "1.3",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/hrid-settings-storage/hrid-settings",
                            "permissionsRequired": [
                                "inventory-storage.hrid-settings.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/hrid-settings-storage/hrid-settings",
                            "permissionsRequired": [
                                "inventory-storage.hrid-settings.item.put"
                            ]
                        }
                    ]
                },
                {
                    "id": "holdings-sources",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/holdings-sources",
                            "permissionsRequired": [
                                "inventory-storage.holdings-sources.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/holdings-sources/{id}",
                            "permissionsRequired": [
                                "inventory-storage.holdings-sources.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/holdings-sources",
                            "permissionsRequired": [
                                "inventory-storage.holdings-sources.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/holdings-sources/{id}",
                            "permissionsRequired": [
                                "inventory-storage.holdings-sources.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/holdings-sources/{id}",
                            "permissionsRequired": [
                                "inventory-storage.holdings-sources.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "bound-with-parts-storage",
                    "version": "1.1",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/inventory-storage/bound-with-parts",
                            "permissionsRequired": [
                                "inventory-storage.bound-with-parts.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/inventory-storage/bound-with-parts/{id}",
                            "permissionsRequired": [
                                "inventory-storage.bound-with-parts.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/inventory-storage/bound-with-parts",
                            "permissionsRequired": [
                                "inventory-storage.bound-with-parts.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/inventory-storage/bound-with-parts/{id}",
                            "permissionsRequired": [
                                "inventory-storage.bound-with-parts.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/inventory-storage/bound-with-parts/{id}",
                            "permissionsRequired": [
                                "inventory-storage.bound-with-parts.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/inventory-storage/bound-withs",
                            "permissionsRequired": [
                                "inventory-storage.bound-with-parts.collection.get",
                                "inventory-storage.bound-with-parts.item.post",
                                "inventory-storage.bound-with-parts.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "_tenant",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/_/tenant"
                        },
                        {
                            "methods": [
                                "DELETE",
                                "GET"
                            ],
                            "pathPattern": "/_/tenant/{id}"
                        }
                    ],
                    "interfaceType": "system"
                },
                {
                    "id": "_jsonSchemas",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/_/jsonSchemas",
                            "permissionsRequired": []
                        }
                    ],
                    "interfaceType": "multiple"
                },
                {
                    "id": "oaipmhview",
                    "version": "1.1",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/oai-pmh-view/instances",
                            "permissionsRequired": [
                                "inventory-storage.oai-pmh-view.instances.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/oai-pmh-view/updatedInstanceIds",
                            "permissionsRequired": [
                                "inventory-storage.oai-pmh-view.updatedinstanceids.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/oai-pmh-view/enrichedInstances",
                            "permissionsRequired": [
                                "inventory-storage.oai-pmh-view.enrichedinstances.collection.post"
                            ]
                        }
                    ]
                },
                {
                    "id": "inventory-hierarchy",
                    "version": "0.5",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/inventory-hierarchy/updated-instance-ids",
                            "permissionsRequired": [
                                "inventory-storage.inventory-hierarchy.updated-instances-ids.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/inventory-hierarchy/items-and-holdings",
                            "permissionsRequired": [
                                "inventory-storage.inventory-hierarchy.items-and-holdings.collection.post"
                            ]
                        }
                    ]
                },
                {
                    "id": "inventory-view",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/inventory-view/instances",
                            "permissionsRequired": [
                                "inventory-storage.inventory-view.instances.collection.get"
                            ]
                        }
                    ]
                },
                {
                    "id": "inventory-view-instance-set",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/inventory-view/instance-set",
                            "permissionsRequired": [
                                "inventory-storage.inventory-view.instance-set.get"
                            ]
                        }
                    ]
                },
                {
                    "id": "instance-reindex",
                    "version": "0.1",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/instance-storage/reindex",
                            "permissionsRequired": [
                                "inventory-storage.instance.reindex.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/instance-storage/reindex",
                            "permissionsRequired": [
                                "inventory-storage.instance.reindex.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/instance-storage/reindex/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instance.reindex.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/instance-storage/reindex/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instance.reindex.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "instance-iteration",
                    "version": "0.1",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/instance-storage/instances/iteration",
                            "permissionsRequired": [
                                "inventory-storage.instance.iteration.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/instance-storage/instances/iteration/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instance.iteration.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/instance-storage/instances/iteration/{id}",
                            "permissionsRequired": [
                                "inventory-storage.instance.iteration.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "async-migration",
                    "version": "0.1",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/inventory-storage/migrations/jobs",
                            "permissionsRequired": [
                                "inventory-storage.migration.job.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/inventory-storage/migrations",
                            "permissionsRequired": [
                                "inventory-storage.migration.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/inventory-storage/migrations/jobs/{id}",
                            "permissionsRequired": [
                                "inventory-storage.migration.job.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/inventory-storage/migrations/jobs",
                            "permissionsRequired": [
                                "inventory-storage.migration.job.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/inventory-storage/migrations/jobs/{id}",
                            "permissionsRequired": [
                                "inventory-storage.migration.job.item.delete"
                            ]
                        }
                    ]
                }
            ],
            "replaces": [
                "inventory-storage"
            ],
            "requires": [
                {
                    "id": "user-tenants",
                    "version": "1.0"
                }
            ],
            "permissionSets": [
                {
                    "description": "get instance relationships by query",
                    "displayName": "inventory storage - get instance relationships by query",
                    "permissionName": "inventory-storage.instance-relationships.collection.get"
                },
                {
                    "description": "get instance relationship by id",
                    "displayName": "inventory storage - get instance relationship by id",
                    "permissionName": "inventory-storage.instance-relationships.item.get"
                },
                {
                    "description": "create an instance relationship",
                    "displayName": "inventory storage - create an instance relationship",
                    "permissionName": "inventory-storage.instance-relationships.item.post"
                },
                {
                    "description": "modify an instance relationship",
                    "displayName": "inventory storage - modify an instance relationship",
                    "permissionName": "inventory-storage.instance-relationships.item.put"
                },
                {
                    "description": "delete an instance relationship",
                    "displayName": "inventory storage - delete an instance relationship",
                    "permissionName": "inventory-storage.instance-relationships.item.delete"
                },
                {
                    "description": "get item collection from storage",
                    "displayName": "inventory storage - get item collection",
                    "permissionName": "inventory-storage.items.collection.get"
                },
                {
                    "description": "delete entire item collection from storage",
                    "displayName": "inventory storage - delete entire item collection",
                    "permissionName": "inventory-storage.items.collection.delete"
                },
                {
                    "description": "get individual item from storage",
                    "displayName": "inventory storage - get individual item",
                    "permissionName": "inventory-storage.items.item.get"
                },
                {
                    "description": "get dereferenced individual item from storage",
                    "displayName": "inventory storage - get dereferenced version of individual item",
                    "permissionName": "inventory-storage-dereferenced.items.item.get"
                },
                {
                    "description": "get dereferenced item collections from storage",
                    "displayName": "inventory storage - get collection of dereferenced item records",
                    "permissionName": "inventory-storage-dereferenced.items.collection.get"
                },
                {
                    "description": "create individual item in storage",
                    "displayName": "inventory storage - create individual item",
                    "permissionName": "inventory-storage.items.item.post"
                },
                {
                    "description": "modify item in storage",
                    "displayName": "inventory storage - modify item",
                    "permissionName": "inventory-storage.items.item.put"
                },
                {
                    "description": "delete individual item from storage",
                    "displayName": "inventory storage - delete individual item",
                    "permissionName": "inventory-storage.items.item.delete"
                },
                {
                    "description": "create or update a number of items in storage",
                    "displayName": "inventory storage - create or update a number of items",
                    "permissionName": "inventory-storage.items.batch.post"
                },
                {
                    "description": "create or update a number of items in storage with optimistic locking disabled",
                    "displayName": "inventory storage - create or update a number of items with optimistic locking disabled",
                    "permissionName": "inventory-storage.items.batch-unsafe.post"
                },
                {
                    "description": "get holdings collection from storage",
                    "displayName": "inventory storage - get holdings collection",
                    "permissionName": "inventory-storage.holdings.collection.get"
                },
                {
                    "description": "delete entire holdings collection from storage",
                    "displayName": "inventory storage - delete entire holdings collection",
                    "permissionName": "inventory-storage.holdings.collection.delete"
                },
                {
                    "description": "get individual holdings record from storage",
                    "displayName": "inventory storage - get individual holdings record",
                    "permissionName": "inventory-storage.holdings.item.get"
                },
                {
                    "description": "create individual holdings record in storage",
                    "displayName": "inventory storage - create individual holdings record",
                    "permissionName": "inventory-storage.holdings.item.post"
                },
                {
                    "description": "modify holdings record in storage",
                    "displayName": "inventory storage - modify holdings record",
                    "permissionName": "inventory-storage.holdings.item.put"
                },
                {
                    "description": "delete individual holdings record from storage",
                    "displayName": "inventory storage - delete individual holdings record",
                    "permissionName": "inventory-storage.holdings.item.delete"
                },
                {
                    "description": "create or update a number of holdings in storage",
                    "displayName": "inventory storage - create or update a number of holdings",
                    "permissionName": "inventory-storage.holdings.batch.post"
                },
                {
                    "description": "create or update a number of holdings in storage with optimistic locking disabled",
                    "displayName": "inventory storage - create or update a number of holdings with optimistic locking disabled",
                    "permissionName": "inventory-storage.holdings.batch-unsafe.post"
                },
                {
                    "description": "get instance collection from storage",
                    "displayName": "inventory storage - get instance collection",
                    "permissionName": "inventory-storage.instances.collection.get"
                },
                {
                    "description": "delete entire instance collection from storage",
                    "displayName": "inventory storage - delete entire instance collection",
                    "permissionName": "inventory-storage.instances.collection.delete"
                },
                {
                    "description": "get individual instance from storage",
                    "displayName": "inventory storage - get individual instance",
                    "permissionName": "inventory-storage.instances.item.get"
                },
                {
                    "description": "create individual instance in storage",
                    "displayName": "inventory storage - create individual instance",
                    "permissionName": "inventory-storage.instances.item.post"
                },
                {
                    "description": "modify instance in storage",
                    "displayName": "inventory storage - modify instance",
                    "permissionName": "inventory-storage.instances.item.put"
                },
                {
                    "description": "delete individual instance from storage",
                    "displayName": "inventory storage - delete individual instance",
                    "permissionName": "inventory-storage.instances.item.delete"
                },
                {
                    "description": "update preceding/succeeding titles related to instance from storage",
                    "displayName": "inventory storage - update preceding/succeeding titles related to instance",
                    "permissionName": "inventory-storage.instances.preceding-succeeding-titles.collection.put"
                },
                {
                    "description": "create or update a number of instances in storage",
                    "displayName": "inventory storage - create or update a number of instances",
                    "permissionName": "inventory-storage.instances.batch.post"
                },
                {
                    "description": "create or update a number of instances in storage with optimistic locking disabled",
                    "displayName": "inventory storage - create or update a number of instances with optimistic locking disabled",
                    "permissionName": "inventory-storage.instances.batch-unsafe.post"
                },
                {
                    "description": "delete source record of individual instance from storage",
                    "displayName": "inventory storage - delete source record of an individual instance",
                    "permissionName": "inventory-storage.instances.source-record.delete"
                },
                {
                    "description": "get MARC JSON source record of individual instance from storage",
                    "displayName": "inventory storage - get MARC JSON source record of an individual instance",
                    "permissionName": "inventory-storage.instances.source-record.marc-json.get"
                },
                {
                    "description": "set MARC JSON source record of individual instance in storage",
                    "displayName": "inventory storage - set MARC JSON source record of an individual instance",
                    "permissionName": "inventory-storage.instances.source-record.marc-json.put"
                },
                {
                    "description": "delete MARC JSON source record of individual instance in storage",
                    "displayName": "inventory storage - delete MARC JSON source record of an individual instance",
                    "permissionName": "inventory-storage.instances.source-record.marc-json.delete"
                },
                {
                    "description": "get loan-type collection from storage",
                    "displayName": "inventory storage - get loan-type collection",
                    "permissionName": "inventory-storage.loan-types.collection.get"
                },
                {
                    "description": "get individual loan-type from storage",
                    "displayName": "inventory storage - get individual loan-type",
                    "permissionName": "inventory-storage.loan-types.item.get"
                },
                {
                    "description": "create individual loan-type in storage",
                    "displayName": "inventory storage - create individual loan-type",
                    "permissionName": "inventory-storage.loan-types.item.post"
                },
                {
                    "description": "modify loan-type in storage",
                    "displayName": "inventory storage - modify loan-type",
                    "permissionName": "inventory-storage.loan-types.item.put"
                },
                {
                    "description": "delete individual loan-type from storage",
                    "displayName": "inventory storage - delete individual loan-type",
                    "permissionName": "inventory-storage.loan-types.item.delete"
                },
                {
                    "description": "get material-type collection from storage",
                    "displayName": "inventory storage - get material-type collection",
                    "permissionName": "inventory-storage.material-types.collection.get"
                },
                {
                    "description": "get individual material-type from storage",
                    "displayName": "inventory storage - get individual material-type",
                    "permissionName": "inventory-storage.material-types.item.get"
                },
                {
                    "description": "create individual material-type in storage",
                    "displayName": "inventory storage - create individual material-type",
                    "permissionName": "inventory-storage.material-types.item.post"
                },
                {
                    "description": "modify material-type in storage",
                    "displayName": "inventory storage - modify material-type",
                    "permissionName": "inventory-storage.material-types.item.put"
                },
                {
                    "description": "delete individual material-type from storage",
                    "displayName": "inventory storage - delete individual material-type",
                    "permissionName": "inventory-storage.material-types.item.delete"
                },
                {
                    "description": "get shelf location collection from storage",
                    "displayName": "inventory storage - get shelf location collection",
                    "permissionName": "inventory-storage.shelf-locations.collection.get"
                },
                {
                    "description": "get individual shelf location from storage",
                    "displayName": "inventory storage - get individual shelf location",
                    "permissionName": "inventory-storage.shelf-locations.item.get"
                },
                {
                    "description": "create individual shelf location in storage",
                    "displayName": "inventory storage - create individual shelf location",
                    "permissionName": "inventory-storage.shelf-locations.item.post"
                },
                {
                    "description": "modify shelf location in storage",
                    "displayName": "inventory storage - modify shelf location",
                    "permissionName": "inventory-storage.shelf-locations.item.put"
                },
                {
                    "description": "delete individual shelf location from storage",
                    "displayName": "inventory storage - delete individual shelf location",
                    "permissionName": "inventory-storage.shelf-locations.item.delete"
                },
                {
                    "description": "Get institution collection",
                    "displayName": "inventory storage - location units - get institution collection",
                    "permissionName": "inventory-storage.location-units.institutions.collection.get"
                },
                {
                    "description": "get individual institution",
                    "displayName": "inventory storage - location units - get individual institution",
                    "permissionName": "inventory-storage.location-units.institutions.item.get"
                },
                {
                    "description": "create individual instution",
                    "displayName": "inventory storage - location units - create individual institution",
                    "permissionName": "inventory-storage.location-units.institutions.item.post"
                },
                {
                    "description": "modify institution",
                    "displayName": "inventory storage - location units - modify institution",
                    "permissionName": "inventory-storage.location-units.institutions.item.put"
                },
                {
                    "description": "delete individual institution",
                    "displayName": "inventory storage - location units - delete individual institution",
                    "permissionName": "inventory-storage.location-units.institutions.item.delete"
                },
                {
                    "description": "Get campus collection",
                    "displayName": "inventory storage - location units - get campus collection",
                    "permissionName": "inventory-storage.location-units.campuses.collection.get"
                },
                {
                    "description": "get individual campus",
                    "displayName": "inventory storage - location units - get individual campus",
                    "permissionName": "inventory-storage.location-units.campuses.item.get"
                },
                {
                    "description": "create individual instution",
                    "displayName": "inventory storage - location units - create individual campus",
                    "permissionName": "inventory-storage.location-units.campuses.item.post"
                },
                {
                    "description": "modify campus",
                    "displayName": "inventory storage - location units - modify campus",
                    "permissionName": "inventory-storage.location-units.campuses.item.put"
                },
                {
                    "description": "delete individual campus",
                    "displayName": "inventory storage - location units - delete individual campus",
                    "permissionName": "inventory-storage.location-units.campuses.item.delete"
                },
                {
                    "description": "Get library collection",
                    "displayName": "inventory storage - location units - get library collection",
                    "permissionName": "inventory-storage.location-units.libraries.collection.get"
                },
                {
                    "description": "get individual library",
                    "displayName": "inventory storage - location units - get individual library",
                    "permissionName": "inventory-storage.location-units.libraries.item.get"
                },
                {
                    "description": "create individual instution",
                    "displayName": "inventory storage - location units - create individual library",
                    "permissionName": "inventory-storage.location-units.libraries.item.post"
                },
                {
                    "description": "modify library",
                    "displayName": "inventory storage - location units - modify library",
                    "permissionName": "inventory-storage.location-units.libraries.item.put"
                },
                {
                    "description": "delete individual library",
                    "displayName": "inventory storage - location units - delete individual library",
                    "permissionName": "inventory-storage.location-units.libraries.item.delete"
                },
                {
                    "description": "get location collection",
                    "displayName": "inventory storage - locations - get location collection",
                    "permissionName": "inventory-storage.locations.collection.get"
                },
                {
                    "description": "get individual location",
                    "displayName": "inventory storage - locations - get individual location",
                    "permissionName": "inventory-storage.locations.item.get"
                },
                {
                    "description": "create individual location",
                    "displayName": "inventory storage - locations - create individual location",
                    "permissionName": "inventory-storage.locations.item.post"
                },
                {
                    "description": "modify location",
                    "displayName": "inventory storage - locations - modify location",
                    "permissionName": "inventory-storage.locations.item.put"
                },
                {
                    "description": "delete individual location",
                    "displayName": "inventory storage - locations - delete individual location",
                    "permissionName": "inventory-storage.locations.item.delete"
                },
                {
                    "description": "get instance-relationship-type collection from storage",
                    "displayName": "inventory storage - get instance-relationship-type collection",
                    "permissionName": "inventory-storage.instance-relationship-types.collection.get"
                },
                {
                    "description": "get individual instance-relationship-type from storage",
                    "displayName": "inventory storage - get individual instance-relationship-type",
                    "permissionName": "inventory-storage.instance-relationship-types.item.get"
                },
                {
                    "description": "create individual instance-relationship-type in storage",
                    "displayName": "inventory storage - create individual instance-relationship-type",
                    "permissionName": "inventory-storage.instance-relationship-types.item.post"
                },
                {
                    "description": "modify instance-relationship-type in storage",
                    "displayName": "inventory storage - modify instance-relationship-type",
                    "permissionName": "inventory-storage.instance-relationship-types.item.put"
                },
                {
                    "description": "delete individual instance-relationship-type from storage",
                    "displayName": "inventory storage - delete individual instance-relationship-type",
                    "permissionName": "inventory-storage.instance-relationship-types.item.delete"
                },
                {
                    "description": "get preceding-succeeding-title collection from storage",
                    "displayName": "inventory storage - get preceding-succeeding-title collection",
                    "permissionName": "inventory-storage.preceding-succeeding-titles.collection.get"
                },
                {
                    "description": "get individual preceding-succeeding-title from storage",
                    "displayName": "inventory storage - get individual preceding-succeeding-title",
                    "permissionName": "inventory-storage.preceding-succeeding-titles.item.get"
                },
                {
                    "description": "create individual preceding-succeeding-title in storage",
                    "displayName": "inventory storage - create individual preceding-succeeding-title",
                    "permissionName": "inventory-storage.preceding-succeeding-titles.item.post"
                },
                {
                    "description": "modify preceding-succeeding-title in storage",
                    "displayName": "inventory storage - modify preceding-succeeding-title",
                    "permissionName": "inventory-storage.preceding-succeeding-titles.item.put"
                },
                {
                    "description": "delete individual preceding-succeeding-title from storage",
                    "displayName": "inventory storage - delete individual preceding-succeeding-title",
                    "permissionName": "inventory-storage.preceding-succeeding-titles.item.delete"
                },
                {
                    "description": "get identifier-type collection from storage",
                    "displayName": "inventory storage - get identifier-type collection",
                    "permissionName": "inventory-storage.identifier-types.collection.get"
                },
                {
                    "description": "get individual identifier-type from storage",
                    "displayName": "inventory storage - get individual identifier-type",
                    "permissionName": "inventory-storage.identifier-types.item.get"
                },
                {
                    "description": "create individual identifier-type in storage",
                    "displayName": "inventory storage - create individual identifier-type",
                    "permissionName": "inventory-storage.identifier-types.item.post"
                },
                {
                    "description": "modify identifier-type in storage",
                    "displayName": "inventory storage - modify identifier-type",
                    "permissionName": "inventory-storage.identifier-types.item.put"
                },
                {
                    "description": "delete individual identifier-type from storage",
                    "displayName": "inventory storage - delete individual identifier-type",
                    "permissionName": "inventory-storage.identifier-types.item.delete"
                },
                {
                    "description": "get contributor-type collection from storage",
                    "displayName": "inventory storage - get contributor-type collection",
                    "permissionName": "inventory-storage.contributor-types.collection.get"
                },
                {
                    "description": "get individual contributor-type from storage",
                    "displayName": "inventory storage - get individual contributor-type",
                    "permissionName": "inventory-storage.contributor-types.item.get"
                },
                {
                    "description": "create individual contributor-type in storage",
                    "displayName": "inventory storage - create individual contributor-type",
                    "permissionName": "inventory-storage.contributor-types.item.post"
                },
                {
                    "description": "modify contributor-type in storage",
                    "displayName": "inventory storage - modify contributor-type",
                    "permissionName": "inventory-storage.contributor-types.item.put"
                },
                {
                    "description": "delete individual contributor-type from storage",
                    "displayName": "inventory storage - delete individual contributor-type",
                    "permissionName": "inventory-storage.contributor-types.item.delete"
                },
                {
                    "description": "get service-point collection from storage",
                    "displayName": "inventory storage - get service-point collection",
                    "permissionName": "inventory-storage.service-points.collection.get"
                },
                {
                    "description": "get individual service-point from storage",
                    "displayName": "inventory storage - get individual service-point",
                    "permissionName": "inventory-storage.service-points.item.get"
                },
                {
                    "description": "create individual service-point in storage",
                    "displayName": "inventory storage - create individual service-point",
                    "permissionName": "inventory-storage.service-points.item.post"
                },
                {
                    "description": "modify service-point in storage",
                    "displayName": "inventory storage - modify service-point",
                    "permissionName": "inventory-storage.service-points.item.put"
                },
                {
                    "description": "delete individual service-point from storage",
                    "displayName": "inventory storage - delete individual service-point",
                    "permissionName": "inventory-storage.service-points.item.delete"
                },
                {
                    "description": "get service-point-users collection from storage",
                    "displayName": "inventory storage - get service-point-users collection",
                    "permissionName": "inventory-storage.service-points-users.collection.get"
                },
                {
                    "description": "get individual service-points-user from storage",
                    "displayName": "inventory storage - get individual service-points-user",
                    "permissionName": "inventory-storage.service-points-users.item.get"
                },
                {
                    "description": "create individual service-points-user in storage",
                    "displayName": "inventory storage - create individual service-points-user",
                    "permissionName": "inventory-storage.service-points-users.item.post"
                },
                {
                    "description": "modify service-points-user in storage",
                    "displayName": "inventory storage - modify service-points-user",
                    "permissionName": "inventory-storage.service-points-users.item.put"
                },
                {
                    "description": "delete individual service-points-user from storage",
                    "displayName": "inventory storage - delete individual service-points-user",
                    "permissionName": "inventory-storage.service-points-users.item.delete"
                },
                {
                    "description": "get contributor-name-type collection from storage",
                    "displayName": "inventory storage - get contributor-name-type collection",
                    "permissionName": "inventory-storage.contributor-name-types.collection.get"
                },
                {
                    "description": "get individual contributor-name-type from storage",
                    "displayName": "inventory storage - get individual contributor-name-type",
                    "permissionName": "inventory-storage.contributor-name-types.item.get"
                },
                {
                    "description": "create individual contributor-name-type in storage",
                    "displayName": "inventory storage - create individual contributor-name-type",
                    "permissionName": "inventory-storage.contributor-name-types.item.post"
                },
                {
                    "description": "modify contributor-name-type in storage",
                    "displayName": "inventory storage - modify contributor-name-type",
                    "permissionName": "inventory-storage.contributor-name-types.item.put"
                },
                {
                    "description": "delete individual contributor-name-type from storage",
                    "displayName": "inventory storage - delete individual contributor-name-type",
                    "permissionName": "inventory-storage.contributor-name-types.item.delete"
                },
                {
                    "description": "get a bulk set of record ids from storage",
                    "displayName": "inventory storage - get bulk ids",
                    "permissionName": "inventory-storage.record-bulk.ids.get"
                },
                {
                    "description": "get contributor-name-type collection from storage",
                    "displayName": "inventory storage - get formats collection",
                    "permissionName": "inventory-storage.instance-formats.collection.get"
                },
                {
                    "description": "get individual instance format from storage",
                    "displayName": "inventory storage - get individual format",
                    "permissionName": "inventory-storage.instance-formats.item.get"
                },
                {
                    "description": "create individual instance format in storage",
                    "displayName": "inventory storage - create individual format",
                    "permissionName": "inventory-storage.instance-formats.item.post"
                },
                {
                    "description": "modify instance format in storage",
                    "displayName": "inventory storage - modify format",
                    "permissionName": "inventory-storage.instance-formats.item.put"
                },
                {
                    "description": "delete individual instance format from storage",
                    "displayName": "inventory storage - delete individual format",
                    "permissionName": "inventory-storage.instance-formats.item.delete"
                },
                {
                    "description": "get instance-type collection from storage",
                    "displayName": "inventory storage - get instance types collection",
                    "permissionName": "inventory-storage.instance-types.collection.get"
                },
                {
                    "description": "get individual instance type from storage",
                    "displayName": "inventory storage - get individual instance type",
                    "permissionName": "inventory-storage.instance-types.item.get"
                },
                {
                    "description": "create individual instance type in storage",
                    "displayName": "inventory storage - create individual instance type",
                    "permissionName": "inventory-storage.instance-types.item.post"
                },
                {
                    "description": "modify instance type in storage",
                    "displayName": "inventory storage - modify instance type",
                    "permissionName": "inventory-storage.instance-types.item.put"
                },
                {
                    "description": "delete instance type in storage",
                    "displayName": "inventory storage - delete individual instance type",
                    "permissionName": "inventory-storage.instance-types.item.delete"
                },
                {
                    "description": "get nature-of-content terms collection from storage",
                    "displayName": "inventory storage - get content terms collection",
                    "permissionName": "inventory-storage.nature-of-content-terms.collection.get"
                },
                {
                    "description": "get individual nature-of-content term from storage",
                    "displayName": "inventory storage - get individual content term",
                    "permissionName": "inventory-storage.nature-of-content-terms.item.get"
                },
                {
                    "description": "create individual nature-of-content term in storage",
                    "displayName": "inventory storage - create individual content term",
                    "permissionName": "inventory-storage.nature-of-content-terms.item.post"
                },
                {
                    "description": "modify nature-of-content term in storage",
                    "displayName": "inventory storage - modify content term",
                    "permissionName": "inventory-storage.nature-of-content-terms.item.put"
                },
                {
                    "description": "delete nature-of-content term in storage",
                    "displayName": "inventory storage - delete individual content term",
                    "permissionName": "inventory-storage.nature-of-content-terms.item.delete"
                },
                {
                    "description": "get classification types collection from storage",
                    "displayName": "inventory storage - get classification types collection",
                    "permissionName": "inventory-storage.classification-types.collection.get"
                },
                {
                    "description": "get individual classification type from storage",
                    "displayName": "inventory storage - get individual classification type",
                    "permissionName": "inventory-storage.classification-types.item.get"
                },
                {
                    "description": "create individual classification type in storage",
                    "displayName": "inventory storage - create individual classification type",
                    "permissionName": "inventory-storage.classification-types.item.post"
                },
                {
                    "description": "modify classification type in storage",
                    "displayName": "inventory storage - modify classification type",
                    "permissionName": "inventory-storage.classification-types.item.put"
                },
                {
                    "description": "delete individual classification qualifier from storage",
                    "displayName": "inventory storage - delete individual classification type",
                    "permissionName": "inventory-storage.classification-types.item.delete"
                },
                {
                    "description": "get alternative-title-type collection from storage",
                    "displayName": "inventory storage - get alternative-title-type collection",
                    "permissionName": "inventory-storage.alternative-title-types.collection.get"
                },
                {
                    "description": "get individual alternative-title-type from storage",
                    "displayName": "inventory storage - get individual alternative-title-type",
                    "permissionName": "inventory-storage.alternative-title-types.item.get"
                },
                {
                    "description": "create individual alternative-title-type in storage",
                    "displayName": "inventory storage - create individual alternative-title-type",
                    "permissionName": "inventory-storage.alternative-title-types.item.post"
                },
                {
                    "description": "modify alternative-title-type in storage",
                    "displayName": "inventory storage - modify alternative-title-type",
                    "permissionName": "inventory-storage.alternative-title-types.item.put"
                },
                {
                    "description": "delete individual alternative-title-type from storage",
                    "displayName": "inventory storage - delete individual alternative-title-type",
                    "permissionName": "inventory-storage.alternative-title-types.item.delete"
                },
                {
                    "description": "get modes of issuance collection from storage",
                    "displayName": "inventory storage - get modes of issuance collection",
                    "permissionName": "inventory-storage.modes-of-issuance.collection.get"
                },
                {
                    "description": "get individual mode of issuance from storage",
                    "displayName": "inventory storage - get individual mode of issuance",
                    "permissionName": "inventory-storage.modes-of-issuance.item.get"
                },
                {
                    "description": "create individual mode of issuance in storage",
                    "displayName": "inventory storage - create individual mode of issuance",
                    "permissionName": "inventory-storage.modes-of-issuance.item.post"
                },
                {
                    "description": "modify mode of issuance in storage",
                    "displayName": "inventory storage - modify mode of issuance",
                    "permissionName": "inventory-storage.modes-of-issuance.item.put"
                },
                {
                    "description": "delete individual mode of issuance from storage",
                    "displayName": "inventory storage - delete individual mode of issuance",
                    "permissionName": "inventory-storage.modes-of-issuance.item.delete"
                },
                {
                    "description": "get instance status collection from storage",
                    "displayName": "inventory storage - get instance status collection",
                    "permissionName": "inventory-storage.instance-statuses.collection.get"
                },
                {
                    "description": "get individual instance status from storage",
                    "displayName": "inventory storage - get individual instance status",
                    "permissionName": "inventory-storage.instance-statuses.item.get"
                },
                {
                    "description": "create individual instance status in storage",
                    "displayName": "inventory storage - create individual instance status",
                    "permissionName": "inventory-storage.instance-statuses.item.post"
                },
                {
                    "description": "modify instance status in storage",
                    "displayName": "inventory storage - modify instance status",
                    "permissionName": "inventory-storage.instance-statuses.item.put"
                },
                {
                    "description": "delete individual instance status from storage",
                    "displayName": "inventory storage - delete individual instance status",
                    "permissionName": "inventory-storage.instance-statuses.item.delete"
                },
                {
                    "description": "get statistical codes collection from storage",
                    "displayName": "inventory storage - get URL relationship types collection",
                    "permissionName": "inventory-storage.electronic-access-relationships.collection.get"
                },
                {
                    "description": "get individual statistical code from storage",
                    "displayName": "inventory storage - get individual URL relationship type",
                    "permissionName": "inventory-storage.electronic-access-relationships.item.get"
                },
                {
                    "description": "create individual statistical code in storage",
                    "displayName": "inventory storage - create individual URL relationship type",
                    "permissionName": "inventory-storage.electronic-access-relationships.item.post"
                },
                {
                    "description": "modify statistical code in storage",
                    "displayName": "inventory storage - modify URL relationship type",
                    "permissionName": "inventory-storage.electronic-access-relationships.item.put"
                },
                {
                    "description": "delete individual URL relationship type from storage",
                    "displayName": "inventory storage - delete individual URL relationship",
                    "permissionName": "inventory-storage.electronic-access-relationships.item.delete"
                },
                {
                    "description": "get statistical code types collection from storage",
                    "displayName": "inventory storage - get statistical code types collection",
                    "permissionName": "inventory-storage.statistical-code-types.collection.get"
                },
                {
                    "description": "get individual statistical code type from storage",
                    "displayName": "inventory storage - get individual statistical code type",
                    "permissionName": "inventory-storage.statistical-code-types.item.get"
                },
                {
                    "description": "create individual statistical code type in storage",
                    "displayName": "inventory storage - create individual statistical code type",
                    "permissionName": "inventory-storage.statistical-code-types.item.post"
                },
                {
                    "description": "modify statistical code type in storage",
                    "displayName": "inventory storage - modify statistical code type",
                    "permissionName": "inventory-storage.statistical-code-types.item.put"
                },
                {
                    "description": "delete individual statistical code type from storage",
                    "displayName": "inventory storage - delete individual statistical code type",
                    "permissionName": "inventory-storage.statistical-code-types.item.delete"
                },
                {
                    "description": "get statistical codes collection from storage",
                    "displayName": "inventory storage - get statistical codes collection",
                    "permissionName": "inventory-storage.statistical-codes.collection.get"
                },
                {
                    "description": "get individual statistical code from storage",
                    "displayName": "inventory storage - get individual statistical code",
                    "permissionName": "inventory-storage.statistical-codes.item.get"
                },
                {
                    "description": "create individual statistical code in storage",
                    "displayName": "inventory storage - create individual statistical code",
                    "permissionName": "inventory-storage.statistical-codes.item.post"
                },
                {
                    "description": "modify statistical code in storage",
                    "displayName": "inventory storage - modify statistical code",
                    "permissionName": "inventory-storage.statistical-codes.item.put"
                },
                {
                    "description": "delete individual statistical code from storage",
                    "displayName": "inventory storage - delete individual statistical code",
                    "permissionName": "inventory-storage.statistical-codes.item.delete"
                },
                {
                    "description": "get ill-policy collection from storage",
                    "displayName": "inventory storage - get ill-policy collection",
                    "permissionName": "inventory-storage.ill-policies.collection.get"
                },
                {
                    "description": "get individual ill-policy from storage",
                    "displayName": "inventory storage - get individual ill-policy",
                    "permissionName": "inventory-storage.ill-policies.item.get"
                },
                {
                    "description": "create individual ill-policy in storage",
                    "displayName": "inventory storage - create individual ill-policy",
                    "permissionName": "inventory-storage.ill-policies.item.post"
                },
                {
                    "description": "modify ill-policy in storage",
                    "displayName": "inventory storage - modify ill-policy",
                    "permissionName": "inventory-storage.ill-policies.item.put"
                },
                {
                    "description": "delete individual ill-policy from storage",
                    "displayName": "inventory storage - delete individual ill-policy",
                    "permissionName": "inventory-storage.ill-policies.item.delete"
                },
                {
                    "description": "get holdings-type collection from storage",
                    "displayName": "inventory storage - get holdings-type collection",
                    "permissionName": "inventory-storage.holdings-types.collection.get"
                },
                {
                    "description": "get individual holdings-type from storage",
                    "displayName": "inventory storage - get individual holdings-type",
                    "permissionName": "inventory-storage.holdings-types.item.get"
                },
                {
                    "description": "create individual holdings-type in storage",
                    "displayName": "inventory storage - create individual holdings-type",
                    "permissionName": "inventory-storage.holdings-types.item.post"
                },
                {
                    "description": "modify holdings-type in storage",
                    "displayName": "inventory storage - modify holdings-type",
                    "permissionName": "inventory-storage.holdings-types.item.put"
                },
                {
                    "description": "delete individual holdings-type from storage",
                    "displayName": "inventory storage - delete individual holdings-type",
                    "permissionName": "inventory-storage.holdings-types.item.delete"
                },
                {
                    "description": "get instance-note-type collection from storage",
                    "displayName": "inventory storage - get instance-note-type collection",
                    "permissionName": "inventory-storage.instance-note-types.collection.get"
                },
                {
                    "description": "get individual instance-note-type from storage",
                    "displayName": "inventory storage - get individual instance-note-type",
                    "permissionName": "inventory-storage.instance-note-types.item.get"
                },
                {
                    "description": "create individual instance-note-type in storage",
                    "displayName": "inventory storage - create individual instance-note-type",
                    "permissionName": "inventory-storage.instance-note-types.item.post"
                },
                {
                    "description": "modify instance-note-type in storage",
                    "displayName": "inventory storage - modify instance-note-type",
                    "permissionName": "inventory-storage.instance-note-types.item.put"
                },
                {
                    "description": "delete individual instance-note-type from storage",
                    "displayName": "inventory storage - delete individual instance-note-type",
                    "permissionName": "inventory-storage.instance-note-types.item.delete"
                },
                {
                    "description": "get holdings-note-type collection from storage",
                    "displayName": "inventory storage - get holdings-note-type collection",
                    "permissionName": "inventory-storage.holdings-note-types.collection.get"
                },
                {
                    "description": "get individual holdings-note-type from storage",
                    "displayName": "inventory storage - get individual holdings-note-type",
                    "permissionName": "inventory-storage.holdings-note-types.item.get"
                },
                {
                    "description": "create individual holdings-note-type in storage",
                    "displayName": "inventory storage - create individual holdings-note-type",
                    "permissionName": "inventory-storage.holdings-note-types.item.post"
                },
                {
                    "description": "modify holdings-note-type in storage",
                    "displayName": "inventory storage - modify holdings-note-type",
                    "permissionName": "inventory-storage.holdings-note-types.item.put"
                },
                {
                    "description": "delete individual holdings-note-type from storage",
                    "displayName": "inventory storage - delete individual holdings-note-type",
                    "permissionName": "inventory-storage.holdings-note-types.item.delete"
                },
                {
                    "description": "get item-note-type collection from storage",
                    "displayName": "inventory storage - get item-note-type collection",
                    "permissionName": "inventory-storage.item-note-types.collection.get"
                },
                {
                    "description": "get individual item-note-type from storage",
                    "displayName": "inventory storage - get individual item-note-type",
                    "permissionName": "inventory-storage.item-note-types.item.get"
                },
                {
                    "description": "create individual item-note-type in storage",
                    "displayName": "inventory storage - create individual item-note-type",
                    "permissionName": "inventory-storage.item-note-types.item.post"
                },
                {
                    "description": "modify item-note-type in storage",
                    "displayName": "inventory storage - modify item-note-type",
                    "permissionName": "inventory-storage.item-note-types.item.put"
                },
                {
                    "description": "delete individual item-note-type from storage",
                    "displayName": "inventory storage - delete individual item-note-type",
                    "permissionName": "inventory-storage.item-note-types.item.delete"
                },
                {
                    "description": "get item-damaged-statuses collection from storage",
                    "displayName": "inventory storage - get item-damaged-statuses collection",
                    "permissionName": "inventory-storage.item-damaged-statuses.collection.get"
                },
                {
                    "description": "get individual item-damaged-status from storage",
                    "displayName": "inventory storage - get individual item-damaged-status",
                    "permissionName": "inventory-storage.item-damaged-statuses.item.get"
                },
                {
                    "description": "create individual item-damaged-status in storage",
                    "displayName": "inventory storage - create individual item-damaged-status",
                    "permissionName": "inventory-storage.item-damaged-statuses.item.post"
                },
                {
                    "description": "modify item-damaged-status in storage",
                    "displayName": "inventory storage - modify item-damaged-status",
                    "permissionName": "inventory-storage.item-damaged-statuses.item.put"
                },
                {
                    "description": "delete individual item-damaged-status from storage",
                    "displayName": "inventory storage - delete individual item-damaged-status",
                    "permissionName": "inventory-storage.item-damaged-statuses.item.delete"
                },
                {
                    "description": "get call-number-type collection from storage",
                    "displayName": "inventory storage - get call-number-type collection",
                    "permissionName": "inventory-storage.call-number-types.collection.get"
                },
                {
                    "description": "get individual call-number-type from storage",
                    "displayName": "inventory storage - get individual call-number-type",
                    "permissionName": "inventory-storage.call-number-types.item.get"
                },
                {
                    "description": "create individual call-number-type in storage",
                    "displayName": "inventory storage - create individual call-number-type",
                    "permissionName": "inventory-storage.call-number-types.item.post"
                },
                {
                    "description": "modify call-number-type in storage",
                    "displayName": "inventory storage - modify call-number-type",
                    "permissionName": "inventory-storage.call-number-types.item.put"
                },
                {
                    "description": "delete individual call-number-type from storage",
                    "displayName": "inventory storage - delete individual call-number-type",
                    "permissionName": "inventory-storage.call-number-types.item.delete"
                },
                {
                    "description": "get the HRID settings from storage",
                    "displayName": "inventory storage - get HRID settings",
                    "permissionName": "inventory-storage.hrid-settings.item.get"
                },
                {
                    "description": "modify the HRID settings in storage",
                    "displayName": "inventory storage - modify HRID settings",
                    "permissionName": "inventory-storage.hrid-settings.item.put"
                },
                {
                    "description": "get instances for oai pmh",
                    "displayName": "inventory storage - get instances for oai pmh",
                    "permissionName": "inventory-storage.oai-pmh-view.instances.collection.get"
                },
                {
                    "description": "get updated instances ids for oai pmh",
                    "displayName": "inventory storage - get updated instances ids for oai pmh",
                    "permissionName": "inventory-storage.oai-pmh-view.updatedinstanceids.collection.get"
                },
                {
                    "description": "get enriched instances for oai pmh",
                    "displayName": "inventory storage - get enriched instances for oai pmh",
                    "permissionName": "inventory-storage.oai-pmh-view.enrichedinstances.collection.post"
                },
                {
                    "description": "get updated instances ids for inventory storage",
                    "displayName": "inventory storage - get updated instances ids for inventory storage",
                    "permissionName": "inventory-storage.inventory-hierarchy.updated-instances-ids.collection.get"
                },
                {
                    "description": "get instances holdings and items for inventory storage",
                    "displayName": "inventory storage - get instances holdings and items for inventory storage",
                    "permissionName": "inventory-storage.inventory-hierarchy.items-and-holdings.collection.post"
                },
                {
                    "description": "get holdings-records-source collection from storage",
                    "displayName": "inventory storage - get holdings-source collection",
                    "permissionName": "inventory-storage.holdings-sources.collection.get"
                },
                {
                    "description": "get individual holdings-records-source from storage",
                    "displayName": "inventory storage - get individual holdings-source",
                    "permissionName": "inventory-storage.holdings-sources.item.get"
                },
                {
                    "description": "create individual holdings-records-source in storage",
                    "displayName": "inventory storage - create individual holdings-source",
                    "permissionName": "inventory-storage.holdings-sources.item.post"
                },
                {
                    "description": "modify holdings-records-source in storage",
                    "displayName": "inventory storage - modify holdings-source",
                    "permissionName": "inventory-storage.holdings-sources.item.put"
                },
                {
                    "description": "delete individual holdings-source from storage",
                    "displayName": "inventory storage - delete individual holdings-source",
                    "permissionName": "inventory-storage.holdings-sources.item.delete"
                },
                {
                    "description": "get holdings-records associated with bound-with items",
                    "displayName": "inventory storage - get parts of bound-with(s)",
                    "permissionName": "inventory-storage.bound-with-parts.collection.get"
                },
                {
                    "description": "get a holdings-record id associated with a bound-with item",
                    "displayName": "inventory storage - get a part of a bound-with",
                    "permissionName": "inventory-storage.bound-with-parts.item.get"
                },
                {
                    "description": "add a holdings record to a bound-with by associating it with the bound-with item",
                    "displayName": "inventory storage - add a part to a bound-with",
                    "permissionName": "inventory-storage.bound-with-parts.item.post"
                },
                {
                    "description": "replace a holdings-record of a bound-with or move it to a different bound-with",
                    "displayName": "inventory storage - modify a bound-with part",
                    "permissionName": "inventory-storage.bound-with-parts.item.put"
                },
                {
                    "description": "remove a holdings-record from a bound-with",
                    "displayName": "inventory storage - remove part of a bound-with",
                    "permissionName": "inventory-storage.bound-with-parts.item.delete"
                },
                {
                    "description": "cancel a running reindexing job",
                    "displayName": "inventory storage - cancel reindex job",
                    "permissionName": "inventory-storage.instance.reindex.item.delete"
                },
                {
                    "description": "get reindex job by id",
                    "displayName": "inventory storage - get reindex job by id",
                    "permissionName": "inventory-storage.instance.reindex.item.get"
                },
                {
                    "description": "submit reindex instance job",
                    "displayName": "inventory storage - submit reindex instance job",
                    "permissionName": "inventory-storage.instance.reindex.post"
                },
                {
                    "description": "get reindex instance jobs",
                    "displayName": "inventory storage - get reindex instance jobs",
                    "permissionName": "inventory-storage.instance.reindex.collection.get"
                },
                {
                    "description": "submit iteration instance job",
                    "displayName": "inventory storage - submit iteration instance job",
                    "permissionName": "inventory-storage.instance.iteration.post"
                },
                {
                    "description": "get iteration job by id",
                    "displayName": "inventory storage - get iteration job by id",
                    "permissionName": "inventory-storage.instance.iteration.item.get"
                },
                {
                    "description": "cancel running iteration job",
                    "displayName": "inventory storage - cancel iteration job",
                    "permissionName": "inventory-storage.instance.iteration.item.delete"
                },
                {
                    "description": "get instances by query with their holdings and items",
                    "displayName": "inventory view - get instances by query with their holdings and items",
                    "permissionName": "inventory-storage.inventory-view.instances.collection.get"
                },
                {
                    "description": "get instances by query with a set of related records",
                    "displayName": "inventory view - get instances by query with a set of related records",
                    "permissionName": "inventory-storage.inventory-view.instance-set.get"
                },
                {
                    "description": "cancel a running migration job",
                    "displayName": "inventory storage - cancel migration job",
                    "permissionName": "inventory-storage.migration.job.item.delete"
                },
                {
                    "description": "get migration job by id",
                    "displayName": "inventory storage - get migration job by id",
                    "permissionName": "inventory-storage.migration.job.item.get"
                },
                {
                    "description": "get list of available migrations",
                    "displayName": "inventory storage - get list of available migrations",
                    "permissionName": "inventory-storage.migration.item.get"
                },
                {
                    "description": "submit migration instance job",
                    "displayName": "inventory storage - submit migration job",
                    "permissionName": "inventory-storage.migration.job.post"
                },
                {
                    "description": "Entire set of permissions needed to use the inventory storage module",
                    "displayName": "inventory storage module - all permissions",
                    "permissionName": "inventory-storage.all",
                    "subPermissions": [
                        "inventory-storage-dereferenced.items.item.get",
                        "inventory-storage-dereferenced.items.collection.get",
                        "inventory-storage.items.collection.get",
                        "inventory-storage.items.item.get",
                        "inventory-storage.items.item.post",
                        "inventory-storage.items.item.put",
                        "inventory-storage.items.item.delete",
                        "inventory-storage.items.collection.delete",
                        "inventory-storage.items.batch.post",
                        "inventory-storage.items.batch-unsafe.post",
                        "inventory-storage.holdings.collection.get",
                        "inventory-storage.holdings.item.get",
                        "inventory-storage.holdings.item.post",
                        "inventory-storage.holdings.item.put",
                        "inventory-storage.holdings.item.delete",
                        "inventory-storage.holdings.collection.delete",
                        "inventory-storage.holdings.batch.post",
                        "inventory-storage.holdings.batch-unsafe.post",
                        "inventory-storage.instances.collection.get",
                        "inventory-storage.instances.item.get",
                        "inventory-storage.instances.item.post",
                        "inventory-storage.instances.item.put",
                        "inventory-storage.instances.item.delete",
                        "inventory-storage.instances.preceding-succeeding-titles.collection.put",
                        "inventory-storage.instances.source-record.delete",
                        "inventory-storage.instances.source-record.marc-json.get",
                        "inventory-storage.instances.source-record.marc-json.put",
                        "inventory-storage.instances.source-record.marc-json.delete",
                        "inventory-storage.instances.collection.delete",
                        "inventory-storage.instances.batch.post",
                        "inventory-storage.instances.batch-unsafe.post",
                        "inventory-storage.loan-types.collection.get",
                        "inventory-storage.loan-types.item.get",
                        "inventory-storage.loan-types.item.post",
                        "inventory-storage.loan-types.item.put",
                        "inventory-storage.loan-types.item.delete",
                        "inventory-storage.material-types.collection.get",
                        "inventory-storage.material-types.item.get",
                        "inventory-storage.material-types.item.post",
                        "inventory-storage.material-types.item.put",
                        "inventory-storage.material-types.item.delete",
                        "inventory-storage.shelf-locations.collection.get",
                        "inventory-storage.shelf-locations.item.get",
                        "inventory-storage.shelf-locations.item.post",
                        "inventory-storage.shelf-locations.item.put",
                        "inventory-storage.shelf-locations.item.delete",
                        "inventory-storage.location-units.institutions.collection.get",
                        "inventory-storage.location-units.institutions.item.get",
                        "inventory-storage.location-units.institutions.item.post",
                        "inventory-storage.location-units.institutions.item.put",
                        "inventory-storage.location-units.institutions.item.delete",
                        "inventory-storage.location-units.campuses.collection.get",
                        "inventory-storage.location-units.campuses.item.get",
                        "inventory-storage.location-units.campuses.item.post",
                        "inventory-storage.location-units.campuses.item.put",
                        "inventory-storage.location-units.campuses.item.delete",
                        "inventory-storage.location-units.libraries.collection.get",
                        "inventory-storage.location-units.libraries.item.get",
                        "inventory-storage.location-units.libraries.item.post",
                        "inventory-storage.location-units.libraries.item.put",
                        "inventory-storage.location-units.libraries.item.delete",
                        "inventory-storage.locations.collection.get",
                        "inventory-storage.locations.item.get",
                        "inventory-storage.locations.item.post",
                        "inventory-storage.locations.item.put",
                        "inventory-storage.locations.item.delete",
                        "inventory-storage.instance-relationships.collection.get",
                        "inventory-storage.instance-relationships.item.get",
                        "inventory-storage.instance-relationships.item.post",
                        "inventory-storage.instance-relationships.item.put",
                        "inventory-storage.instance-relationships.item.delete",
                        "inventory-storage.instance-relationship-types.collection.get",
                        "inventory-storage.instance-relationship-types.item.get",
                        "inventory-storage.instance-relationship-types.item.post",
                        "inventory-storage.instance-relationship-types.item.put",
                        "inventory-storage.instance-relationship-types.item.delete",
                        "inventory-storage.identifier-types.collection.get",
                        "inventory-storage.identifier-types.item.get",
                        "inventory-storage.identifier-types.item.post",
                        "inventory-storage.identifier-types.item.put",
                        "inventory-storage.identifier-types.item.delete",
                        "inventory-storage.contributor-types.collection.get",
                        "inventory-storage.contributor-types.item.get",
                        "inventory-storage.contributor-types.item.post",
                        "inventory-storage.contributor-types.item.put",
                        "inventory-storage.contributor-types.item.delete",
                        "inventory-storage.contributor-name-types.collection.get",
                        "inventory-storage.contributor-name-types.item.get",
                        "inventory-storage.contributor-name-types.item.post",
                        "inventory-storage.contributor-name-types.item.put",
                        "inventory-storage.contributor-name-types.item.delete",
                        "inventory-storage.record-bulk.ids.get",
                        "inventory-storage.instance-formats.collection.get",
                        "inventory-storage.instance-formats.item.get",
                        "inventory-storage.instance-formats.item.post",
                        "inventory-storage.instance-formats.item.put",
                        "inventory-storage.instance-formats.item.delete",
                        "inventory-storage.instance-types.collection.get",
                        "inventory-storage.instance-types.item.get",
                        "inventory-storage.instance-types.item.post",
                        "inventory-storage.instance-types.item.put",
                        "inventory-storage.instance-types.item.delete",
                        "inventory-storage.nature-of-content-terms.collection.get",
                        "inventory-storage.nature-of-content-terms.item.get",
                        "inventory-storage.nature-of-content-terms.item.post",
                        "inventory-storage.nature-of-content-terms.item.put",
                        "inventory-storage.nature-of-content-terms.item.delete",
                        "inventory-storage.classification-types.collection.get",
                        "inventory-storage.classification-types.item.get",
                        "inventory-storage.classification-types.item.post",
                        "inventory-storage.classification-types.item.put",
                        "inventory-storage.classification-types.item.delete",
                        "inventory-storage.alternative-title-types.collection.get",
                        "inventory-storage.alternative-title-types.item.get",
                        "inventory-storage.alternative-title-types.item.post",
                        "inventory-storage.alternative-title-types.item.put",
                        "inventory-storage.alternative-title-types.item.delete",
                        "inventory-storage.modes-of-issuance.collection.get",
                        "inventory-storage.modes-of-issuance.item.get",
                        "inventory-storage.modes-of-issuance.item.post",
                        "inventory-storage.modes-of-issuance.item.put",
                        "inventory-storage.modes-of-issuance.item.delete",
                        "inventory-storage.instance-statuses.collection.get",
                        "inventory-storage.instance-statuses.item.get",
                        "inventory-storage.instance-statuses.item.post",
                        "inventory-storage.instance-statuses.item.put",
                        "inventory-storage.instance-statuses.item.delete",
                        "inventory-storage.electronic-access-relationships.collection.get",
                        "inventory-storage.electronic-access-relationships.item.get",
                        "inventory-storage.electronic-access-relationships.item.post",
                        "inventory-storage.electronic-access-relationships.item.put",
                        "inventory-storage.electronic-access-relationships.item.delete",
                        "inventory-storage.statistical-code-types.collection.get",
                        "inventory-storage.statistical-code-types.item.get",
                        "inventory-storage.statistical-code-types.item.post",
                        "inventory-storage.statistical-code-types.item.put",
                        "inventory-storage.statistical-code-types.item.delete",
                        "inventory-storage.statistical-codes.collection.get",
                        "inventory-storage.statistical-codes.item.get",
                        "inventory-storage.statistical-codes.item.post",
                        "inventory-storage.statistical-codes.item.put",
                        "inventory-storage.statistical-codes.item.delete",
                        "inventory-storage.ill-policies.collection.get",
                        "inventory-storage.ill-policies.item.get",
                        "inventory-storage.ill-policies.item.post",
                        "inventory-storage.ill-policies.item.put",
                        "inventory-storage.ill-policies.item.delete",
                        "inventory-storage.holdings-types.collection.get",
                        "inventory-storage.holdings-types.item.get",
                        "inventory-storage.holdings-types.item.post",
                        "inventory-storage.holdings-types.item.put",
                        "inventory-storage.holdings-types.item.delete",
                        "inventory-storage.call-number-types.collection.get",
                        "inventory-storage.call-number-types.item.get",
                        "inventory-storage.call-number-types.item.post",
                        "inventory-storage.call-number-types.item.put",
                        "inventory-storage.call-number-types.item.delete",
                        "inventory-storage.instance-note-types.collection.get",
                        "inventory-storage.instance-note-types.item.get",
                        "inventory-storage.instance-note-types.item.post",
                        "inventory-storage.instance-note-types.item.put",
                        "inventory-storage.instance-note-types.item.delete",
                        "inventory-storage.holdings-note-types.collection.get",
                        "inventory-storage.holdings-note-types.item.get",
                        "inventory-storage.holdings-note-types.item.post",
                        "inventory-storage.holdings-note-types.item.put",
                        "inventory-storage.holdings-note-types.item.delete",
                        "inventory-storage.item-note-types.collection.get",
                        "inventory-storage.item-note-types.item.get",
                        "inventory-storage.item-note-types.item.post",
                        "inventory-storage.item-note-types.item.put",
                        "inventory-storage.item-note-types.item.delete",
                        "inventory-storage.item-damaged-statuses.collection.get",
                        "inventory-storage.item-damaged-statuses.item.get",
                        "inventory-storage.item-damaged-statuses.item.post",
                        "inventory-storage.item-damaged-statuses.item.put",
                        "inventory-storage.item-damaged-statuses.item.delete",
                        "inventory-storage.service-points.collection.get",
                        "inventory-storage.service-points.item.get",
                        "inventory-storage.service-points.item.post",
                        "inventory-storage.service-points.item.put",
                        "inventory-storage.service-points.item.delete",
                        "inventory-storage.service-points-users.collection.get",
                        "inventory-storage.service-points-users.item.get",
                        "inventory-storage.service-points-users.item.post",
                        "inventory-storage.service-points-users.item.put",
                        "inventory-storage.service-points-users.item.delete",
                        "inventory-storage.hrid-settings.item.get",
                        "inventory-storage.hrid-settings.item.put",
                        "inventory-storage.preceding-succeeding-titles.collection.get",
                        "inventory-storage.preceding-succeeding-titles.item.get",
                        "inventory-storage.preceding-succeeding-titles.item.post",
                        "inventory-storage.preceding-succeeding-titles.item.put",
                        "inventory-storage.preceding-succeeding-titles.item.delete",
                        "inventory-storage.oai-pmh-view.instances.collection.get",
                        "inventory-storage.oai-pmh-view.updatedinstanceids.collection.get",
                        "inventory-storage.oai-pmh-view.enrichedinstances.collection.post",
                        "inventory-storage.holdings-sources.collection.get",
                        "inventory-storage.holdings-sources.item.get",
                        "inventory-storage.holdings-sources.item.post",
                        "inventory-storage.holdings-sources.item.get",
                        "inventory-storage.holdings-sources.item.put",
                        "inventory-storage.holdings-sources.item.delete",
                        "inventory-storage.bound-with-parts.collection.get",
                        "inventory-storage.bound-with-parts.item.get",
                        "inventory-storage.bound-with-parts.item.post",
                        "inventory-storage.bound-with-parts.item.put",
                        "inventory-storage.bound-with-parts.item.delete",
                        "inventory-storage.inventory-hierarchy.updated-instances-ids.collection.get",
                        "inventory-storage.inventory-hierarchy.items-and-holdings.collection.post",
                        "inventory-storage.inventory-view.instances.collection.get",
                        "inventory-storage.inventory-view.instance-set.get",
                        "inventory-storage.inventory-hierarchy.items-and-holdings.collection.post",
                        "inventory-storage.instance.reindex.item.delete",
                        "inventory-storage.instance.reindex.item.get",
                        "inventory-storage.instance.reindex.post",
                        "inventory-storage.instance.reindex.collection.get",
                        "inventory-storage.instance.iteration.post",
                        "inventory-storage.instance.iteration.item.get",
                        "inventory-storage.instance.iteration.item.delete",
                        "inventory-storage.migration.job.item.delete",
                        "inventory-storage.migration.job.post",
                        "inventory-storage.migration.job.item.get",
                        "inventory-storage.migration.item.get"
                    ]
                }
            ],
            "launchDescriptor": {
                "env": [
                    {
                        "name": "JAVA_OPTIONS",
                        "value": "-XX:MaxRAMPercentage=66.0"
                    },
                    {
                        "name": "ENV",
                        "value": "folio"
                    },
                    {
                        "name": "DB_HOST",
                        "value": "postgres"
                    },
                    {
                        "name": "DB_PORT",
                        "value": "5432"
                    },
                    {
                        "name": "DB_USERNAME",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_PASSWORD",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_DATABASE",
                        "value": "okapi_modules"
                    },
                    {
                        "name": "DB_QUERYTIMEOUT",
                        "value": "60000"
                    },
                    {
                        "name": "DB_CHARSET",
                        "value": "UTF-8"
                    },
                    {
                        "name": "DB_MAXPOOLSIZE",
                        "value": "5"
                    },
                    {
                        "name": "DB_MAXSHAREDPOOLSIZE",
                        "value": "3"
                    },
                    {
                        "name": "DB_CONNECTIONRELEASEDELAY",
                        "value": "60000"
                    },
                    {
                        "name": "DB_RECONNECTATTEMPTS",
                        "value": "3"
                    },
                    {
                        "name": "DB_RECONNECTINTERVAL",
                        "value": "10000"
                    },
                    {
                        "name": "DB_EXPLAIN_QUERY_THRESHOLD",
                        "value": "1000000"
                    },
                    {
                        "name": "DB_ALLOW_SUPPRESS_OPTIMISTIC_LOCKING",
                        "value": "0001-01-01T00:00:00Z"
                    },
                    {
                        "name": "KAFKA_HOST",
                        "value": "kafka"
                    },
                    {
                        "name": "KAFKA_PORT",
                        "value": "9092"
                    },
                    {
                        "name": "REPLICATION_FACTOR",
                        "value": "1"
                    }
                ],
                "dockerArgs": {
                    "HostConfig": {
                        "Memory": 715827883,
                        "PortBindings": {
                            "8081/tcp": [
                                {
                                    "HostPort": "%p"
                                }
                            ]
                        }
                    }
                },
                "dockerPull": true,
                "dockerImage": "folioorg/mod-inventory-storage:27.1.0"
            }
        },
        {
            "id": "mod-pubsub-2.13.0",
            "name": "Pubsub",
            "provides": [
                {
                    "id": "pubsub-event-types",
                    "version": "0.1",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/pubsub/event-types",
                            "permissionsRequired": [
                                "pubsub.event-types.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/pubsub/event-types",
                            "permissionsRequired": [
                                "pubsub.event-types.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/pubsub/event-types/{eventTypeName}",
                            "permissionsRequired": [
                                "pubsub.event-types.get"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/pubsub/event-types/{eventTypeName}",
                            "permissionsRequired": [
                                "pubsub.event-types.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/pubsub/event-types/{eventTypeName}",
                            "permissionsRequired": [
                                "pubsub.event-types.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "pubsub-publishers",
                    "version": "0.1",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/pubsub/event-types/declare/publisher",
                            "permissionsRequired": [
                                "pubsub.publishers.post"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/pubsub/event-types/{eventTypeName}/publishers",
                            "permissionsRequired": [
                                "pubsub.publishers.delete"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/pubsub/event-types/{eventTypeName}/publishers",
                            "permissionsRequired": [
                                "pubsub.publishers.get"
                            ]
                        }
                    ]
                },
                {
                    "id": "pubsub-subscribers",
                    "version": "0.1",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/pubsub/event-types/declare/subscriber",
                            "permissionsRequired": [
                                "pubsub.subscribers.post"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/pubsub/event-types/{eventTypeName}/subscribers",
                            "permissionsRequired": [
                                "pubsub.subscribers.delete"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/pubsub/event-types/{eventTypeName}/subscribers",
                            "permissionsRequired": [
                                "pubsub.subscribers.get"
                            ]
                        }
                    ]
                },
                {
                    "id": "pubsub-audit",
                    "version": "0.1",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/pubsub/history",
                            "permissionsRequired": [
                                "pubsub.audit.history.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/pubsub/audit-messages/{eventId}/payload",
                            "permissionsRequired": [
                                "pubsub.audit.message.payload.get"
                            ]
                        }
                    ]
                },
                {
                    "id": "pubsub-publish",
                    "version": "0.1",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/pubsub/publish",
                            "permissionsRequired": [
                                "pubsub.publish.post"
                            ]
                        }
                    ]
                },
                {
                    "id": "pubsub-messaging-modules",
                    "version": "0.1",
                    "handlers": [
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/pubsub/messaging-modules",
                            "permissionsRequired": [
                                "pubsub.messaging-modules.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "_tenant",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/_/tenant",
                            "modulePermissions": [
                                "users.collection.get",
                                "users.item.post",
                                "users.item.put",
                                "login.item.post",
                                "perms.users.get",
                                "perms.users.item.post",
                                "perms.users.item.put",
                                "perms.users.assign.immutable"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE",
                                "GET"
                            ],
                            "pathPattern": "/_/tenant/{id}"
                        }
                    ],
                    "interfaceType": "system"
                }
            ],
            "requires": [
                {
                    "id": "users",
                    "version": "15.1 16.0"
                },
                {
                    "id": "login",
                    "version": "6.0 7.0"
                },
                {
                    "id": "permissions",
                    "version": "5.2"
                }
            ],
            "permissionSets": [
                {
                    "description": "Get Event Descriptor",
                    "displayName": "PubSub - get Event Descriptor",
                    "permissionName": "pubsub.event-types.get"
                },
                {
                    "description": "Post Event Descriptor",
                    "displayName": "PubSub - create new Event Type",
                    "permissionName": "pubsub.event-types.post"
                },
                {
                    "description": "Put Event Descriptor",
                    "displayName": "PubSub - update Event Descriptor for Event Type",
                    "permissionName": "pubsub.event-types.put"
                },
                {
                    "description": "Delete Event Descriptor",
                    "displayName": "PubSub - delete Event Type",
                    "permissionName": "pubsub.event-types.delete"
                },
                {
                    "description": "Post Publisher Descriptor",
                    "displayName": "PubSub - declare publisher",
                    "permissionName": "pubsub.publishers.post"
                },
                {
                    "description": "Delete Publisher",
                    "displayName": "PubSub - delete publisher declaration",
                    "permissionName": "pubsub.publishers.delete"
                },
                {
                    "description": "Get Publishers",
                    "displayName": "PubSub - get publishers",
                    "permissionName": "pubsub.publishers.get"
                },
                {
                    "description": "Post Subscriber Descriptor",
                    "displayName": "PubSub - declare subscriber",
                    "permissionName": "pubsub.subscribers.post"
                },
                {
                    "description": "Delete Subscriber",
                    "displayName": "PubSub - delete subscriber declaration",
                    "permissionName": "pubsub.subscribers.delete"
                },
                {
                    "description": "Get Subscribers",
                    "displayName": "PubSub - get subscribers",
                    "permissionName": "pubsub.subscribers.get"
                },
                {
                    "description": "Get history",
                    "displayName": "PubSub - get history",
                    "permissionName": "pubsub.audit.history.get"
                },
                {
                    "description": "Get audit message payload",
                    "displayName": "PubSub - get audit message payload",
                    "permissionName": "pubsub.audit.message.payload.get"
                },
                {
                    "description": "Publish event",
                    "displayName": "PubSub - publish event",
                    "permissionName": "pubsub.publish.post"
                },
                {
                    "description": "Delete publishers or subscribers",
                    "displayName": "PubSub - delete publishers and subscribers declarations",
                    "permissionName": "pubsub.messaging-modules.delete"
                },
                {
                    "replaces": [
                        "source-storage.events.post",
                        "source-records-manager.events.post",
                        "inventory.events.post",
                        "circulation.events.post",
                        "patron-blocks.events.post",
                        "audit-data.events.post"
                    ],
                    "description": "Post all events.",
                    "displayName": "PubSub - post event.",
                    "permissionName": "pubsub.events.post"
                }
            ],
            "launchDescriptor": {
                "env": [
                    {
                        "name": "JAVA_OPTIONS",
                        "value": "-XX:MaxRAMPercentage=66.0 -XX:+HeapDumpOnOutOfMemoryError"
                    },
                    {
                        "name": "DB_HOST",
                        "value": "postgres"
                    },
                    {
                        "name": "DB_PORT",
                        "value": "5432"
                    },
                    {
                        "name": "DB_USERNAME",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_PASSWORD",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_DATABASE",
                        "value": "okapi_modules"
                    },
                    {
                        "name": "DB_QUERYTIMEOUT",
                        "value": "60000"
                    },
                    {
                        "name": "DB_CHARSET",
                        "value": "UTF-8"
                    },
                    {
                        "name": "DB_MAXPOOLSIZE",
                        "value": "5"
                    },
                    {
                        "name": "KAFKA_HOST",
                        "value": "10.0.2.15"
                    },
                    {
                        "name": "KAFKA_PORT",
                        "value": "9092"
                    },
                    {
                        "name": "OKAPI_URL",
                        "value": "http://10.0.2.15:9130"
                    },
                    {
                        "name": "SYSTEM_USER_NAME",
                        "value": "pub-sub"
                    },
                    {
                        "name": "SYSTEM_USER_PASSWORD",
                        "value": "pubsub"
                    }
                ],
                "dockerArgs": {
                    "HostConfig": {
                        "Memory": 1073741824,
                        "PortBindings": {
                            "8081/tcp": [
                                {
                                    "HostPort": "%p"
                                }
                            ]
                        }
                    }
                },
                "dockerPull": true,
                "dockerImage": "folioorg/mod-pubsub:2.13.0"
            }
        },
        {
            "id": "mod-circulation-storage-17.2.0",
            "name": "Circulation Storage Module",
            "provides": [
                {
                    "id": "request-storage-batch",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/request-storage-batch/requests",
                            "permissionsRequired": [
                                "circulation-storage.request-batch.item.post"
                            ]
                        }
                    ]
                },
                {
                    "id": "loan-storage",
                    "version": "7.1",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/loan-storage/loans",
                            "permissionsRequired": [
                                "circulation-storage.loans.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/loan-storage/loans/{id}",
                            "permissionsRequired": [
                                "circulation-storage.loans.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/loan-storage/loans",
                            "permissionsRequired": [
                                "circulation-storage.loans.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/loan-storage/loans/{id}",
                            "permissionsRequired": [
                                "circulation-storage.loans.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/loan-storage/loans/{id}",
                            "permissionsRequired": [
                                "circulation-storage.loans.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/loan-storage/loans",
                            "permissionsRequired": [
                                "circulation-storage.loans.collection.delete"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/loan-storage/loan-history",
                            "permissionsRequired": [
                                "circulation-storage.loans-history.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/loan-storage/loans/anonymize/{userId}",
                            "permissionsRequired": [
                                "circulation-storage.loans.collection.anonymize.user.post"
                            ]
                        }
                    ]
                },
                {
                    "id": "anonymize-storage-loans",
                    "version": "0.1",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/anonymize-storage-loans",
                            "permissionsRequired": [
                                "anonymize-storage-loans.post"
                            ]
                        }
                    ]
                },
                {
                    "id": "circulation-rules-storage",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/circulation-rules-storage",
                            "permissionsRequired": [
                                "circulation-storage.circulation-rules.get"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/circulation-rules-storage",
                            "permissionsRequired": [
                                "circulation-storage.circulation-rules.put"
                            ]
                        }
                    ]
                },
                {
                    "id": "loan-policy-storage",
                    "version": "2.3",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/loan-policy-storage/loan-policies",
                            "permissionsRequired": [
                                "circulation-storage.loan-policies.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/loan-policy-storage/loan-policies/{id}",
                            "permissionsRequired": [
                                "circulation-storage.loan-policies.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/loan-policy-storage/loan-policies",
                            "permissionsRequired": [
                                "circulation-storage.loan-policies.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/loan-policy-storage/loan-policies/{id}",
                            "permissionsRequired": [
                                "circulation-storage.loan-policies.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/loan-policy-storage/loan-policies/{id}",
                            "permissionsRequired": [
                                "circulation-storage.loan-policies.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/loan-policy-storage/loan-policies",
                            "permissionsRequired": [
                                "circulation-storage.loan-policies.collection.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "request-storage",
                    "version": "6.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/request-storage/requests",
                            "permissionsRequired": [
                                "circulation-storage.requests.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/request-storage/requests/{id}",
                            "permissionsRequired": [
                                "circulation-storage.requests.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/request-storage/requests",
                            "permissionsRequired": [
                                "circulation-storage.requests.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/request-storage/requests/{id}",
                            "permissionsRequired": [
                                "circulation-storage.requests.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/request-storage/requests/{id}",
                            "permissionsRequired": [
                                "circulation-storage.requests.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/request-storage/requests",
                            "permissionsRequired": [
                                "circulation-storage.requests.collection.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "fixed-due-date-schedules-storage",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules",
                            "permissionsRequired": [
                                "circulation-storage.fixed-due-date-schedules.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules/{id}",
                            "permissionsRequired": [
                                "circulation-storage.fixed-due-date-schedules.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules",
                            "permissionsRequired": [
                                "circulation-storage.fixed-due-date-schedules.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules/{id}",
                            "permissionsRequired": [
                                "circulation-storage.fixed-due-date-schedules.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules/{id}",
                            "permissionsRequired": [
                                "circulation-storage.fixed-due-date-schedules.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules",
                            "permissionsRequired": [
                                "circulation-storage.fixed-due-date-schedules.collection.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "staff-slips-storage",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/staff-slips-storage/staff-slips",
                            "permissionsRequired": [
                                "circulation-storage.staff-slips.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/staff-slips-storage/staff-slips",
                            "permissionsRequired": [
                                "circulation-storage.staff-slips.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/staff-slips-storage/staff-slips",
                            "permissionsRequired": [
                                "circulation-storage.staff-slips.collection.delete"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/staff-slips-storage/staff-slips/{id}",
                            "permissionsRequired": [
                                "circulation-storage.staff-slips.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/staff-slips-storage/staff-slips/{id}",
                            "permissionsRequired": [
                                "circulation-storage.staff-slips.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/staff-slips-storage/staff-slips/{id}",
                            "permissionsRequired": [
                                "circulation-storage.staff-slips.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "cancellation-reason-storage",
                    "version": "1.2",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/cancellation-reason-storage/cancellation-reasons",
                            "permissionsRequired": [
                                "circulation-storage.cancellation-reasons.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/cancellation-reason-storage/cancellation-reasons/{id}",
                            "permissionsRequired": [
                                "circulation-storage.cancellation-reasons.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/cancellation-reason-storage/cancellation-reasons",
                            "permissionsRequired": [
                                "circulation-storage.cancellation-reasons.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/cancellation-reason-storage/cancellation-reasons/{id}",
                            "permissionsRequired": [
                                "circulation-storage.cancellation-reasons.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/cancellation-reason-storage/cancellation-reasons",
                            "permissionsRequired": [
                                "circulation-storage.cancellation-reasons.collection.delete"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/cancellation-reason-storage/cancellation-reasons/{id}",
                            "permissionsRequired": [
                                "circulation-storage.cancellation-reasons.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "patron-notice-policy-storage",
                    "version": "0.13",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/patron-notice-policy-storage/patron-notice-policies",
                            "permissionsRequired": [
                                "circulation-storage.patron-notice-policies.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/patron-notice-policy-storage/patron-notice-policies/{id}",
                            "permissionsRequired": [
                                "circulation-storage.patron-notice-policies.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/patron-notice-policy-storage/patron-notice-policies/{id}",
                            "permissionsRequired": [
                                "circulation-storage.patron-notice-policies.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/patron-notice-policy-storage/patron-notice-policies",
                            "permissionsRequired": [
                                "circulation-storage.patron-notice-policies.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/patron-notice-policy-storage/patron-notice-policies/{id}",
                            "permissionsRequired": [
                                "circulation-storage.patron-notice-policies.item.get"
                            ]
                        }
                    ]
                },
                {
                    "id": "request-policy-storage",
                    "version": "1.0",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/request-policy-storage/request-policies",
                            "permissionsRequired": [
                                "circulation-storage.request-policies.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/request-policy-storage/request-policies/{id}",
                            "permissionsRequired": [
                                "circulation-storage.request-policies.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/request-policy-storage/request-policies",
                            "modulePermissions": [
                                "inventory-storage.service-points.item.get",
                                "inventory-storage.service-points.collection.get"
                            ],
                            "permissionsRequired": [
                                "circulation-storage.request-policies.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/request-policy-storage/request-policies/{id}",
                            "modulePermissions": [
                                "inventory-storage.service-points.item.get",
                                "inventory-storage.service-points.collection.get"
                            ],
                            "permissionsRequired": [
                                "circulation-storage.request-policies.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/request-policy-storage/request-policies/{id}",
                            "permissionsRequired": [
                                "circulation-storage.request-policies.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/request-policy-storage/request-policies",
                            "permissionsRequired": [
                                "circulation-storage.request-policies.collection.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "actual-cost-record-storage",
                    "version": "0.9",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/actual-cost-record-storage/actual-cost-records",
                            "permissionsRequired": [
                                "actual-cost-record-storage.actual-cost-records.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/actual-cost-record-storage/actual-cost-records/{id}",
                            "permissionsRequired": [
                                "actual-cost-record-storage.actual-cost-records.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/actual-cost-record-storage/actual-cost-records",
                            "permissionsRequired": [
                                "actual-cost-record-storage.actual-cost-records.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/actual-cost-record-storage/actual-cost-records/{id}",
                            "permissionsRequired": [
                                "actual-cost-record-storage.actual-cost-records.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/actual-cost-record-storage/actual-cost-records/{id}",
                            "permissionsRequired": [
                                "actual-cost-record-storage.actual-cost-records.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "request-preference-storage",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/request-preference-storage/request-preference",
                            "permissionsRequired": [
                                "circulation-storage.request-preferences.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/request-preference-storage/request-preference/{id}",
                            "permissionsRequired": [
                                "circulation-storage.request-preferences.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/request-preference-storage/request-preference/{id}",
                            "permissionsRequired": [
                                "circulation-storage.request-preferences.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/request-preference-storage/request-preference",
                            "permissionsRequired": [
                                "circulation-storage.request-preferences.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/request-preference-storage/request-preference/{id}",
                            "permissionsRequired": [
                                "circulation-storage.request-preferences.item.get"
                            ]
                        }
                    ]
                },
                {
                    "id": "scheduled-notice-storage",
                    "version": "0.6",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/scheduled-notice-storage/scheduled-notices",
                            "permissionsRequired": [
                                "scheduled-notice-storage.scheduled-notices.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/scheduled-notice-storage/scheduled-notices/{id}",
                            "permissionsRequired": [
                                "scheduled-notice-storage.scheduled-notices.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/scheduled-notice-storage/scheduled-notices",
                            "permissionsRequired": [
                                "scheduled-notice-storage.scheduled-notices.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/scheduled-notice-storage/scheduled-notices/{id}",
                            "permissionsRequired": [
                                "scheduled-notice-storage.scheduled-notices.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/scheduled-notice-storage/scheduled-notices",
                            "permissionsRequired": [
                                "scheduled-notice-storage.scheduled-notices.collection.delete"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/scheduled-notice-storage/scheduled-notices/{id}",
                            "permissionsRequired": [
                                "scheduled-notice-storage.scheduled-notices.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "tlr-feature-toggle-job-storage",
                    "version": "0.1",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/tlr-feature-toggle-job-storage/tlr-feature-toggle-jobs",
                            "permissionsRequired": [
                                "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/tlr-feature-toggle-job-storage/tlr-feature-toggle-jobs",
                            "permissionsRequired": [
                                "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/tlr-feature-toggle-job-storage/tlr-feature-toggle-jobs/{id}",
                            "permissionsRequired": [
                                "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/tlr-feature-toggle-job-storage/tlr-feature-toggle-jobs/{id}",
                            "permissionsRequired": [
                                "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/tlr-feature-toggle-job-storage/tlr-feature-toggle-jobs/{id}",
                            "permissionsRequired": [
                                "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "_tenant",
                    "version": "2.0",
                    "handlers": [
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/_/tenant",
                            "modulePermissions": [
                                "pubsub.event-types.post",
                                "pubsub.publishers.post",
                                "pubsub.subscribers.post",
                                "inventory-storage.holdings.item.get",
                                "inventory-storage.holdings.collection.get",
                                "inventory-storage.items.item.get",
                                "inventory-storage.items.collection.get",
                                "inventory-storage.service-points.item.get",
                                "inventory-storage.service-points.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET",
                                "DELETE"
                            ],
                            "pathPattern": "/_/tenant/{id}"
                        }
                    ],
                    "interfaceType": "system"
                },
                {
                    "id": "patron-action-session-storage",
                    "version": "0.3",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/patron-action-session-storage/patron-action-sessions",
                            "permissionsRequired": [
                                "patron-action-session-storage.patron-action-sessions.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/patron-action-session-storage/patron-action-sessions/{id}",
                            "permissionsRequired": [
                                "patron-action-session-storage.patron-action-sessions.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/patron-action-session-storage/patron-action-sessions",
                            "permissionsRequired": [
                                "patron-action-session-storage.patron-action-sessions.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "PUT"
                            ],
                            "pathPattern": "/patron-action-session-storage/patron-action-sessions/{id}",
                            "permissionsRequired": [
                                "patron-action-session-storage.patron-action-sessions.item.put"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/patron-action-session-storage/patron-action-sessions/{id}",
                            "permissionsRequired": [
                                "patron-action-session-storage.patron-action-sessions.item.delete"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/patron-action-session-storage/expired-session-patron-ids",
                            "permissionsRequired": [
                                "patron-action-session-storage.expired-session-patron-ids.collection.get"
                            ]
                        }
                    ]
                },
                {
                    "id": "check-in-storage",
                    "version": "0.2",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/check-in-storage/check-ins",
                            "permissionsRequired": [
                                "check-in-storage.check-ins.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/check-in-storage/check-ins",
                            "permissionsRequired": [
                                "check-in-storage.check-ins.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/check-in-storage/check-ins/{id}",
                            "permissionsRequired": [
                                "check-in-storage.check-ins.item.get"
                            ]
                        }
                    ]
                },
                {
                    "id": "checkout-lock-storage",
                    "version": "0.1",
                    "handlers": [
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/check-out-lock-storage",
                            "permissionsRequired": [
                                "checkout-lock-storage.checkout-locks.collection.get"
                            ]
                        },
                        {
                            "methods": [
                                "GET"
                            ],
                            "pathPattern": "/check-out-lock-storage/{lockId}",
                            "permissionsRequired": [
                                "checkout-lock-storage.checkout-locks.item.get"
                            ]
                        },
                        {
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/check-out-lock-storage",
                            "permissionsRequired": [
                                "checkout-lock-storage.checkout-locks.item.post"
                            ]
                        },
                        {
                            "methods": [
                                "DELETE"
                            ],
                            "pathPattern": "/check-out-lock-storage/{lockId}",
                            "permissionsRequired": [
                                "checkout-lock-storage.checkout-locks.item.delete"
                            ]
                        }
                    ]
                },
                {
                    "id": "_timer",
                    "version": "1.0",
                    "handlers": [
                        {
                            "unit": "minute",
                            "delay": "2",
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/scheduled-request-expiration",
                            "modulePermissions": [
                                "pubsub.publish.post",
                                "configuration.entries.collection.get"
                            ]
                        },
                        {
                            "unit": "minute",
                            "delay": "5",
                            "methods": [
                                "POST"
                            ],
                            "pathPattern": "/tlr-feature-toggle-job/start",
                            "modulePermissions": [
                                "configuration.entries.collection.get"
                            ]
                        }
                    ],
                    "interfaceType": "system"
                }
            ],
            "requires": [
                {
                    "id": "item-storage",
                    "version": "5.0 6.0 7.0 8.2 9.0 10.0"
                },
                {
                    "id": "holdings-storage",
                    "version": "1.3 2.0 3.0 4.0 5.0 6.0"
                },
                {
                    "id": "pubsub-event-types",
                    "version": "0.1"
                },
                {
                    "id": "pubsub-publishers",
                    "version": "0.1"
                },
                {
                    "id": "pubsub-subscribers",
                    "version": "0.1"
                },
                {
                    "id": "pubsub-publish",
                    "version": "0.1"
                }
            ],
            "permissionSets": [
                {
                    "description": "Get check-ins collection from storage",
                    "displayName": "Check-in storage - get check-ins collection",
                    "permissionName": "check-in-storage.check-ins.collection.get"
                },
                {
                    "description": "Create a check-in record",
                    "displayName": "Check-in storage - create a check-in record",
                    "permissionName": "check-in-storage.check-ins.item.post"
                },
                {
                    "description": "Get individual check-in by id",
                    "displayName": "Check-in storage - get a check-in record by id",
                    "permissionName": "check-in-storage.check-ins.item.get"
                },
                {
                    "description": "Get loan collection from storage",
                    "displayName": "Circulation storage - get loan collection",
                    "permissionName": "circulation-storage.loans.collection.get"
                },
                {
                    "description": "Delete entire loan collection from storage",
                    "displayName": "Circulation storage - delete entire loan collection",
                    "permissionName": "circulation-storage.loans.collection.delete"
                },
                {
                    "description": "Get individual loan from storage",
                    "displayName": "Circulation storage - get individual loan",
                    "permissionName": "circulation-storage.loans.item.get"
                },
                {
                    "description": "Create individual loan in storage",
                    "displayName": "Circulation storage - create individual loan",
                    "permissionName": "circulation-storage.loans.item.post"
                },
                {
                    "description": "Modify loan in storage",
                    "displayName": "Circulation storage - modify loan",
                    "permissionName": "circulation-storage.loans.item.put"
                },
                {
                    "description": "Delete individual loan from storage",
                    "displayName": "Circulation storage - delete individual loan",
                    "permissionName": "circulation-storage.loans.item.delete"
                },
                {
                    "description": "Anonymize closed loans for a single user",
                    "displayName": "Circulation storage - anonymize loans for a user",
                    "permissionName": "circulation-storage.loans.collection.anonymize.user.post"
                },
                {
                    "description": "anonymize a list of loans",
                    "displayName": "circulation - anonymize loans",
                    "permissionName": "anonymize-storage-loans.post"
                },
                {
                    "description": "Get circulation rules from storage",
                    "displayName": "Circulation storage - get circulation rules",
                    "permissionName": "circulation-storage.circulation-rules.get"
                },
                {
                    "description": "Modify circulation rules in storage",
                    "displayName": "Circulation storage - modify circulation rules",
                    "permissionName": "circulation-storage.circulation-rules.put"
                },
                {
                    "description": "Get loan policy collection from storage",
                    "displayName": "Circulation storage - get loan policy collection",
                    "permissionName": "circulation-storage.loan-policies.collection.get"
                },
                {
                    "description": "Delete entire loan collection from storage",
                    "displayName": "Circulation storage - delete entire loan collection",
                    "permissionName": "circulation-storage.loan-policies.collection.delete"
                },
                {
                    "description": "Get individual loan policy from storage",
                    "displayName": "Circulation storage - get individual loan policy",
                    "permissionName": "circulation-storage.loan-policies.item.get"
                },
                {
                    "description": "Create individual loan policy in storage",
                    "displayName": "Circulation storage - create individual loan policy",
                    "permissionName": "circulation-storage.loan-policies.item.post"
                },
                {
                    "description": "Modify loan policy in storage",
                    "displayName": "Circulation storage - modify loan policy",
                    "permissionName": "circulation-storage.loan-policies.item.put"
                },
                {
                    "description": "Delete individual loan policy from storage",
                    "displayName": "Circulation storage - delete individual loan policy",
                    "permissionName": "circulation-storage.loan-policies.item.delete"
                },
                {
                    "description": "Get loan history collection from storage",
                    "displayName": "Circulation storage - get loan history collection",
                    "permissionName": "circulation-storage.loans-history.collection.get"
                },
                {
                    "description": "Get request collection from storage",
                    "displayName": "Circulation storage - get request collection",
                    "permissionName": "circulation-storage.requests.collection.get"
                },
                {
                    "description": "Delete entire request collection from storage",
                    "displayName": "Circulation storage - delete entire request collection",
                    "permissionName": "circulation-storage.requests.collection.delete"
                },
                {
                    "description": "Get individual request from storage",
                    "displayName": "Circulation storage - get individual request",
                    "permissionName": "circulation-storage.requests.item.get"
                },
                {
                    "description": "Create individual request in storage",
                    "displayName": "Circulation storage - create individual request",
                    "permissionName": "circulation-storage.requests.item.post"
                },
                {
                    "description": "Modify request in storage",
                    "displayName": "Circulation storage - modify request",
                    "permissionName": "circulation-storage.requests.item.put"
                },
                {
                    "description": "Modify requests in storage",
                    "displayName": "Circulation storage batch - modify requests",
                    "permissionName": "circulation-storage.request-batch.item.post"
                },
                {
                    "description": "Delete individual request from storage",
                    "displayName": "Circulation storage - delete individual request",
                    "permissionName": "circulation-storage.requests.item.delete"
                },
                {
                    "description": "Get fixed due date collection from storage",
                    "displayName": "Circulation storage - get fixed due date collection",
                    "permissionName": "circulation-storage.fixed-due-date-schedules.collection.get"
                },
                {
                    "description": "Get individual fixed due date from storage",
                    "displayName": "Circulation storage - get individual fixed due date",
                    "permissionName": "circulation-storage.fixed-due-date-schedules.item.get"
                },
                {
                    "description": "Create individual fixed due date from storage",
                    "displayName": "Circulation storage - create individual fixed due date",
                    "permissionName": "circulation-storage.fixed-due-date-schedules.item.post"
                },
                {
                    "description": "Modify individual fixed due date from storage",
                    "displayName": "Circulation storage - modify individual fixed due date",
                    "permissionName": "circulation-storage.fixed-due-date-schedules.item.put"
                },
                {
                    "description": "Delete individual fixed due date from storage",
                    "displayName": "Circulation storage - delete individual fixed due date",
                    "permissionName": "circulation-storage.fixed-due-date-schedules.item.delete"
                },
                {
                    "description": "Delete collection of fixed due date from storage",
                    "displayName": "Circulation storage - delete collection of fixed due date",
                    "permissionName": "circulation-storage.fixed-due-date-schedules.collection.delete"
                },
                {
                    "description": "Get staff slip collection from storage",
                    "displayName": "Circulation storage - get staff slip collection from storage",
                    "permissionName": "circulation-storage.staff-slips.collection.get"
                },
                {
                    "description": "Delete entire staff slip collection",
                    "displayName": "Circulation storage - delete entire staff slipp collection",
                    "permissionName": "circulation-storage.staff-slips.collection.delete"
                },
                {
                    "description": "Create individual staff slip in storage",
                    "displayName": "Circulation storage - create indavidual staff slip in storage",
                    "permissionName": "circulation-storage.staff-slips.item.post"
                },
                {
                    "description": "Get individual staff slip from storage",
                    "displayName": "Circulation storage - get indavidual staff slip from storage",
                    "permissionName": "circulation-storage.staff-slips.item.get"
                },
                {
                    "description": "Delete individual staff slip from storage",
                    "displayName": "Circulation storage - delete indavidual staff slip from storage",
                    "permissionName": "circulation-storage.staff-slips.item.delete"
                },
                {
                    "description": "Modify individual staff slip in storage",
                    "displayName": "Circulation storage - modify indavidual staff slip in storage",
                    "permissionName": "circulation-storage.staff-slips.item.put"
                },
                {
                    "description": "Get cancellation reasons from storage",
                    "displayName": "Circulation storage - get cancellation reasons collection",
                    "permissionName": "circulation-storage.cancellation-reasons.collection.get"
                },
                {
                    "description": "Get individual cancellation reason by id",
                    "displayName": "Circulation storage - get individual cancellation reason",
                    "permissionName": "circulation-storage.cancellation-reasons.item.get"
                },
                {
                    "description": "Create individual cancellation reason",
                    "displayName": "Circulation storage - create individual cancellation reason",
                    "permissionName": "circulation-storage.cancellation-reasons.item.post"
                },
                {
                    "description": "Modify individual cancellation reason by id",
                    "displayName": "Circulation storage - put individual cancellation reason",
                    "permissionName": "circulation-storage.cancellation-reasons.item.put"
                },
                {
                    "description": "Delete entire cancellation reasons collection",
                    "displayName": "Circulation storage - delete cancellation reasons",
                    "permissionName": "circulation-storage.cancellation-reasons.collection.delete"
                },
                {
                    "description": "Delete individual cancellation reason by id",
                    "displayName": "Circulation storage - delete individual cancellation reason",
                    "permissionName": "circulation-storage.cancellation-reasons.item.delete"
                },
                {
                    "description": "Post individual patron notice policy",
                    "displayName": "Circulation storage - post individual patron notice policy",
                    "permissionName": "circulation-storage.patron-notice-policies.item.post"
                },
                {
                    "description": "Put individual patron notice policy by id",
                    "displayName": "Circulation storage - put individual patron notice policy",
                    "permissionName": "circulation-storage.patron-notice-policies.item.put"
                },
                {
                    "description": "Delete patron notice policy by id",
                    "displayName": "Circulation storage - delete patron notice policy",
                    "permissionName": "circulation-storage.patron-notice-policies.item.delete"
                },
                {
                    "description": "Get patron notice policy collection from storage",
                    "displayName": "Circulation storage - get patron notice policy collection",
                    "permissionName": "circulation-storage.patron-notice-policies.collection.get"
                },
                {
                    "description": "Get individual patron notice policy by id",
                    "displayName": "Circulation storage - get individual patron notice policy",
                    "permissionName": "circulation-storage.patron-notice-policies.item.get"
                },
                {
                    "description": "Post individual request preference",
                    "displayName": "Circulation storage - post individual request preference",
                    "permissionName": "circulation-storage.request-preferences.item.post"
                },
                {
                    "description": "Put individual request preference by id",
                    "displayName": "Circulation storage - put individual request preference",
                    "permissionName": "circulation-storage.request-preferences.item.put"
                },
                {
                    "description": "Delete request preference by id",
                    "displayName": "Circulation storage - delete request preference",
                    "permissionName": "circulation-storage.request-preferences.item.delete"
                },
                {
                    "description": "Get request preference collection from storage",
                    "displayName": "Circulation storage - get request preference collection",
                    "permissionName": "circulation-storage.request-preferences.collection.get"
                },
                {
                    "description": "Get individual request preference by id",
                    "displayName": "Circulation storage - get individual request preference",
                    "permissionName": "circulation-storage.request-preferences.item.get"
                },
                {
                    "description": "Get scheduled notice collection from storage",
                    "displayName": "Circulation storage - get scheduled notice collection",
                    "permissionName": "scheduled-notice-storage.scheduled-notices.collection.get"
                },
                {
                    "description": "Get individual scheduled notice by id",
                    "displayName": "Circulation storage - get individual scheduled notice",
                    "permissionName": "scheduled-notice-storage.scheduled-notices.item.get"
                },
                {
                    "description": "Create individual scheduled notice",
                    "displayName": "Circulation storage - post individual scheduled notice",
                    "permissionName": "scheduled-notice-storage.scheduled-notices.item.post"
                },
                {
                    "description": "Put individual scheduled notice by id",
                    "displayName": "Circulation storage - put individual scheduled notice",
                    "permissionName": "scheduled-notice-storage.scheduled-notices.item.put"
                },
                {
                    "description": "Delete individual scheduled notice by id",
                    "displayName": "Circulation storage - delete individual scheduled notice",
                    "permissionName": "scheduled-notice-storage.scheduled-notices.item.delete"
                },
                {
                    "description": "Delete all scheduled notices from storage",
                    "displayName": "Circulation storage - delete all scheduled notices",
                    "permissionName": "scheduled-notice-storage.scheduled-notices.collection.delete"
                },
                {
                    "description": "Get patron action session collection from storage",
                    "displayName": "Circulation storage - get patron action session collection",
                    "permissionName": "patron-action-session-storage.patron-action-sessions.collection.get"
                },
                {
                    "description": "Get individual patron action session by id",
                    "displayName": "Circulation storage - get patron action session",
                    "permissionName": "patron-action-session-storage.patron-action-sessions.item.get"
                },
                {
                    "description": "Create individual patron action session",
                    "displayName": "Circulation storage - post patron action session",
                    "permissionName": "patron-action-session-storage.patron-action-sessions.item.post"
                },
                {
                    "description": "Put patron action session by id",
                    "displayName": "Circulation storage - put patron action session",
                    "permissionName": "patron-action-session-storage.patron-action-sessions.item.put"
                },
                {
                    "description": "Delete patron action session by id",
                    "displayName": "Circulation storage - delete patron action session",
                    "permissionName": "patron-action-session-storage.patron-action-sessions.item.delete"
                },
                {
                    "description": "Get expired session patron ids collection from storage",
                    "displayName": "Circulation storage - get expired session patron ids collection",
                    "permissionName": "patron-action-session-storage.expired-session-patron-ids.collection.get"
                },
                {
                    "description": "Entire set of permissions needed to use the circulation storage module",
                    "displayName": "Circulation storage module - all permissions",
                    "permissionName": "circulation-storage.all",
                    "subPermissions": [
                        "circulation-storage.loans.collection.get",
                        "circulation-storage.loans.item.get",
                        "circulation-storage.loans.item.post",
                        "circulation-storage.loans.item.put",
                        "circulation-storage.loans.item.delete",
                        "circulation-storage.loans.collection.delete",
                        "circulation-storage.loans.collection.anonymize.user.post",
                        "circulation-storage.loans-history.collection.get",
                        "circulation-storage.circulation-rules.get",
                        "circulation-storage.circulation-rules.put",
                        "circulation-storage.loan-policies.collection.get",
                        "circulation-storage.loan-policies.item.get",
                        "circulation-storage.loan-policies.item.post",
                        "circulation-storage.loan-policies.item.put",
                        "circulation-storage.loan-policies.item.delete",
                        "circulation-storage.loan-policies.collection.delete",
                        "circulation-storage.requests.collection.get",
                        "circulation-storage.requests.item.get",
                        "circulation-storage.requests.item.post",
                        "circulation-storage.requests.item.put",
                        "circulation-storage.requests.item.delete",
                        "circulation-storage.requests.collection.delete",
                        "circulation-storage.fixed-due-date-schedules.collection.delete",
                        "circulation-storage.fixed-due-date-schedules.item.delete",
                        "circulation-storage.fixed-due-date-schedules.item.put",
                        "circulation-storage.fixed-due-date-schedules.item.post",
                        "circulation-storage.fixed-due-date-schedules.item.get",
                        "circulation-storage.fixed-due-date-schedules.collection.get",
                        "circulation-storage.staff-slips.item.delete",
                        "circulation-storage.staff-slips.collection.delete",
                        "circulation-storage.staff-slips.collection.get",
                        "circulation-storage.staff-slips.item.post",
                        "circulation-storage.staff-slips.item.put",
                        "circulation-storage.staff-slips.item.get",
                        "circulation-storage.cancellation-reasons.collection.get",
                        "circulation-storage.cancellation-reasons.item.get",
                        "circulation-storage.cancellation-reasons.item.post",
                        "circulation-storage.cancellation-reasons.item.put",
                        "circulation-storage.cancellation-reasons.collection.delete",
                        "circulation-storage.cancellation-reasons.item.delete",
                        "circulation-storage.patron-notice-policies.item.post",
                        "circulation-storage.patron-notice-policies.item.put",
                        "circulation-storage.patron-notice-policies.item.delete",
                        "circulation-storage.patron-notice-policies.collection.get",
                        "circulation-storage.patron-notice-policies.item.get",
                        "circulation-storage.request-preferences.item.post",
                        "circulation-storage.request-preferences.item.put",
                        "circulation-storage.request-preferences.item.delete",
                        "circulation-storage.request-preferences.collection.get",
                        "circulation-storage.request-preferences.item.get",
                        "circulation-storage.request-policies.collection.get",
                        "circulation-storage.request-policies.item.get",
                        "circulation-storage.request-policies.collection.delete",
                        "circulation-storage.request-policies.item.delete",
                        "circulation-storage.request-policies.item.post",
                        "circulation-storage.request-policies.item.put",
                        "circulation-storage.request-batch.item.post",
                        "scheduled-notice-storage.scheduled-notices.collection.get",
                        "scheduled-notice-storage.scheduled-notices.item.get",
                        "scheduled-notice-storage.scheduled-notices.item.post",
                        "scheduled-notice-storage.scheduled-notices.item.put",
                        "scheduled-notice-storage.scheduled-notices.item.delete",
                        "scheduled-notice-storage.scheduled-notices.collection.delete",
                        "anonymize-storage-loans.post",
                        "patron-action-session-storage.patron-action-sessions.collection.get",
                        "patron-action-session-storage.patron-action-sessions.item.get",
                        "patron-action-session-storage.patron-action-sessions.item.post",
                        "patron-action-session-storage.patron-action-sessions.item.put",
                        "patron-action-session-storage.patron-action-sessions.item.delete",
                        "patron-action-session-storage.expired-session-patron-ids.collection.get",
                        "check-in-storage.check-ins.collection.get",
                        "check-in-storage.check-ins.item.post",
                        "check-in-storage.check-ins.item.get",
                        "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.post",
                        "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.collection.get",
                        "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.get",
                        "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.put",
                        "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.delete",
                        "actual-cost-record-storage.actual-cost-records.collection.get",
                        "actual-cost-record-storage.actual-cost-records.item.get",
                        "actual-cost-record-storage.actual-cost-records.item.post",
                        "actual-cost-record-storage.actual-cost-records.item.put",
                        "actual-cost-record-storage.actual-cost-records.item.delete",
                        "checkout-lock-storage.checkout-locks.item.post",
                        "checkout-lock-storage.checkout-locks.item.delete",
                        "checkout-lock-storage.checkout-locks.item.get",
                        "checkout-lock-storage.checkout-locks.collection.get"
                    ]
                },
                {
                    "description": "Get request policy collection from storage",
                    "displayName": "Circulation storage - get request policy collection",
                    "permissionName": "circulation-storage.request-policies.collection.get"
                },
                {
                    "description": "Delete entire request policy collection from storage",
                    "displayName": "Circulation storage - delete entire request policy collection",
                    "permissionName": "circulation-storage.request-policies.collection.delete"
                },
                {
                    "description": "Get individual request policy from storage",
                    "displayName": "Circulation storage - get individual request policy",
                    "permissionName": "circulation-storage.request-policies.item.get"
                },
                {
                    "description": "Create individual request policy in storage",
                    "displayName": "Circulation storage - create individual request policy",
                    "permissionName": "circulation-storage.request-policies.item.post"
                },
                {
                    "description": "Modify request policy in storage",
                    "displayName": "Circulation storage - modify individual request policy",
                    "permissionName": "circulation-storage.request-policies.item.put"
                },
                {
                    "description": "Delete individual request policy from storage",
                    "displayName": "Circulation storage - delete individual request policy",
                    "permissionName": "circulation-storage.request-policies.item.delete"
                },
                {
                    "description": "Create tlr feature toggle job",
                    "displayName": "Circulation storage - post tlr feature toggle job",
                    "permissionName": "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.post"
                },
                {
                    "description": "Get tlr feature toggle job collection",
                    "displayName": "Circulation storage - get tlr feature toggle job collection",
                    "permissionName": "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.collection.get"
                },
                {
                    "description": "Get tlr feature toggle job",
                    "displayName": "Circulation storage - get tlr feature toggle job",
                    "permissionName": "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.get"
                },
                {
                    "description": "Update tlr feature toggle job",
                    "displayName": "Circulation storage - put tlr feature toggle job",
                    "permissionName": "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.put"
                },
                {
                    "description": "Delete tlr feature toggle job",
                    "displayName": "Circulation storage - delete tlr feature toggle job",
                    "permissionName": "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.delete"
                },
                {
                    "description": "Create actual cost record",
                    "displayName": "Circulation storage - post actual cost record",
                    "permissionName": "actual-cost-record-storage.actual-cost-records.item.post"
                },
                {
                    "description": "Get actual cost record collection",
                    "displayName": "Circulation storage - get actual cost record collection",
                    "permissionName": "actual-cost-record-storage.actual-cost-records.collection.get"
                },
                {
                    "description": "Get actual cost record",
                    "displayName": "Circulation storage - get actual cost record",
                    "permissionName": "actual-cost-record-storage.actual-cost-records.item.get"
                },
                {
                    "description": "Update actual cost record",
                    "displayName": "Circulation storage - put actual cost record",
                    "permissionName": "actual-cost-record-storage.actual-cost-records.item.put"
                },
                {
                    "description": "Delete actual cost record",
                    "displayName": "Circulation storage - delete actual cost record",
                    "permissionName": "actual-cost-record-storage.actual-cost-records.item.delete"
                },
                {
                    "description": "create lock for the userId",
                    "displayName": "Circulation storage - create lock",
                    "permissionName": "checkout-lock-storage.checkout-locks.item.post"
                },
                {
                    "description": "Delete lock for the userId",
                    "displayName": "Circulation storage - delete lock",
                    "permissionName": "checkout-lock-storage.checkout-locks.item.delete"
                },
                {
                    "description": "get lock for the userId",
                    "displayName": "Circulation storage - get lock",
                    "permissionName": "checkout-lock-storage.checkout-locks.item.get"
                },
                {
                    "description": "get locks",
                    "displayName": "Circulation storage - get locks",
                    "permissionName": "checkout-lock-storage.checkout-locks.collection.get"
                }
            ],
            "launchDescriptor": {
                "env": [
                    {
                        "name": "JAVA_OPTIONS",
                        "value": "-XX:MaxRAMPercentage=66.0"
                    },
                    {
                        "name": "DB_HOST",
                        "value": "postgres"
                    },
                    {
                        "name": "DB_PORT",
                        "value": "5432"
                    },
                    {
                        "name": "DB_USERNAME",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_PASSWORD",
                        "value": "folio_admin"
                    },
                    {
                        "name": "DB_DATABASE",
                        "value": "okapi_modules"
                    },
                    {
                        "name": "DB_QUERYTIMEOUT",
                        "value": "60000"
                    },
                    {
                        "name": "DB_CHARSET",
                        "value": "UTF-8"
                    },
                    {
                        "name": "DB_MAXPOOLSIZE",
                        "value": "5"
                    },
                    {
                        "name": "KAFKA_HOST",
                        "value": "kafka"
                    },
                    {
                        "name": "KAFKA_PORT",
                        "value": "9092"
                    },
                    {
                        "name": "REPLICATION_FACTOR",
                        "value": "1"
                    },
                    {
                        "name": "ENV",
                        "value": "folio"
                    }
                ],
                "dockerArgs": {
                    "HostConfig": {
                        "Memory": 536870912,
                        "PortBindings": {
                            "8081/tcp": [
                                {
                                    "HostPort": "%p"
                                }
                            ]
                        }
                    }
                },
                "dockerPull": true,
                "dockerImage": "folioorg/mod-circulation-storage:17.2.0"
            }
        }
    ]
}